apiVersion: v1
items:
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: cache-service
  metadata:
    annotations:
      description: Red Hat Data Grid is an in-memory, distributed key/value store.
      iconClass: icon-datagrid
      openshift.io/display-name: Red Hat Cache Service
      openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html/red_hat_data_grid_for_openshift/
      openshift.io/long-description: Red Hat Data Grid Cache Service is an implementation
        of Data Grid for OpenShift that improves application speed and performance
        with minimal configuration required.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://www.redhat.com/en/services/support
      samples.operator.openshift.io/version: 4.12.0
      tags: database,datagrid
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
      template: cache-service
    name: cache-service
    namespace: openshift
    resourceVersion: "21780"
    uid: 68383674-6b37-4afa-91a5-8245006ef7f8
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    stringData:
      application-password: ${APPLICATION_PASSWORD}
      application-user: ${APPLICATION_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Provides a ping service for clustered applications.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Provides a service for accessing the application over HTTPS or
          Hot Rod protocol.
        service.alpha.openshift.io/serving-cert-secret-name: service-certs
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - name: hotrod
        port: 11222
        targetPort: 11222
      - name: https
        port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: ${{NUMBER_OF_INSTANCES}}
      selector:
        matchLabels:
          application: ${APPLICATION_NAME}
      serviceName: ${APPLICATION_NAME}-ping
      strategy:
        rollingParams:
          intervalSeconds: 20
          maxSurge: 1
          maxUnavailable: 1
          timeoutSeconds: 1200
          updatePeriodSeconds: 20
        type: Rolling
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SERVICE_NAME
              value: ${APPLICATION_NAME}
            - name: SERVICE_PROFILE
              value: cache-service
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  key: application-user
                  name: ${APPLICATION_NAME}
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  key: application-password
                  name: ${APPLICATION_NAME}
            - name: REPLICATION_FACTOR
              value: ${REPLICATION_FACTOR}
            - name: EVICTION_POLICY
              value: ${EVICTION_POLICY}
            image: ${IMAGE}
            livenessProbe:
              exec:
                command:
                - /opt/datagrid/bin/livenessProbe.sh
              failureThreshold: 5
              initialDelaySeconds: 15
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 10
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            - containerPort: 11222
              name: hotrod
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /opt/datagrid/bin/readinessProbe.sh
              failureThreshold: 5
              initialDelaySeconds: 17
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            resources:
              limits:
                memory: ${TOTAL_CONTAINER_MEM}Mi
              requests:
                cpu: "0.5"
                memory: ${TOTAL_CONTAINER_MEM}Mi
            volumeMounts:
            - mountPath: /opt/datagrid/standalone/data
              name: srv-data
            - mountPath: /var/run/secrets/java.io/keystores
              name: keystore-volume
            - mountPath: /var/run/secrets/openshift.io/serviceaccount
              name: service-certs
          terminationGracePeriodSeconds: 60
          volumes:
          - empty-dir: {}
            name: keystore-volume
          - name: service-certs
            secret:
              secretName: service-certs
      triggers:
      - type: ConfigChange
      volumeClaimTemplates:
      - metadata:
          name: srv-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
  parameters:
  - description: Specifies a name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: cache-service
  - description: Sets an image to bootstrap the service.
    name: IMAGE
    required: true
    value: registry.redhat.io/jboss-datagrid-7/datagrid73-openshift
  - description: Specifies how many instances of the application to create in the
      cluster.
    displayName: Number of Instances
    name: NUMBER_OF_INSTANCES
    required: true
    value: "1"
  - description: Specifies the number of copies for each data entry.
    displayName: Replication Factor
    name: REPLICATION_FACTOR
    required: true
    value: "1"
  - description: Defines the action to take when the cache size reaches the available
      memory.
    displayName: Eviction Policy
    name: EVICTION_POLICY
    required: true
    value: evict
  - description: Sets the total memory, in MiB, available to the application.
    displayName: Total Memory
    name: TOTAL_CONTAINER_MEM
    value: "512"
  - description: Specifies a username to authenticate client applications.
    displayName: Client User
    name: APPLICATION_USER
    required: true
  - description: Sets a password to authenticate client applications.
    displayName: Client Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: APPLICATION_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: cakephp-mysql-example
    template: cakephp-mysql-example
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/cakephp-ex/blob/master/README.md.
  metadata:
    annotations:
      description: |-
        An example CakePHP application with a MySQL database. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/cakephp-ex/blob/master/README.md.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
      iconClass: icon-php
      openshift.io/display-name: CakePHP + MySQL (Ephemeral)
      openshift.io/documentation-url: https://github.com/sclorg/cakephp-ex
      openshift.io/long-description: This template defines resources needed to develop
        a CakePHP application, including a build configuration, application deployment
        configuration, and database deployment configuration.  The database is stored
        in non-persistent storage, so this configuration should be used for experimental
        purposes only.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,php,cakephp
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: cakephp-mysql-example
    namespace: openshift
    resourceVersion: "21808"
    uid: ea6ddd56-180e-4d26-af72-9a6d82cb5286
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      cakephp-secret-token: ${CAKEPHP_SECRET_TOKEN}
      cakephp-security-salt: ${CAKEPHP_SECURITY_SALT}
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: ./vendor/bin/phpunit
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: COMPOSER_MIRROR
            value: ${COMPOSER_MIRROR}
          from:
            kind: ImageStreamTag
            name: php:${PHP_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        recreateParams:
          pre:
            execNewPod:
              command:
              - ./migrate-database.sh
              containerName: cakephp-mysql-example
            failurePolicy: Retry
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: DATABASE_ENGINE
              value: ${DATABASE_ENGINE}
            - name: DATABASE_NAME
              value: ${DATABASE_NAME}
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: CAKEPHP_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  key: cakephp-secret-token
                  name: ${NAME}
            - name: CAKEPHP_SECURITY_SALT
              valueFrom:
                secretKeyRef:
                  key: cakephp-security-salt
                  name: ${NAME}
            - name: OPCACHE_REVALIDATE_FREQ
              value: ${OPCACHE_REVALIDATE_FREQ}
            image: ' '
            livenessProbe:
              httpGet:
                path: /health.php
                port: 8080
              initialDelaySeconds: 30
              periodSeconds: 60
              timeoutSeconds: 3
            name: cakephp-mysql-example
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /health.php
                port: 8080
              initialDelaySeconds: 3
              periodSeconds: 60
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - cakephp-mysql-example
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mysql
        port: 3306
        targetPort: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: MYSQL_DATABASE
              value: ${DATABASE_NAME}
            - name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
              value: ${MYSQL_DEFAULT_AUTHENTICATION_PLUGIN}
            image: ' '
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: mysql
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}
                  -D ${DATABASE_NAME} -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_MYSQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: data
          volumes:
          - emptyDir: {}
            name: data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mysql
          from:
            kind: ImageStreamTag
            name: mysql:${MYSQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: cakephp-mysql-example
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of PHP image to be used (7.3-ubi7, 7.4-ubi8, or latest).
    displayName: PHP Version
    name: PHP_VERSION
    required: true
    value: 7.4-ubi8
  - description: Version of MySQL image to be used (8.0-el8 or latest).
    displayName: MySQL Version
    name: MYSQL_VERSION
    required: true
    value: 8.0-el8
  - description: Maximum amount of memory the CakePHP container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the MySQL container can use.
    displayName: Memory Limit (MySQL)
    name: MEMORY_MYSQL_LIMIT
    required: true
    value: 512Mi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/cakephp-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the CakePHP service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mysql
  - description: 'Database engine: postgresql, mysql or sqlite (default).'
    displayName: Database Engine
    name: DATABASE_ENGINE
    required: true
    value: mysql
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: default
  - displayName: Database User
    name: DATABASE_USER
    required: true
    value: cakephp
  - displayName: Database Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_PASSWORD
  - description: Set this to a long random string.
    displayName: CakePHP secret token
    from: '[\w]{50}'
    generate: expression
    name: CAKEPHP_SECRET_TOKEN
  - description: Security salt for session hash.
    displayName: CakePHP Security Salt
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: CAKEPHP_SECURITY_SALT
  - description: How often to check script timestamps for updates, in seconds. 0 will
      result in OPcache checking for updates on every request.
    displayName: OPcache Revalidation Frequency
    name: OPCACHE_REVALIDATE_FREQ
    value: "2"
  - description: The custom Composer mirror URL
    displayName: Custom Composer Mirror URL
    name: COMPOSER_MIRROR
  - description: 'The custom MySQL default authentication plugin (default: mysql_native_password),
      might be changed to caching_sha2_password once PHP client supports it.'
    displayName: MySQL authentication plugin
    name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
    value: mysql_native_password
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: cakephp-mysql-persistent
    template: cakephp-mysql-persistent
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/cakephp-ex/blob/master/README.md.
  metadata:
    annotations:
      description: An example CakePHP application with a MySQL database. For more
        information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/cakephp-ex/blob/master/README.md.
      iconClass: icon-php
      openshift.io/display-name: CakePHP + MySQL
      openshift.io/documentation-url: https://github.com/sclorg/cakephp-ex
      openshift.io/long-description: This template defines resources needed to develop
        a CakePHP application, including a build configuration, application deployment
        configuration, and database deployment configuration.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,php,cakephp
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: cakephp-mysql-persistent
    namespace: openshift
    resourceVersion: "21798"
    uid: beeb1c24-6684-4f3d-919b-8510027a41d0
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      cakephp-secret-token: ${CAKEPHP_SECRET_TOKEN}
      cakephp-security-salt: ${CAKEPHP_SECURITY_SALT}
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: ./vendor/bin/phpunit
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: COMPOSER_MIRROR
            value: ${COMPOSER_MIRROR}
          from:
            kind: ImageStreamTag
            name: php:${PHP_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        recreateParams:
          pre:
            execNewPod:
              command:
              - ./migrate-database.sh
              containerName: cakephp-mysql-persistent
            failurePolicy: Retry
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: DATABASE_ENGINE
              value: ${DATABASE_ENGINE}
            - name: DATABASE_NAME
              value: ${DATABASE_NAME}
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: CAKEPHP_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  key: cakephp-secret-token
                  name: ${NAME}
            - name: CAKEPHP_SECURITY_SALT
              valueFrom:
                secretKeyRef:
                  key: cakephp-security-salt
                  name: ${NAME}
            - name: OPCACHE_REVALIDATE_FREQ
              value: ${OPCACHE_REVALIDATE_FREQ}
            image: ' '
            livenessProbe:
              httpGet:
                path: /health.php
                port: 8080
              initialDelaySeconds: 30
              periodSeconds: 60
              timeoutSeconds: 3
            name: cakephp-mysql-persistent
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /health.php
                port: 8080
              initialDelaySeconds: 3
              periodSeconds: 60
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - cakephp-mysql-persistent
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mysql
        port: 3306
        targetPort: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: MYSQL_DATABASE
              value: ${DATABASE_NAME}
            - name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
              value: ${MYSQL_DEFAULT_AUTHENTICATION_PLUGIN}
            image: ' '
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: mysql
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}
                  -D ${DATABASE_NAME} -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_MYSQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mysql
          from:
            kind: ImageStreamTag
            name: mysql:${MYSQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: cakephp-mysql-persistent
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of PHP image to be used (7.3-ubi7, 7.4-ubi8, or latest).
    displayName: PHP Version
    name: PHP_VERSION
    required: true
    value: 7.4-ubi8
  - description: Version of MySQL image to be used (8.0-el8 or latest).
    displayName: MySQL Version
    name: MYSQL_VERSION
    required: true
    value: 8.0-el8
  - description: Maximum amount of memory the CakePHP container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the MySQL container can use.
    displayName: Memory Limit (MySQL)
    name: MEMORY_MYSQL_LIMIT
    required: true
    value: 512Mi
  - description: Volume space available for data, e.g. 512Mi, 2Gi
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/cakephp-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the CakePHP service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mysql
  - description: 'Database engine: postgresql, mysql or sqlite (default).'
    displayName: Database Engine
    name: DATABASE_ENGINE
    required: true
    value: mysql
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: default
  - displayName: Database User
    name: DATABASE_USER
    required: true
    value: cakephp
  - displayName: Database Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_PASSWORD
  - description: Set this to a long random string.
    displayName: CakePHP secret token
    from: '[\w]{50}'
    generate: expression
    name: CAKEPHP_SECRET_TOKEN
  - description: Security salt for session hash.
    displayName: CakePHP Security Salt
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: CAKEPHP_SECURITY_SALT
  - description: How often to check script timestamps for updates, in seconds. 0 will
      result in OPcache checking for updates on every request.
    displayName: OPcache Revalidation Frequency
    name: OPCACHE_REVALIDATE_FREQ
    value: "2"
  - description: The custom Composer mirror URL
    displayName: Custom Composer Mirror URL
    name: COMPOSER_MIRROR
  - description: 'The custom MySQL default authentication plugin (default: mysql_native_password),
      might be changed to caching_sha2_password once PHP client supports it.'
    displayName: MySQL authentication plugin
    name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
    value: mysql_native_password
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream8-desktop-large
    namespace: openshift
    resourceVersion: "1333766"
    uid: 21e1a61c-8c63-460c-b9bf-eb059067687e
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream8-desktop-medium
    namespace: openshift
    resourceVersion: "1333771"
    uid: 8ba2885e-b4f1-4342-aa79-473f9f67dd5d
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:46Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream8-desktop-small
    namespace: openshift
    resourceVersion: "1333779"
    uid: a7e239aa-5f0f-4294-a339-550c4bfc624f
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream8-desktop-tiny
    namespace: openshift
    resourceVersion: "1333784"
    uid: 34e9bd37-70a9-4325-b7e8-711ab35486ad
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream8-server-large
    namespace: openshift
    resourceVersion: "1333785"
    uid: df34c169-64a9-4467-a59f-9baa295fefdf
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream8-server-medium
    namespace: openshift
    resourceVersion: "1333786"
    uid: 4d3504ca-8d77-42a4-b1c9-3732d4e8155e
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream8-server-small
    namespace: openshift
    resourceVersion: "1333788"
    uid: 6107c37d-18f0-4e9a-b1ee-cf01caa3c55c
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 8 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream8: CentOS Stream 8 or higher
      openshift.io/display-name: CentOS Stream 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:8
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20220913.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/centos-stream8: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream8-server-tiny
    namespace: openshift
    resourceVersion: "1333790"
    uid: ff7b01bf-7c21-4daf-9d73-281b9854fb96
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream8-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: centos-stream8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:46Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream9-desktop-large
    namespace: openshift
    resourceVersion: "1333791"
    uid: 24166d08-ead0-4ac6-8b7a-da9a210b8000
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream9-desktop-medium
    namespace: openshift
    resourceVersion: "1333792"
    uid: e5ecb40a-942b-42b7-b26f-04a4160be57e
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream9-desktop-small
    namespace: openshift
    resourceVersion: "1333793"
    uid: 134a41b0-105f-4df9-9010-62c6c7d8f2b6
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos-stream9-desktop-tiny
    namespace: openshift
    resourceVersion: "1333795"
    uid: 723af7ae-d6e7-4f13-a10e-7bccbb465a8c
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream9-server-large
    namespace: openshift
    resourceVersion: "1333796"
    uid: 0db06749-cccc-4da6-b5a1-f2e91d9dd3ce
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream9-server-medium
    namespace: openshift
    resourceVersion: "1333797"
    uid: 12a819c4-daf9-405e-8738-86211f76add7
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream9-server-small
    namespace: openshift
    resourceVersion: "1333798"
    uid: 6135ce53-04fd-4ccb-a6ba-8e4ea1e1b37d
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS Stream 9 VM or newer. A PVC with the CentOS
        Stream disk image must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos-stream9: CentOS Stream 9 or higher
      openshift.io/display-name: CentOS Stream 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centosstream
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos-stream:9
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20220914.0.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/centos-stream9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos-stream9-server-tiny
    namespace: openshift
    resourceVersion: "1333799"
    uid: 9b14f138-f3b3-46c0-b2bb-e7479844ed07
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos-stream9-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: centos-stream9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos-stream9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos-stream9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos7-desktop-large
    namespace: openshift
    resourceVersion: "1333801"
    uid: adbd34b1-68db-42e7-9113-16e348acee88
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos7-desktop-medium
    namespace: openshift
    resourceVersion: "1333803"
    uid: 6ce67f75-2cf5-4638-b179-bcd3ec9e6b31
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos7-desktop-small
    namespace: openshift
    resourceVersion: "1333804"
    uid: 75d7a4fb-3fa4-49e2-915f-f5f5394d3719
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: centos7-desktop-tiny
    namespace: openshift
    resourceVersion: "1333805"
    uid: bb149aa9-25d4-48af-9f2c-ea6a809b5ff3
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos7-server-large
    namespace: openshift
    resourceVersion: "1333806"
    uid: 750aff11-5801-410e-9dd1-67d94d915dcf
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos7-server-medium
    namespace: openshift
    resourceVersion: "1333807"
    uid: 7db7b23e-bd13-4572-b14c-22d5a04ac65d
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos7-server-small
    namespace: openshift
    resourceVersion: "1333808"
    uid: 93c1de1e-ed45-46a0-a0e5-456dba24cd99
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for CentOS 7 VM or newer. A PVC with the CentOS disk image
        must be available.
      iconClass: icon-centos
      name.os.template.kubevirt.io/centos7.0: CentOS 7 or higher
      openshift.io/display-name: CentOS 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,centos
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/centos:7-2009
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.centos.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/centos7.0: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: centos7-server-tiny
    namespace: openshift
    resourceVersion: "1333809"
    uid: 37b690ad-9818-453a-909f-8b3accc267c6
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: centos7-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: centos7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: centos
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: centos7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: centos7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user centos
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: dancer-mysql-example
    template: dancer-mysql-example
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/dancer-ex/blob/master/README.md.
  metadata:
    annotations:
      description: |-
        An example Dancer application with a MySQL database. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/dancer-ex/blob/master/README.md.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
      iconClass: icon-perl
      openshift.io/display-name: Dancer + MySQL (Ephemeral)
      openshift.io/documentation-url: https://github.com/sclorg/dancer-ex
      openshift.io/long-description: This template defines resources needed to develop
        a Dancer based application, including a build configuration, application deployment
        configuration, and database deployment configuration.  The database is stored
        in non-persistent storage, so this configuration should be used for experimental
        purposes only.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,perl,dancer
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: dancer-mysql-example
    namespace: openshift
    resourceVersion: "21783"
    uid: d3e59030-d7a5-40f7-ada9-9a8385bd31e0
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
      keybase: ${SECRET_KEY_BASE}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: perl -I extlib/lib/perl5 -I lib t/*
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: CPAN_MIRROR
            value: ${CPAN_MIRROR}
          from:
            kind: ImageStreamTag
            name: perl:${PERL_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: MYSQL_DATABASE
              value: ${DATABASE_NAME}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  key: keybase
                  name: ${NAME}
            - name: PERL_APACHE2_RELOAD
              value: ${PERL_APACHE2_RELOAD}
            image: ' '
            livenessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: dancer-mysql-example
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - dancer-mysql-example
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mysql
        port: 3306
        targetPort: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: MYSQL_DATABASE
              value: ${DATABASE_NAME}
            - name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
              value: ${MYSQL_DEFAULT_AUTHENTICATION_PLUGIN}
            image: ' '
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: mysql
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}
                  -D ${DATABASE_NAME} -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_MYSQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: data
          volumes:
          - emptyDir: {}
            name: data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mysql
          from:
            kind: ImageStreamTag
            name: mysql:8.0-el8
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: dancer-mysql-example
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of Perl image to be used (5.30-el7, 5.30-ubi8, or latest).
    displayName: Version of Perl Image
    name: PERL_VERSION
    required: true
    value: 5.30-ubi8
  - description: Maximum amount of memory the Perl Dancer container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the MySQL container can use.
    displayName: Memory Limit (MySQL)
    name: MEMORY_MYSQL_LIMIT
    required: true
    value: 512Mi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/dancer-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Dancer service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: database
  - displayName: Database Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: DATABASE_USER
  - displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DATABASE_PASSWORD
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: sampledb
  - description: Set this to "true" to enable automatic reloading of modified Perl
      modules.
    displayName: Perl Module Reload
    name: PERL_APACHE2_RELOAD
  - description: Your secret key for verifying the integrity of signed cookies.
    displayName: Secret Key
    from: '[a-z0-9]{127}'
    generate: expression
    name: SECRET_KEY_BASE
  - description: The custom CPAN mirror URL
    displayName: Custom CPAN Mirror URL
    name: CPAN_MIRROR
  - description: 'The custom MySQL default authentication plugin (default: mysql_native_password),
      might be changed to caching_sha2_password once clients support it.'
    displayName: MySQL authentication plugin
    name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
    value: mysql_native_password
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: dancer-mysql-persistent
    template: dancer-mysql-persistent
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/dancer-ex/blob/master/README.md.
  metadata:
    annotations:
      description: An example Dancer application with a MySQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/dancer-ex/blob/master/README.md.
      iconClass: icon-perl
      openshift.io/display-name: Dancer + MySQL
      openshift.io/documentation-url: https://github.com/sclorg/dancer-ex
      openshift.io/long-description: This template defines resources needed to develop
        a Dancer based application, including a build configuration, application deployment
        configuration, and database deployment configuration.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,perl,dancer
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: dancer-mysql-persistent
    namespace: openshift
    resourceVersion: "21796"
    uid: f8ed1333-06c8-4ac1-8825-47d61d28a881
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
      keybase: ${SECRET_KEY_BASE}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: perl -I extlib/lib/perl5 -I lib t/*
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: CPAN_MIRROR
            value: ${CPAN_MIRROR}
          from:
            kind: ImageStreamTag
            name: perl:${PERL_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: MYSQL_DATABASE
              value: ${DATABASE_NAME}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  key: keybase
                  name: ${NAME}
            - name: PERL_APACHE2_RELOAD
              value: ${PERL_APACHE2_RELOAD}
            image: ' '
            livenessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: dancer-mysql-persistent
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - dancer-mysql-persistent
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mysql
        port: 3306
        targetPort: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: MYSQL_DATABASE
              value: ${DATABASE_NAME}
            - name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
              value: ${MYSQL_DEFAULT_AUTHENTICATION_PLUGIN}
            image: ' '
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: mysql
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}
                  -D ${DATABASE_NAME} -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_MYSQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mysql
          from:
            kind: ImageStreamTag
            name: mysql:8.0-el8
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: dancer-mysql-persistent
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of Perl image to be used (5.30-el7, 5.30-ubi8, or latest).
    displayName: Version of Perl Image
    name: PERL_VERSION
    required: true
    value: 5.30-ubi8
  - description: Maximum amount of memory the Perl Dancer container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the MySQL container can use.
    displayName: Memory Limit (MySQL)
    name: MEMORY_MYSQL_LIMIT
    required: true
    value: 512Mi
  - description: Volume space available for data, e.g. 512Mi, 2Gi
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/dancer-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Dancer service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: database
  - displayName: Database Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: DATABASE_USER
  - displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DATABASE_PASSWORD
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: sampledb
  - description: Set this to "true" to enable automatic reloading of modified Perl
      modules.
    displayName: Perl Module Reload
    name: PERL_APACHE2_RELOAD
  - description: Your secret key for verifying the integrity of signed cookies.
    displayName: Secret Key
    from: '[a-z0-9]{127}'
    generate: expression
    name: SECRET_KEY_BASE
  - description: The custom CPAN mirror URL
    displayName: Custom CPAN Mirror URL
    name: CPAN_MIRROR
  - description: 'The custom MySQL default authentication plugin (default: mysql_native_password),
      might be changed to caching_sha2_password once clients support it.'
    displayName: MySQL authentication plugin
    name: MYSQL_DEFAULT_AUTHENTICATION_PLUGIN
    value: mysql_native_password
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: datagrid-service
  metadata:
    annotations:
      description: Red Hat Data Grid is an in-memory, distributed key/value store.
      iconClass: icon-datagrid
      openshift.io/display-name: Red Hat Data Grid Service
      openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html/red_hat_data_grid_for_openshift/
      openshift.io/long-description: Red Hat Data Grid Service provides a fully customizable
        implementation of Data Grid for OpenShift that is stable, persistent, and
        elastically scalable.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://www.redhat.com/en/services/support
      samples.operator.openshift.io/version: 4.12.0
      tags: database,datagrid
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
      template: datagrid-service
    name: datagrid-service
    namespace: openshift
    resourceVersion: "21801"
    uid: 1a38e466-b773-4a4f-a494-0c88084e2ed8
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    stringData:
      application-password: ${APPLICATION_PASSWORD}
      application-user: ${APPLICATION_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Provides a ping service for clustered applications.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Provides a service for accessing the application over HTTPS or
          Hot Rod protocol.
        service.alpha.openshift.io/serving-cert-secret-name: service-certs
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - name: hotrod
        port: 11222
        targetPort: 11222
      - name: https
        port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: ${{NUMBER_OF_INSTANCES}}
      selector:
        matchLabels:
          application: ${APPLICATION_NAME}
      serviceName: ${APPLICATION_NAME}-ping
      strategy:
        rollingParams:
          intervalSeconds: 20
          maxSurge: 1
          maxUnavailable: 1
          timeoutSeconds: 1200
          updatePeriodSeconds: 20
        type: Rolling
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SERVICE_NAME
              value: ${APPLICATION_NAME}
            - name: SERVICE_PROFILE
              value: datagrid-service
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  key: application-user
                  name: ${APPLICATION_NAME}
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  key: application-password
                  name: ${APPLICATION_NAME}
            image: ${IMAGE}
            livenessProbe:
              exec:
                command:
                - /opt/datagrid/bin/livenessProbe.sh
              failureThreshold: 5
              initialDelaySeconds: 15
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 10
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            - containerPort: 11222
              name: hotrod
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /opt/datagrid/bin/readinessProbe.sh
              failureThreshold: 5
              initialDelaySeconds: 17
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            resources:
              limits:
                memory: ${TOTAL_CONTAINER_MEM}Mi
              requests:
                cpu: "0.5"
                memory: ${TOTAL_CONTAINER_MEM}Mi
            volumeMounts:
            - mountPath: /opt/datagrid/standalone/data
              name: srv-data
            - mountPath: /var/run/secrets/java.io/keystores
              name: keystore-volume
            - mountPath: /var/run/secrets/openshift.io/serviceaccount
              name: service-certs
          terminationGracePeriodSeconds: 60
          volumes:
          - empty-dir: {}
            name: keystore-volume
          - name: service-certs
            secret:
              secretName: service-certs
      triggers:
      - type: ConfigChange
      volumeClaimTemplates:
      - metadata:
          name: srv-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: ${TOTAL_CONTAINER_STORAGE}Gi
  parameters:
  - description: Specifies a name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: datagrid-service
  - description: Sets an image to bootstrap the service.
    name: IMAGE
    required: true
    value: registry.redhat.io/jboss-datagrid-7/datagrid73-openshift
  - description: Specifies how many instances of the application to create in the
      cluster.
    displayName: Number of Instances
    name: NUMBER_OF_INSTANCES
    required: true
    value: "1"
  - description: Sets the total memory, in MiB, available to the application.
    displayName: Total Memory
    name: TOTAL_CONTAINER_MEM
    value: "512"
  - description: Sets the storage capacity, in GiB, of the persistence volume.
    displayName: Storage Capacity
    name: TOTAL_CONTAINER_STORAGE
    value: "1"
  - description: Specifies a username to authenticate client applications.
    displayName: Client User
    name: APPLICATION_USER
    required: true
  - description: Sets a password to authenticate client applications.
    displayName: Client Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: APPLICATION_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: django-psql-example
    template: django-psql-example
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/django-ex/blob/master/README.md.
  metadata:
    annotations:
      description: |-
        An example Django application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/django-ex/blob/master/README.md.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
      iconClass: icon-python
      openshift.io/display-name: Django + PostgreSQL (Ephemeral)
      openshift.io/documentation-url: https://github.com/sclorg/django-ex
      openshift.io/long-description: This template defines resources needed to develop
        a Django based application, including a build configuration, application deployment
        configuration, and database deployment configuration.  The database is stored
        in non-persistent storage, so this configuration should be used for experimental
        purposes only.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,python,django
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: django-psql-example
    namespace: openshift
    resourceVersion: "21860"
    uid: 6277bc72-cabc-4e56-9ebd-9ff1a877c43a
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
      django-secret-key: ${DJANGO_SECRET_KEY}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: ./manage.py test
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: PIP_INDEX_URL
            value: ${PIP_INDEX_URL}
          from:
            kind: ImageStreamTag
            name: python:${PYTHON_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: DATABASE_ENGINE
              value: ${DATABASE_ENGINE}
            - name: DATABASE_NAME
              value: ${DATABASE_NAME}
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: APP_CONFIG
              value: ${APP_CONFIG}
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: django-secret-key
                  name: ${NAME}
            image: ' '
            livenessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: django-psql-example
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - django-psql-example
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        port: 5432
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            image: ' '
            livenessProbe:
              exec:
                command:
                - /usr/libexec/check-container
                - --live
              initialDelaySeconds: 120
              timeoutSeconds: 10
            name: postgresql
            ports:
            - containerPort: 5432
            readinessProbe:
              exec:
                command:
                - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_POSTGRESQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: data
          volumes:
          - emptyDir: {}
            name: data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:${POSTGRESQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: django-psql-example
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of Python image to be used (3.6-ubi8, 3.8-ubi8, 3.9-ubi8,
      or latest).
    displayName: Version of Python Image
    name: PYTHON_VERSION
    required: true
    value: 3.9-ubi8
  - description: Version of PostgreSQL image to be used (10-el8, 12-el8, or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: 12-el8
  - description: Maximum amount of memory the Django container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the PostgreSQL container can use.
    displayName: Memory Limit (PostgreSQL)
    name: MEMORY_POSTGRESQL_LIMIT
    required: true
    value: 512Mi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/django-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Django service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: 'Database engine: postgresql, mysql or sqlite (default).'
    displayName: Database Engine
    name: DATABASE_ENGINE
    required: true
    value: postgresql
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: default
  - displayName: Database Username
    name: DATABASE_USER
    required: true
    value: django
  - displayName: Database User Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_PASSWORD
  - description: Relative path to Gunicorn configuration file (optional).
    displayName: Application Configuration File Path
    name: APP_CONFIG
  - description: Set this to a long random string.
    displayName: Django Secret Key
    from: '[\w]{50}'
    generate: expression
    name: DJANGO_SECRET_KEY
  - description: The custom PyPi index URL
    displayName: Custom PyPi Index URL
    name: PIP_INDEX_URL
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: django-psql-persistent
    template: django-psql-persistent
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/django-ex/blob/master/README.md.
  metadata:
    annotations:
      description: An example Django application with a PostgreSQL database. For more
        information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/django-ex/blob/master/README.md.
      iconClass: icon-python
      openshift.io/display-name: Django + PostgreSQL
      openshift.io/documentation-url: https://github.com/sclorg/django-ex
      openshift.io/long-description: This template defines resources needed to develop
        a Django based application, including a build configuration, application deployment
        configuration, and database deployment configuration.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,python,django
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: django-psql-persistent
    namespace: openshift
    resourceVersion: "21784"
    uid: 23f17eeb-e51c-4bfc-9aff-b04561291f11
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
      django-secret-key: ${DJANGO_SECRET_KEY}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: ./manage.py test
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: PIP_INDEX_URL
            value: ${PIP_INDEX_URL}
          from:
            kind: ImageStreamTag
            name: python:${PYTHON_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: DATABASE_ENGINE
              value: ${DATABASE_ENGINE}
            - name: DATABASE_NAME
              value: ${DATABASE_NAME}
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: APP_CONFIG
              value: ${APP_CONFIG}
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: django-secret-key
                  name: ${NAME}
            image: ' '
            livenessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: django-psql-persistent
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - django-psql-persistent
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        port: 5432
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            image: ' '
            livenessProbe:
              exec:
                command:
                - /usr/libexec/check-container
                - --live
              initialDelaySeconds: 120
              timeoutSeconds: 10
            name: postgresql
            ports:
            - containerPort: 5432
            readinessProbe:
              exec:
                command:
                - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_POSTGRESQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:${POSTGRESQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: django-psql-persistent
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of Python image to be used (3.6-ubi8, 3.8-ubi8, 3.9-ubi8,
      or latest).
    displayName: Version of Python Image
    name: PYTHON_VERSION
    required: true
    value: 3.9-ubi8
  - description: Version of PostgreSQL image to be used (10-el8, 12-el8, or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: 12-el8
  - description: Maximum amount of memory the Django container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the PostgreSQL container can use.
    displayName: Memory Limit (PostgreSQL)
    name: MEMORY_POSTGRESQL_LIMIT
    required: true
    value: 512Mi
  - description: Volume space available for data, e.g. 512Mi, 2Gi
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/django-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Django service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: 'Database engine: postgresql, mysql or sqlite (default).'
    displayName: Database Engine
    name: DATABASE_ENGINE
    required: true
    value: postgresql
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: default
  - displayName: Database Username
    name: DATABASE_USER
    required: true
    value: django
  - displayName: Database User Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_PASSWORD
  - description: Relative path to Gunicorn configuration file (optional).
    displayName: Application Configuration File Path
    name: APP_CONFIG
  - description: Set this to a long random string.
    displayName: Django Secret Key
    from: '[\w]{50}'
    generate: expression
    name: DJANGO_SECRET_KEY
  - description: The custom PyPi index URL
    displayName: Custom PyPi Index URL
    name: PIP_INDEX_URL
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: eap-xp3-basic-s2i
    xpaas: "1.0"
  message: A new JBoss EAP XP based application has been created in your project.
  metadata:
    annotations:
      description: Example of an application based on JBoss EAP XP. For more information
        about using this template, see https://github.com/jboss-container-images/jboss-eap-openshift-templates/blob/eap-xp3/README.adoc
      iconClass: icon-eap
      openshift.io/display-name: JBoss EAP XP 3.0 basic template
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: eap,eap-xp,javaee,java,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/
      template.openshift.io/long-description: This template defines resources needed
        to develop a JBoss Enterprise Application Platform XP based application, including
        a build configuration, application deployment configuration and secure communication
        using edge TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: "1.0"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: eap-xp3-basic-s2i
    namespace: openshift
    resourceVersion: "21779"
    uid: 8b01f84f-a528-444f-872c-2b0ac0ecc0df
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-build-artifacts:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: GALLEON_PROVISION_LAYERS
            value: ${GALLEON_PROVISION_LAYERS}
          - name: GALLEON_PROVISION_DEFAULT_FAT_SERVER
            value: "true"
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${EAP_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        dockerfile: |-
          FROM ${EAP_RUNTIME_IMAGE_NAME}
          COPY /server $JBOSS_HOME
          USER root
          RUN chown -R jboss:root $JBOSS_HOME && chmod -R ug+rwX $JBOSS_HOME
          USER jboss
          CMD $JBOSS_HOME/bin/openshift-launch.sh
        images:
        - from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
          paths:
          - destinationDir: .
            sourcePath: /s2i-output/server/
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: ${EAP_RUNTIME_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          imageOptimizationPolicy: SkipLayers
        type: Docker
      triggers:
      - imageChange:
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            com.company: Red_Hat
            com.redhat.component-name: EAP_XP
            com.redhat.component-type: application
            com.redhat.component-version: "3.0"
            com.redhat.product-name: Red_Hat_Runtimes
            com.redhat.product-version: 2021-Q3
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JGROUPS_PING_PROTOCOL
              value: dns.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: MQ_CLUSTER_PASSWORD
              value: ${MQ_CLUSTER_PASSWORD}
            - name: MQ_QUEUES
              value: ${MQ_QUEUES}
            - name: MQ_TOPICS
              value: ${MQ_TOPICS}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: AUTO_DEPLOY_EXPLODED
              value: ${AUTO_DEPLOY_EXPLODED}
            - name: ENABLE_GENERATE_DEFAULT_DATASOURCE
              value: ${ENABLE_GENERATE_DEFAULT_DATASOURCE}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
              initialDelaySeconds: 10
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
          terminationGracePeriodSeconds: 75
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: eap-xp3-basic-app
  - description: 'EAP XP imagestream tag to be used, example: jboss-eap-xp3-openjdk11-openshift:latest'
    displayName: EAP XP Image Name
    name: EAP_IMAGE_NAME
    required: true
    value: jboss-eap-xp3-openjdk11-openshift:latest
  - description: 'EAP XP Runtime imagestream tag to be used, example: jboss-eap-xp3-openjdk11-runtime-openshift:latest'
    displayName: EAP XP Runtime Image Name
    name: EAP_RUNTIME_IMAGE_NAME
    required: true
    value: jboss-eap-xp3-openjdk11-runtime-openshift:latest
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-developer/jboss-eap-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: xp-3.0.x
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: microprofile-config
  - description: Comma separated list of Galleon layers to provision a server.
    displayName: Galleon layers
    name: GALLEON_PROVISION_LAYERS
  - description: Enable ExampleDS datasource.
    displayName: Enable ExampleDS datasource
    name: ENABLE_GENERATE_DEFAULT_DATASOURCE
    value: "false"
  - description: Queue names, separated by commas. These queues will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all queues used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Queues
    name: MQ_QUEUES
  - description: Topic names, separated by commas. These topics will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all topics used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Topics
    name: MQ_TOPICS
  - description: AMQ cluster admin password
    displayName: AMQ cluster password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: MQ_CLUSTER_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Controls whether exploded deployment content should be automatically
      deployed
    displayName: Deploy Exploded Archives
    name: AUTO_DEPLOY_EXPLODED
    value: "false"
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Maven additional arguments to use for S2I builds
    displayName: Maven Additional Arguments
    name: MAVEN_ARGS_APPEND
    value: -Dcom.redhat.xpaas.repo.jbossorg
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
  - description: Container memory limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: eap-xp4-basic-s2i
    xpaas: "1.0"
  message: A new JBoss EAP XP based application has been created in your project.
  metadata:
    annotations:
      description: Example of an application based on JBoss EAP XP. For more information
        about using this template, see https://github.com/jboss-container-images/jboss-eap-openshift-templates/blob/eap-xp4/README.adoc
      iconClass: icon-eap
      openshift.io/display-name: JBoss EAP XP 4.0 basic template
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: eap,eap-xp,javaee,java,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/
      template.openshift.io/long-description: This template defines resources needed
        to develop a JBoss Enterprise Application Platform XP based application, including
        a build configuration, application deployment configuration and secure communication
        using edge TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: "1.0"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: eap-xp4-basic-s2i
    namespace: openshift
    resourceVersion: "21841"
    uid: 95afdbc3-fae3-4254-8722-6ae66e8e9688
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-build-artifacts:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: GALLEON_PROVISION_LAYERS
            value: ${GALLEON_PROVISION_LAYERS}
          - name: GALLEON_PROVISION_DEFAULT_FAT_SERVER
            value: "true"
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${EAP_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        dockerfile: |-
          FROM ${EAP_RUNTIME_IMAGE_NAME}
          COPY /server $JBOSS_HOME
          USER root
          RUN chown -R jboss:root $JBOSS_HOME && chmod -R ug+rwX $JBOSS_HOME
          USER jboss
          CMD $JBOSS_HOME/bin/openshift-launch.sh
        images:
        - from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
          paths:
          - destinationDir: .
            sourcePath: /s2i-output/server/
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: ${EAP_RUNTIME_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          imageOptimizationPolicy: SkipLayers
        type: Docker
      triggers:
      - imageChange:
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            com.company: Red_Hat
            deploymentConfig: ${APPLICATION_NAME}
            rht.comp: EAP_XP
            rht.comp_ver: "4.0"
            rht.prod_name: Red_Hat_Runtimes
            rht.prod_ver: 2022-Q1
            rht.subcomp_t: application
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JGROUPS_PING_PROTOCOL
              value: dns.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: MQ_CLUSTER_PASSWORD
              value: ${MQ_CLUSTER_PASSWORD}
            - name: MQ_QUEUES
              value: ${MQ_QUEUES}
            - name: MQ_TOPICS
              value: ${MQ_TOPICS}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: AUTO_DEPLOY_EXPLODED
              value: ${AUTO_DEPLOY_EXPLODED}
            - name: ENABLE_GENERATE_DEFAULT_DATASOURCE
              value: ${ENABLE_GENERATE_DEFAULT_DATASOURCE}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
              initialDelaySeconds: 10
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
          terminationGracePeriodSeconds: 75
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: eap-xp4-basic-app
  - description: 'EAP XP imagestream tag to be used, example: jboss-eap-xp4-openjdk11-openshift:latest'
    displayName: EAP XP Image Name
    name: EAP_IMAGE_NAME
    required: true
    value: jboss-eap-xp4-openjdk11-openshift:latest
  - description: 'EAP XP Runtime imagestream tag to be used, example: jboss-eap-xp4-openjdk11-runtime-openshift:latest'
    displayName: EAP XP Runtime Image Name
    name: EAP_RUNTIME_IMAGE_NAME
    required: true
    value: jboss-eap-xp4-openjdk11-runtime-openshift:latest
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-developer/jboss-eap-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: xp-4.0.x
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: microprofile-config
  - description: Comma separated list of Galleon layers to provision a server.
    displayName: Galleon layers
    name: GALLEON_PROVISION_LAYERS
  - description: Enable ExampleDS datasource.
    displayName: Enable ExampleDS datasource
    name: ENABLE_GENERATE_DEFAULT_DATASOURCE
    value: "false"
  - description: Queue names, separated by commas. These queues will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all queues used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Queues
    name: MQ_QUEUES
  - description: Topic names, separated by commas. These topics will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all topics used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Topics
    name: MQ_TOPICS
  - description: AMQ cluster admin password
    displayName: AMQ cluster password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: MQ_CLUSTER_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Controls whether exploded deployment content should be automatically
      deployed
    displayName: Deploy Exploded Archives
    name: AUTO_DEPLOY_EXPLODED
    value: "false"
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Maven additional arguments to use for S2I builds
    displayName: Maven Additional Arguments
    name: MAVEN_ARGS_APPEND
    value: -Dcom.redhat.xpaas.repo.jbossorg
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
  - description: Container memory limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: eap74-basic-s2i
    xpaas: 7.4.0
  message: A new JBoss EAP based application has been created in your project.
  metadata:
    annotations:
      description: An example JBoss Enterprise Application Platform application. For
        more information about using this template, see https://github.com/jboss-container-images/jboss-eap-7-openshift-image/blob/eap74/README.adoc
      iconClass: icon-eap
      openshift.io/display-name: JBoss EAP 7.4.0
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: eap,javaee,java,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/
      template.openshift.io/long-description: This template defines resources needed
        to develop a JBoss Enterprise Application Platform based application, including
        a build configuration, application deployment configuration and secure communication
        using edge TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.4.0
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: eap74-basic-s2i
    namespace: openshift
    resourceVersion: "21846"
    uid: 8c89c191-6185-4179-b232-4231b277814a
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-build-artifacts:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: GALLEON_PROVISION_LAYERS
            value: ${GALLEON_PROVISION_LAYERS}
          - name: GALLEON_PROVISION_DEFAULT_FAT_SERVER
            value: "true"
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${EAP_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        dockerfile: |-
          FROM ${EAP_RUNTIME_IMAGE_NAME}
          COPY /server $JBOSS_HOME
          USER root
          RUN chown -R jboss:root $JBOSS_HOME && chmod -R ug+rwX $JBOSS_HOME
          USER jboss
          CMD $JBOSS_HOME/bin/openshift-launch.sh
        images:
        - from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
          paths:
          - destinationDir: .
            sourcePath: /s2i-output/server/
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: ${EAP_RUNTIME_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          imageOptimizationPolicy: SkipLayers
        type: Docker
      triggers:
      - imageChange:
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            com.company: Red_Hat
            com.redhat.component-name: EAP
            com.redhat.component-type: application
            com.redhat.component-version: "7.4"
            com.redhat.product-name: Red_Hat_Runtimes
            com.redhat.product-version: 2021-Q2
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JGROUPS_PING_PROTOCOL
              value: dns.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: MQ_CLUSTER_PASSWORD
              value: ${MQ_CLUSTER_PASSWORD}
            - name: MQ_QUEUES
              value: ${MQ_QUEUES}
            - name: MQ_TOPICS
              value: ${MQ_TOPICS}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: AUTO_DEPLOY_EXPLODED
              value: ${AUTO_DEPLOY_EXPLODED}
            - name: ENABLE_GENERATE_DEFAULT_DATASOURCE
              value: ${ENABLE_GENERATE_DEFAULT_DATASOURCE}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
              initialDelaySeconds: 10
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
          terminationGracePeriodSeconds: 75
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: eap-app
  - description: 'Name of the EAP image to use, example: jboss-eap74-openjdk11-openshift:latest'
    displayName: EAP Image Name
    name: EAP_IMAGE_NAME
    required: true
    value: jboss-eap74-openjdk11-openshift:7.4.0
  - description: 'Name of the EAP image to use, example: jboss-eap74-openjdk11-runtime-openshift:latest'
    displayName: EAP Runtime Image Name
    name: EAP_RUNTIME_IMAGE_NAME
    required: true
    value: jboss-eap74-openjdk11-runtime-openshift:7.4.0
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-developer/jboss-eap-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: 7.4.x
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: kitchensink
  - description: Comma separated list of Galleon layers to provision a server.
    displayName: Galleon layers
    name: GALLEON_PROVISION_LAYERS
  - description: Enable ExampleDS datasource.
    displayName: Enable ExampleDS datasource
    name: ENABLE_GENERATE_DEFAULT_DATASOURCE
    value: "false"
  - description: Queue names, separated by commas. These queues will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all queues used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Queues
    name: MQ_QUEUES
  - description: Topic names, separated by commas. These topics will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all topics used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Topics
    name: MQ_TOPICS
  - description: AMQ cluster admin password
    displayName: AMQ cluster password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: MQ_CLUSTER_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Controls whether exploded deployment content should be automatically
      deployed
    displayName: Deploy Exploded Archives
    name: AUTO_DEPLOY_EXPLODED
    value: "false"
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Maven additional arguments to use for S2I builds
    displayName: Maven Additional Arguments
    name: MAVEN_ARGS_APPEND
    value: -Dcom.redhat.xpaas.repo.jbossorg
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
  - description: Container memory limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: eap74-https-s2i
    xpaas: 7.4.0
  message: 'A new JBoss EAP based application with SSL support has been created in
    your project. Please be sure to create the following secrets: "${HTTPS_SECRET}"
    containing the ${HTTPS_KEYSTORE} file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}"
    containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.'
  metadata:
    annotations:
      description: An example JBoss Enterprise Application Platform application configured
        with secure communication using HTTPS. For more information about using this
        template, see https://github.com/jboss-container-images/jboss-eap-7-openshift-image/blob/eap74/README.adoc
      iconClass: icon-eap
      openshift.io/display-name: JBoss EAP 7.4.0 with passthrough TLS
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: eap,javaee,java,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/
      template.openshift.io/long-description: This template defines resources needed
        to develop a JBoss Enterprise Application Platform application, including
        a build configuration, application deployment configuration and secure communication
        using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.4.0
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: eap74-https-s2i
    namespace: openshift
    resourceVersion: "21865"
    uid: 4452e53f-cc28-4d4b-9a91-672686186af2
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-build-artifacts:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: GALLEON_PROVISION_LAYERS
            value: ${GALLEON_PROVISION_LAYERS}
          - name: GALLEON_PROVISION_DEFAULT_FAT_SERVER
            value: "true"
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${EAP_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        dockerfile: |-
          FROM ${EAP_RUNTIME_IMAGE_NAME}
          COPY /server $JBOSS_HOME
          USER root
          RUN chown -R jboss:root $JBOSS_HOME && chmod -R ug+rwX $JBOSS_HOME
          USER jboss
          CMD $JBOSS_HOME/bin/openshift-launch.sh
        images:
        - from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
          paths:
          - destinationDir: .
            sourcePath: /s2i-output/server/
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: ${EAP_RUNTIME_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          imageOptimizationPolicy: SkipLayers
        type: Docker
      triggers:
      - imageChange:
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            com.company: Red_Hat
            com.redhat.component-name: EAP
            com.redhat.component-type: application
            com.redhat.component-version: "7.4"
            com.redhat.product-name: Red_Hat_Runtimes
            com.redhat.product-version: 2021-Q2
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JGROUPS_PING_PROTOCOL
              value: dns.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: MQ_CLUSTER_PASSWORD
              value: ${MQ_CLUSTER_PASSWORD}
            - name: MQ_QUEUES
              value: ${MQ_QUEUES}
            - name: MQ_TOPICS
              value: ${MQ_TOPICS}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: AUTO_DEPLOY_EXPLODED
              value: ${AUTO_DEPLOY_EXPLODED}
            - name: ENABLE_GENERATE_DEFAULT_DATASOURCE
              value: ${ENABLE_GENERATE_DEFAULT_DATASOURCE}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
              initialDelaySeconds: 10
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: eap-app
  - description: 'Name of the EAP image to use, example: jboss-eap74-openjdk11-openshift:latest'
    displayName: EAP Image Name
    name: EAP_IMAGE_NAME
    required: true
    value: jboss-eap74-openjdk11-openshift:7.4.0
  - description: 'Name of the EAP image to use, example: jboss-eap74-openjdk11-runtime-openshift:latest'
    displayName: EAP Runtime Image Name
    name: EAP_RUNTIME_IMAGE_NAME
    required: true
    value: jboss-eap74-openjdk11-runtime-openshift:7.4.0
  - description: 'Custom hostname for https service route.  Leave blank for default
      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-developer/jboss-eap-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: 7.4.x
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: kitchensink
  - description: Comma separated list of Galleon layers to provision a server.
    displayName: Galleon layers
    name: GALLEON_PROVISION_LAYERS
  - description: Enable ExampleDS datasource.
    displayName: Enable ExampleDS datasource
    name: ENABLE_GENERATE_DEFAULT_DATASOURCE
    value: "false"
  - description: Queue names, separated by commas. These queues will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all queues used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Queues
    name: MQ_QUEUES
  - description: Topic names, separated by commas. These topics will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all topics used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Topics
    name: MQ_TOPICS
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    required: true
    value: eap7-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: AMQ cluster admin password
    displayName: AMQ cluster password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: MQ_CLUSTER_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: eap7-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Controls whether exploded deployment content should be automatically
      deployed
    displayName: Deploy Exploded Archives
    name: AUTO_DEPLOY_EXPLODED
    value: "false"
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Maven additional arguments to use for S2I builds
    displayName: Maven Additional Arguments
    name: MAVEN_ARGS_APPEND
    value: -Dcom.redhat.xpaas.repo.jbossorg
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
  - description: Container memory limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: eap74-sso-s2i
    xpaas: 7.4.0
  message: 'A new JBoss EAP application with SSL and SSO support has been created
    in your project. Please be sure to create the following secrets: "${HTTPS_SECRET}"
    containing the ${HTTPS_KEYSTORE} file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}"
    containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.'
  metadata:
    annotations:
      description: An example JBoss Enterprise Application Platform application Single
        Sign-On application. For more information about using this template, see https://github.com/jboss-container-images/jboss-eap-7-openshift-image/blob/eap74/README.adoc
      iconClass: icon-eap
      openshift.io/display-name: JBoss EAP 7.4.0 + Single Sign-On with passthrough
        TLS
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: eap,javaee,java,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/
      template.openshift.io/long-description: This template defines resources needed
        to develop a JBoss Enterprise Application Platform based application, including
        a build configuration, application deployment configuration, integrated with
        Red Hat Single Sign-On and secure communication using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.4.0
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: eap74-sso-s2i
    namespace: openshift
    resourceVersion: "21802"
    uid: ef985185-e2d2-403a-9762-527706e8d3f5
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-build-artifacts
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-build-artifacts:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        images:
        - from:
            kind: ImageStreamTag
            name: ${SSO_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          paths:
          - destinationDir: ./${CONTEXT_DIR}/extensions/sso-adapters
            sourcePath: /opt/rh/rh-sso/client/eap7/.
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: CUSTOM_INSTALL_DIRECTORIES
            value: extensions/*
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: GALLEON_PROVISION_LAYERS
            value: ${GALLEON_PROVISION_LAYERS}
          - name: GALLEON_PROVISION_DEFAULT_FAT_SERVER
            value: "true"
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${EAP_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        dockerfile: |-
          FROM ${EAP_RUNTIME_IMAGE_NAME}
          COPY /server $JBOSS_HOME
          USER root
          RUN chown -R jboss:root $JBOSS_HOME && chmod -R ug+rwX $JBOSS_HOME
          USER jboss
          CMD $JBOSS_HOME/bin/openshift-launch.sh
        images:
        - from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
          paths:
          - destinationDir: .
            sourcePath: /s2i-output/server/
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: ${EAP_RUNTIME_IMAGE_NAME}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          imageOptimizationPolicy: SkipLayers
        type: Docker
      triggers:
      - imageChange:
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-build-artifacts:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            com.company: Red_Hat
            com.redhat.component-name: EAP
            com.redhat.component-type: application
            com.redhat.component-version: "7.4"
            com.redhat.product-name: Red_Hat_Runtimes
            com.redhat.product-version: 2021-Q2
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JGROUPS_PING_PROTOCOL
              value: dns.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HOSTNAME_HTTP
              value: ${HOSTNAME_HTTP}
            - name: HOSTNAME_HTTPS
              value: ${HOSTNAME_HTTPS}
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: MQ_CLUSTER_PASSWORD
              value: ${MQ_CLUSTER_PASSWORD}
            - name: MQ_QUEUES
              value: ${MQ_QUEUES}
            - name: MQ_TOPICS
              value: ${MQ_TOPICS}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: AUTO_DEPLOY_EXPLODED
              value: ${AUTO_DEPLOY_EXPLODED}
            - name: SSO_URL
              value: ${SSO_URL}
            - name: SSO_SERVICE_URL
              value: ${SSO_SERVICE_URL}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_USERNAME
              value: ${SSO_USERNAME}
            - name: SSO_PASSWORD
              value: ${SSO_PASSWORD}
            - name: SSO_PUBLIC_KEY
              value: ${SSO_PUBLIC_KEY}
            - name: SSO_BEARER_ONLY
              value: ${SSO_BEARER_ONLY}
            - name: SSO_SAML_KEYSTORE_SECRET
              value: ${SSO_SAML_KEYSTORE_SECRET}
            - name: SSO_SAML_KEYSTORE
              value: ${SSO_SAML_KEYSTORE}
            - name: SSO_SAML_KEYSTORE_DIR
              value: /etc/sso-saml-secret-volume
            - name: SSO_SAML_CERTIFICATE_NAME
              value: ${SSO_SAML_CERTIFICATE_NAME}
            - name: SSO_SAML_KEYSTORE_PASSWORD
              value: ${SSO_SAML_KEYSTORE_PASSWORD}
            - name: SSO_SECRET
              value: ${SSO_SECRET}
            - name: SSO_ENABLE_CORS
              value: ${SSO_ENABLE_CORS}
            - name: SSO_SAML_LOGOUT_PAGE
              value: ${SSO_SAML_LOGOUT_PAGE}
            - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
              value: ${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}
            - name: SSO_TRUSTSTORE
              value: ${SSO_TRUSTSTORE}
            - name: SSO_TRUSTSTORE_DIR
              value: /etc/sso-secret-volume
            - name: SSO_TRUSTSTORE_PASSWORD
              value: ${SSO_TRUSTSTORE_PASSWORD}
            - name: ENABLE_GENERATE_DEFAULT_DATASOURCE
              value: ${ENABLE_GENERATE_DEFAULT_DATASOURCE}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
              initialDelaySeconds: 10
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/sso-saml-secret-volume
              name: sso-saml-keystore-volume
              readOnly: true
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
            - mountPath: /etc/sso-secret-volume
              name: sso-truststore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: sso-saml-keystore-volume
            secret:
              secretName: ${SSO_SAML_KEYSTORE_SECRET}
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: eap-app
  - description: 'Name of the EAP image to use, example: jboss-eap74-openjdk11-openshift:latest'
    displayName: EAP Image Name
    name: EAP_IMAGE_NAME
    required: true
    value: jboss-eap74-openjdk11-openshift:7.4.0
  - description: 'Name of the EAP image to use, example: jboss-eap74-openjdk11-runtime-openshift:latest'
    displayName: EAP Runtime Image Name
    name: EAP_RUNTIME_IMAGE_NAME
    required: true
    value: jboss-eap74-openjdk11-runtime-openshift:7.4.0
  - description: 'Name of the SSO image to use, example: sso75-openshift-rhel8:latest'
    displayName: SSO Image Name
    name: SSO_IMAGE_NAME
    required: true
    value: sso75-openshift-rhel8:latest
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: Hostname for https service route (e.g. secure-eap-app-myproject.example.com).  Required
      for SSO-enabled applications.  This is added to the white list of redirects
      in the SSO server.
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
    required: true
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/redhat-developer/redhat-sso-quickstarts
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: 7.0.x-ose
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: Comma separated list of Galleon layers to provision a server.
    displayName: Galleon layers
    name: GALLEON_PROVISION_LAYERS
  - description: Enable ExampleDS datasource.
    displayName: Enable ExampleDS datasource
    name: ENABLE_GENERATE_DEFAULT_DATASOURCE
    value: "false"
  - description: Queue names, separated by commas. These queues will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all queues used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Queues
    name: MQ_QUEUES
  - description: Topic names, separated by commas. These topics will be automatically
      created when the broker starts. Also, they will be made accessible as JNDI resources
      in EAP. Note that all topics used by the application *must* be specified here
      in order to be created automatically on the remote AMQ broker.
    displayName: Topics
    name: MQ_TOPICS
  - description: AMQ cluster admin password
    displayName: AMQ cluster password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: MQ_CLUSTER_PASSWORD
    required: true
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    required: true
    value: eap7-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate (e.g. jboss)
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate (e.g. mykeystorepass)
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: eap7-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate (e.g. secret-key)
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate (e.g. password)
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Controls whether exploded deployment content should be automatically
      deployed
    displayName: Deploy Exploded Archives
    name: AUTO_DEPLOY_EXPLODED
    value: "false"
  - description: The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
      is the URL through which the user will be redirected when a login or token is
      required by the application.
    displayName: URL for SSO
    name: SSO_URL
    required: true
  - description: The URL for the internal SSO service, where secure-sso (the default)
      is the kubernetes service exposed by the SSO server.  This is used to create
      the application client(s) (see SSO_USERNAME).  This can also be the same as
      SSO_URL.
    displayName: URL for SSO (internal service)
    name: SSO_SERVICE_URL
    value: https://secure-sso:8443/auth
  - description: The SSO realm to which the application client(s) should be associated
      (e.g. demo).
    displayName: SSO Realm
    name: SSO_REALM
    required: true
  - description: The username used to access the SSO service.  This is used to create
      the appliction client(s) within the specified SSO realm. This should match the
      SSO_SERVICE_USERNAME specified through one of the sso70-* templates.
    displayName: SSO Username
    name: SSO_USERNAME
  - description: The password for the SSO service user.
    displayName: SSO Password
    name: SSO_PASSWORD
  - description: SSO Public Key. Public key is recommended to be passed into the template
      to avoid man-in-the-middle security vulnerability
    displayName: SSO Public Key
    name: SSO_PUBLIC_KEY
  - description: SSO Client Access Type
    displayName: SSO Bearer Only?
    name: SSO_BEARER_ONLY
  - description: List of directories from which archives will be copied into the deployment
      folder.  If unspecified, all archives in /target will be copied.
    displayName: Artifact Directories
    name: ARTIFACT_DIR
    value: app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target
  - description: The name of the secret containing the keystore file
    displayName: SSO SAML Keystore Secret
    name: SSO_SAML_KEYSTORE_SECRET
    value: eap7-app-secret
  - description: The name of the keystore file within the secret
    displayName: SSO SAML Keystore
    name: SSO_SAML_KEYSTORE
    value: keystore.jks
  - description: The name associated with the server certificate
    displayName: SSO SAML Certificate Name
    name: SSO_SAML_CERTIFICATE_NAME
    value: jboss
  - description: The password for the keystore and certificate
    displayName: SSO SAML Keystore Password
    name: SSO_SAML_KEYSTORE_PASSWORD
    value: mykeystorepass
  - description: The SSO Client Secret for Confidential Access
    displayName: SSO Client Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_SECRET
    required: true
  - description: Enable CORS for SSO applications
    displayName: Enable CORS for SSO?
    name: SSO_ENABLE_CORS
    value: "false"
  - description: SSO logout page for SAML applications
    displayName: SSO SAML Logout Page
    name: SSO_SAML_LOGOUT_PAGE
    value: /
  - description: If true SSL communication between EAP and the SSO Server will be
      insecure (i.e. certificate validation is disabled with curl)
    displayName: Disable SSL Validation in EAP->SSO communication
    name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
    value: "true"
  - description: The name of the truststore file within the secret (e.g. truststore.jks)
    displayName: SSO Trust Store
    name: SSO_TRUSTSTORE
  - description: The password for the truststore and certificate (e.g. mykeystorepass)
    displayName: SSO Trust Store Password
    name: SSO_TRUSTSTORE_PASSWORD
  - description: The name of the secret containing the truststore file (e.g. truststore-secret).
      Used for volume secretName
    displayName: SSO Trust Store Secret
    name: SSO_TRUSTSTORE_SECRET
    value: eap7-app-secret
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Maven additional arguments to use for S2I builds
    displayName: Maven Additional Arguments
    name: MAVEN_ARGS_APPEND
  - description: Container memory limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: fedora-desktop-large
    namespace: openshift
    resourceVersion: "1333810"
    uid: 3290efe8-5bcf-47e9-b8da-328143b012f7
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: fedora-desktop-medium
    namespace: openshift
    resourceVersion: "1333811"
    uid: c898f8b6-be07-4604-bf8b-efd651d3dab5
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: fedora-desktop-small
    namespace: openshift
    resourceVersion: "1333812"
    uid: 625d63fc-0b7e-451a-9b24-2f4d78bc1160
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: fedora-desktop-tiny
    namespace: openshift
    resourceVersion: "1333813"
    uid: 77509435-94dd-4455-9306-b83bda9b67c0
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: fedora-highperformance-large
    namespace: openshift
    resourceVersion: "1333814"
    uid: 78269f25-0684-4e94-9c45-c588c80af63d
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: fedora-highperformance-medium
    namespace: openshift
    resourceVersion: "1333815"
    uid: a467a5c4-5a2d-48a4-a6d0-4fcc93efeeaa
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: fedora-highperformance-small
    namespace: openshift
    resourceVersion: "1333816"
    uid: 76f904b7-c135-494c-b5a5-679e28014f66
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-highperformance-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: fedora-highperformance-tiny
    namespace: openshift
    resourceVersion: "1333818"
    uid: 91039c45-aefd-46c7-b626-94b2cb4bf9f7
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-highperformance-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: fedora-server-large
    namespace: openshift
    resourceVersion: "1333819"
    uid: 7362b0bd-1dcc-44ff-9214-124e52d757fb
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: fedora-server-medium
    namespace: openshift
    resourceVersion: "1333820"
    uid: 0432f6e1-8b1b-4b99-ae86-3b8a0ec263f8
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: fedora-server-small
    namespace: openshift
    resourceVersion: "1333821"
    uid: 291cac06-616c-498c-b9fc-d3bf1257b343
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Fedora 35 VM or newer. A PVC with the Fedora disk
        image must be available.
      iconClass: icon-fedora
      name.os.template.kubevirt.io/fedora35: Fedora 35 or higher
      name.os.template.kubevirt.io/fedora36: Fedora 35 or higher
      openshift.io/display-name: Fedora VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,fedora
      template.kubevirt.io/containerdisks: |
        quay.io/containerdisks/fedora:latest
        quay.io/containerdisks/fedora:35
        quay.io/containerdisks/fedora:36
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://dl.fedoraproject.org/pub/fedora/linux/releases/35/Cloud/x86_64/images/Fedora-Cloud-Base-35-1.2.x86_64.qcow2
        https://dl.fedoraproject.org/pub/fedora/linux/releases/36/Cloud/x86_64/images/Fedora-Cloud-Base-36-1.5.x86_64.qcow2
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Community
      template.kubevirt.io/provider-url: https://www.fedoraproject.org
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/fedora35: "true"
      os.template.kubevirt.io/fedora36: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: fedora-server-tiny
    namespace: openshift
    resourceVersion: "1333823"
    uid: b79a73a8-1ca3-4c12-9f0a-6b8609b0100a
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: fedora-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: fedora
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: fedora-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: fedora
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user fedora
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: httpd-example
    template: httpd-example
  message: |-
    The following service(s) have been created in your project: ${NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/httpd-ex/blob/master/README.md.
  metadata:
    annotations:
      description: An example Apache HTTP Server (httpd) application that serves static
        content. For more information about using this template, including OpenShift
        considerations, see https://github.com/sclorg/httpd-ex/blob/master/README.md.
      iconClass: icon-apache
      openshift.io/display-name: Apache HTTP Server
      openshift.io/documentation-url: https://github.com/sclorg/httpd-ex
      openshift.io/long-description: This template defines resources needed to develop
        a static application served by Apache HTTP Server (httpd), including a build
        configuration and application deployment configuration.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,httpd
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: httpd-example
    namespace: openshift
    resourceVersion: "21785"
    uid: b218f7f8-e536-4783-8b99-044999314066
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: httpd:${HTTPD_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env: []
            image: ' '
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: httpd-example
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - httpd-example
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: httpd-example
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of HTTPD image to be used (2.4-el8 by default).
    displayName: HTTPD Version
    name: HTTPD_VERSION
    required: true
    value: 2.4-el8
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/httpd-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the httpd service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - description: A secret string used to configure the Generic webhook.
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: jenkins-ephemeral
    template: jenkins-ephemeral-template
  message: A Jenkins service has been created in your project.  Log into Jenkins with
    your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
    contains more information about using this template.
  metadata:
    annotations:
      description: |-
        Jenkins service, without persistent storage.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
      iconClass: icon-jenkins
      openshift.io/display-name: Jenkins (Ephemeral)
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/other_images/jenkins.html
      openshift.io/long-description: This template deploys a Jenkins server capable
        of managing OpenShift Pipeline builds and supporting OpenShift-based oauth
        login.  The Jenkins configuration is stored in non-persistent storage, so
        this configuration should be used for experimental purposes only.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: instant-app,jenkins
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jenkins-ephemeral
    namespace: openshift
    resourceVersion: "21861"
    uid: 59a79b1f-ee05-4cf6-a5ac-e17912d7912a
  objects:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 4m
        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
      name: ${JENKINS_SERVICE_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        config.openshift.io/inject-trusted-cabundle: "true"
      name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${JENKINS_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${JENKINS_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: OPENSHIFT_ENABLE_OAUTH
              value: ${ENABLE_OAUTH}
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: "true"
            - name: DISABLE_ADMINISTRATIVE_MONITORS
              value: ${DISABLE_ADMINISTRATIVE_MONITORS}
            - name: KUBERNETES_MASTER
              value: https://kubernetes.default:443
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: "true"
            - name: JENKINS_SERVICE_NAME
              value: ${JENKINS_SERVICE_NAME}
            - name: JNLP_SERVICE_NAME
              value: ${JNLP_SERVICE_NAME}
            - name: JENKINS_UC_INSECURE
              value: ${JENKINS_UC_INSECURE}
            - name: CASC_JENKINS_CONFIG
              value: /var/lib/jenkins/proxy.yaml
            - name: JAVA_FIPS_OPTIONS
              value: ${JAVA_FIPS_OPTIONS}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 2
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 420
              periodSeconds: 360
              timeoutSeconds: 240
            name: jenkins
            readinessProbe:
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 240
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/jenkins
              name: ${JENKINS_SERVICE_NAME}-data
            - mountPath: /etc/pki/ca-trust/source/anchors
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: ${JENKINS_SERVICE_NAME}
          volumes:
          - emptyDir:
              medium: ""
            name: ${JENKINS_SERVICE_NAME}-data
          - configMap:
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
              optional: true
            name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - jenkins
          from:
            kind: ImageStreamTag
            name: ${JENKINS_IMAGE_STREAM_TAG}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: authorization.openshift.io/v1
    groupNames: null
    kind: RoleBinding
    metadata:
      name: ${JENKINS_SERVICE_NAME}_edit
    roleRef:
      name: edit
    subjects:
    - kind: ServiceAccount
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${JNLP_SERVICE_NAME}
    spec:
      ports:
      - name: agent
        nodePort: 0
        port: 50000
        protocol: TCP
        targetPort: 50000
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
          "namespace": "", "kind": "Service"}]'
        service.openshift.io/infrastructure: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      ports:
      - name: web
        nodePort: 0
        port: 80
        protocol: TCP
        targetPort: 8080
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  parameters:
  - description: The name of the OpenShift Service exposed for the Jenkins container.
    displayName: Jenkins Service Name
    name: JENKINS_SERVICE_NAME
    value: jenkins
  - description: The name of the service used for master/slave communication.
    displayName: Jenkins JNLP Service Name
    name: JNLP_SERVICE_NAME
    value: jenkins-jnlp
  - description: Whether to enable OAuth OpenShift integration. If false, the static
      account 'admin' will be initialized with the password 'password'.
    displayName: Enable OAuth in Jenkins
    name: ENABLE_OAUTH
    value: "true"
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
  - description: The OpenShift Namespace where the Jenkins ImageStream resides.
    displayName: Jenkins ImageStream Namespace
    name: NAMESPACE
    value: openshift
  - description: Whether to perform memory intensive, possibly slow, synchronization
      with the Jenkins Update Center on start.  If true, the Jenkins core update monitor
      and site warnings monitor are disabled.
    displayName: Disable memory intensive administrative monitors
    name: DISABLE_ADMINISTRATIVE_MONITORS
    value: "false"
  - description: See https://access.redhat.com/documentation/en-us/openjdk/11/html-single/configuring_openjdk_11_on_rhel_with_fips/index#config-fips-in-openjdk
      for the available command line properties to facilitate the JVM running on FIPS
      nodes.
    displayName: Allows control over how the JVM interacts with FIPS on startup.
    name: JAVA_FIPS_OPTIONS
    value: -Dcom.redhat.fips=false
  - description: Name of the ImageStreamTag to be used for the Jenkins image.
    displayName: Jenkins ImageStreamTag
    name: JENKINS_IMAGE_STREAM_TAG
    value: jenkins:2
  - description: Whether to allow use of a Jenkins Update Center that uses invalid
      certificate (self-signed, unknown CA). If any value other than 'false', certificate
      check is bypassed. By default, certificate check is enforced.
    displayName: Allows use of Jenkins Update Center repository with invalid SSL certificate
    name: JENKINS_UC_INSECURE
    value: "false"
  - description: Setting this value overrides the image used for the 'jnlp' container
      in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'jenkins-agent-base:latest' ImageStreamTag in the 'openshift'
      namespace is used.
    displayName: Image used for the 'jnlp' container of the sample 'java-sidecar'
      and 'nodejs-sidecar' PodTemplates
    name: AGENT_BASE_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-base:latest
  - description: Setting this value overrides the image used for the 'java-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'java:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'java' container of the sample 'java-builder'
      PodTemplate
    name: JAVA_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/java:latest
  - description: Setting this value overrides the image used for the 'nodejs-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'nodejs:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'nodejs' container of the sample 'nodejs-builder'
      PodTemplate
    name: NODEJS_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/nodejs:latest
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: ${NAME}
    template: jenkins-ephemeral-monitored
  message: A Jenkins service (monitored via prometheus) has been created in your project.  Log
    into Jenkins with your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
    contains more information about using this template.
  metadata:
    annotations:
      description: "Jenkins service, without persistent storage. \n\n To run this
        template extra RBAC permissions need to be provideed to the use to be able
        to create the ServiceMonitor Custom Resource managed by the prometheus-operator.
        \n\nWARNING: Any data stored will be lost upon pod destruction. Only use this
        template for testing."
      iconClass: icon-jenkins
      openshift.io/display-name: Jenkins Monitored (Ephemeral)
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/other_images/jenkins.html
      openshift.io/long-description: 'This template deploys a Jenkins server capable
        of managing OpenShift Pipeline builds and supporting OpenShift-based oauth
        login and Prometheus monitoring. DISCLAIMER: User needs to have RBAC Permissions
        to create the Service Monitor. The Jenkins configuration is stored in non-persistent
        storage, so this configuration should be used for experimental purposes only.'
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: instant-app,jenkins
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jenkins-ephemeral-monitored
    namespace: openshift
    resourceVersion: "21876"
    uid: f7d173a1-feb7-4a5e-b058-b7b7a5564497
  objects:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 4m
        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
      name: ${JENKINS_SERVICE_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        config.openshift.io/inject-trusted-cabundle: "true"
      name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${JENKINS_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${JENKINS_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: OPENSHIFT_ENABLE_OAUTH
              value: ${ENABLE_OAUTH}
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: "true"
            - name: DISABLE_ADMINISTRATIVE_MONITORS
              value: ${DISABLE_ADMINISTRATIVE_MONITORS}
            - name: KUBERNETES_MASTER
              value: https://kubernetes.default:443
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: "true"
            - name: JENKINS_SERVICE_NAME
              value: ${JENKINS_SERVICE_NAME}
            - name: JNLP_SERVICE_NAME
              value: ${JNLP_SERVICE_NAME}
            - name: JENKINS_UC_INSECURE
              value: ${JENKINS_UC_INSECURE}
            - name: CASC_JENKINS_CONFIG
              value: /var/lib/jenkins/proxy.yaml
            - name: JAVA_FIPS_OPTIONS
              value: ${JAVA_FIPS_OPTIONS}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 2
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 420
              periodSeconds: 360
              timeoutSeconds: 240
            name: jenkins
            readinessProbe:
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 240
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/jenkins
              name: ${JENKINS_SERVICE_NAME}-data
            - mountPath: /etc/pki/ca-trust/source/anchors
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: ${JENKINS_SERVICE_NAME}
          volumes:
          - emptyDir:
              medium: ""
            name: ${JENKINS_SERVICE_NAME}-data
          - configMap:
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
              optional: true
            name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - jenkins
          from:
            kind: ImageStreamTag
            name: ${JENKINS_IMAGE_STREAM_TAG}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: authorization.openshift.io/v1
    groupNames: null
    kind: RoleBinding
    metadata:
      name: ${JENKINS_SERVICE_NAME}_edit
    roleRef:
      name: edit
    subjects:
    - kind: ServiceAccount
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${JNLP_SERVICE_NAME}
    spec:
      ports:
      - name: agent
        nodePort: 0
        port: 50000
        protocol: TCP
        targetPort: 50000
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
          "namespace": "", "kind": "Service"}]'
        service.openshift.io/infrastructure: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      ports:
      - name: web
        nodePort: 0
        port: 80
        protocol: TCP
        targetPort: 8080
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: ${NAME}
        name: jenkins
      name: ${NAME}-monitored
    spec:
      endpoints:
      - interval: 10s
        path: /prometheus/
        port: web
      selector:
        matchLabels:
          app: ${NAME}
  parameters:
  - description: Name of the Jenkins instance to be monitored defined by the `app`
      label
    displayName: Name
    name: NAME
    required: true
    value: jenkins-ephemeral
  - description: The name of the OpenShift Service exposed for the Jenkins container.
    displayName: Jenkins Service Name
    name: JENKINS_SERVICE_NAME
    value: jenkins
  - description: The name of the service used for master/slave communication.
    displayName: Jenkins JNLP Service Name
    name: JNLP_SERVICE_NAME
    value: jenkins-jnlp
  - description: Whether to enable OAuth OpenShift integration. If false, the static
      account 'admin' will be initialized with the password 'password'.
    displayName: Enable OAuth in Jenkins
    name: ENABLE_OAUTH
    value: "true"
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
  - description: The OpenShift Namespace where the Jenkins ImageStream resides.
    displayName: Jenkins ImageStream Namespace
    name: NAMESPACE
    value: openshift
  - description: Whether to perform memory intensive, possibly slow, synchronization
      with the Jenkins Update Center on start.  If true, the Jenkins core update monitor
      and site warnings monitor are disabled.
    displayName: Disable memory intensive administrative monitors
    name: DISABLE_ADMINISTRATIVE_MONITORS
    value: "false"
  - description: See https://access.redhat.com/documentation/en-us/openjdk/11/html-single/configuring_openjdk_11_on_rhel_with_fips/index#config-fips-in-openjdk
      for the available command line properties to facilitate the JVM running on FIPS
      nodes.
    displayName: Allows control over how the JVM interacts with FIPS on startup.
    name: JAVA_FIPS_OPTIONS
    value: -Dcom.redhat.fips=false
  - description: Name of the ImageStreamTag to be used for the Jenkins image.
    displayName: Jenkins ImageStreamTag
    name: JENKINS_IMAGE_STREAM_TAG
    value: jenkins:2
  - description: Whether to allow use of a Jenkins Update Center that uses invalid
      certificate (self-signed, unknown CA). If any value other than 'false', certificate
      check is bypassed. By default, certificate check is enforced.
    displayName: Allows use of Jenkins Update Center repository with invalid SSL certificate
    name: JENKINS_UC_INSECURE
    value: "false"
  - description: Setting this value overrides the image used for the 'jnlp' container
      in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'jenkins-agent-base:latest' ImageStreamTag in the 'openshift'
      namespace is used.
    displayName: Image used for the 'jnlp' container of the sample 'java-sidecar'
      and 'nodejs-sidecar' PodTemplates
    name: AGENT_BASE_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-base:latest
  - description: Setting this value overrides the image used for the 'java-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'java:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'java' container of the sample 'java-builder'
      PodTemplate
    name: JAVA_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/java:latest
  - description: Setting this value overrides the image used for the 'nodejs-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'nodejs:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'nodejs' container of the sample 'nodejs-builder'
      PodTemplate
    name: NODEJS_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/nodejs:latest
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: jenkins-persistent
    template: jenkins-persistent-template
  message: A Jenkins service has been created in your project.  Log into Jenkins with
    your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
    contains more information about using this template.
  metadata:
    annotations:
      description: |-
        Jenkins service, with persistent storage.

        NOTE: You must have persistent volumes available in your cluster to use this template.
      iconClass: icon-jenkins
      openshift.io/display-name: Jenkins
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/other_images/jenkins.html
      openshift.io/long-description: This template deploys a Jenkins server capable
        of managing OpenShift Pipeline builds and supporting OpenShift-based oauth
        login.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: instant-app,jenkins
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jenkins-persistent
    namespace: openshift
    resourceVersion: "21832"
    uid: 1b0e9b89-bbbc-46d5-95fd-31110d9f8d03
  objects:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 4m
        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
      name: ${JENKINS_SERVICE_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        config.openshift.io/inject-trusted-cabundle: "true"
      name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${JENKINS_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${JENKINS_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${JENKINS_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: OPENSHIFT_ENABLE_OAUTH
              value: ${ENABLE_OAUTH}
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: "true"
            - name: DISABLE_ADMINISTRATIVE_MONITORS
              value: ${DISABLE_ADMINISTRATIVE_MONITORS}
            - name: KUBERNETES_MASTER
              value: https://kubernetes.default:443
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: "true"
            - name: JENKINS_SERVICE_NAME
              value: ${JENKINS_SERVICE_NAME}
            - name: JNLP_SERVICE_NAME
              value: ${JNLP_SERVICE_NAME}
            - name: ENABLE_FATAL_ERROR_LOG_FILE
              value: ${ENABLE_FATAL_ERROR_LOG_FILE}
            - name: JENKINS_UC_INSECURE
              value: ${JENKINS_UC_INSECURE}
            - name: CASC_JENKINS_CONFIG
              value: /var/lib/jenkins/proxy.yaml
            - name: JAVA_FIPS_OPTIONS
              value: ${JAVA_FIPS_OPTIONS}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 2
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 420
              periodSeconds: 360
              timeoutSeconds: 240
            name: jenkins
            readinessProbe:
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 240
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/jenkins
              name: ${JENKINS_SERVICE_NAME}-data
            - mountPath: /etc/pki/ca-trust/source/anchors
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: ${JENKINS_SERVICE_NAME}
          volumes:
          - name: ${JENKINS_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${JENKINS_SERVICE_NAME}
          - configMap:
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
              optional: true
            name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - jenkins
          from:
            kind: ImageStreamTag
            name: ${JENKINS_IMAGE_STREAM_TAG}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: authorization.openshift.io/v1
    groupNames: null
    kind: RoleBinding
    metadata:
      name: ${JENKINS_SERVICE_NAME}_edit
    roleRef:
      name: edit
    subjects:
    - kind: ServiceAccount
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${JNLP_SERVICE_NAME}
    spec:
      ports:
      - name: agent
        nodePort: 0
        port: 50000
        protocol: TCP
        targetPort: 50000
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
          "namespace": "", "kind": "Service"}]'
        service.openshift.io/infrastructure: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      ports:
      - name: web
        nodePort: 0
        port: 80
        protocol: TCP
        targetPort: 8080
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  parameters:
  - description: The name of the OpenShift Service exposed for the Jenkins container.
    displayName: Jenkins Service Name
    name: JENKINS_SERVICE_NAME
    value: jenkins
  - description: The name of the service used for master/slave communication.
    displayName: Jenkins JNLP Service Name
    name: JNLP_SERVICE_NAME
    value: jenkins-jnlp
  - description: Whether to enable OAuth OpenShift integration. If false, the static
      account 'admin' will be initialized with the password 'password'.
    displayName: Enable OAuth in Jenkins
    name: ENABLE_OAUTH
    value: "true"
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The OpenShift Namespace where the Jenkins ImageStream resides.
    displayName: Jenkins ImageStream Namespace
    name: NAMESPACE
    value: openshift
  - description: Whether to perform memory intensive, possibly slow, synchronization
      with the Jenkins Update Center on start.  If true, the Jenkins core update monitor
      and site warnings monitor are disabled.
    displayName: Disable memory intensive administrative monitors
    name: DISABLE_ADMINISTRATIVE_MONITORS
    value: "false"
  - description: See https://access.redhat.com/documentation/en-us/openjdk/11/html-single/configuring_openjdk_11_on_rhel_with_fips/index#config-fips-in-openjdk
      for the available command line properties to facilitate the JVM running on FIPS
      nodes.
    displayName: Allows control over how the JVM interacts with FIPS on startup.
    name: JAVA_FIPS_OPTIONS
    value: -Dcom.redhat.fips=false
  - description: Name of the ImageStreamTag to be used for the Jenkins image.
    displayName: Jenkins ImageStreamTag
    name: JENKINS_IMAGE_STREAM_TAG
    value: jenkins:2
  - description: When a fatal error occurs, an error log is created with information
      and the state obtained at the time of the fatal error.
    displayName: Fatal Error Log File
    name: ENABLE_FATAL_ERROR_LOG_FILE
    value: "false"
  - description: Whether to allow use of a Jenkins Update Center that uses invalid
      certificate (self-signed, unknown CA). If any value other than 'false', certificate
      check is bypassed. By default, certificate check is enforced.
    displayName: Allows use of Jenkins Update Center repository with invalid SSL certificate
    name: JENKINS_UC_INSECURE
    value: "false"
  - description: Setting this value overrides the image used for the 'jnlp' container
      in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'jenkins-agent-base:latest' ImageStreamTag in the 'openshift'
      namespace is used.
    displayName: Image used for the 'jnlp' container of the sample 'java-sidecar'
      and 'nodejs-sidecar' PodTemplates
    name: AGENT_BASE_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-base:latest
  - description: Setting this value overrides the image used for the 'java-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'java:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'java' container of the sample 'java-builder'
      PodTemplate
    name: JAVA_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/java:latest
  - description: Setting this value overrides the image used for the 'nodejs-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'nodejs:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'nodejs' container of the sample 'nodejs-builder'
      PodTemplate
    name: NODEJS_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/nodejs:latest
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: ${NAME}
    template: jenkins-persistent-monitored
  message: A Jenkins service (monitored via Prometheus) has been created in your project.  Log
    into Jenkins with your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
    contains more information about using this template.
  metadata:
    annotations:
      description: "Jenkins service, with persistent storage. \n\n To run this template
        extra RBAC permissions need to be provideed to the use to be able to create
        the ServiceMonitor Custom Resource managed by the prometheus-operator. \n\nNOTE:
        You must have persistent volumes available in your cluster to use this template."
      iconClass: icon-jenkins
      openshift.io/display-name: Jenkins Monitored
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/other_images/jenkins.html
      openshift.io/long-description: 'This template deploys a Jenkins server capable
        of managing OpenShift Pipeline builds and supporting OpenShift-based oauth
        login and Prometheus monitoring. DISCLAIMER: User needs to have RBAC Permissions
        to create the Service Monitor.'
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: instant-app,jenkins
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jenkins-persistent-monitored
    namespace: openshift
    resourceVersion: "21829"
    uid: a42f0995-b0aa-4ebc-99d0-6e2f143c17b2
  objects:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 4m
        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
      name: ${JENKINS_SERVICE_NAME}
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${JENKINS_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        config.openshift.io/inject-trusted-cabundle: "true"
      name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${JENKINS_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${JENKINS_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: OPENSHIFT_ENABLE_OAUTH
              value: ${ENABLE_OAUTH}
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: "true"
            - name: DISABLE_ADMINISTRATIVE_MONITORS
              value: ${DISABLE_ADMINISTRATIVE_MONITORS}
            - name: KUBERNETES_MASTER
              value: https://kubernetes.default:443
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: "true"
            - name: JENKINS_SERVICE_NAME
              value: ${JENKINS_SERVICE_NAME}
            - name: JNLP_SERVICE_NAME
              value: ${JNLP_SERVICE_NAME}
            - name: ENABLE_FATAL_ERROR_LOG_FILE
              value: ${ENABLE_FATAL_ERROR_LOG_FILE}
            - name: JENKINS_UC_INSECURE
              value: ${JENKINS_UC_INSECURE}
            - name: CASC_JENKINS_CONFIG
              value: /var/lib/jenkins/proxy.yaml
            - name: JAVA_FIPS_OPTIONS
              value: ${JAVA_FIPS_OPTIONS}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 2
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 420
              periodSeconds: 360
              timeoutSeconds: 240
            name: jenkins
            readinessProbe:
              httpGet:
                path: /login
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 240
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/jenkins
              name: ${JENKINS_SERVICE_NAME}-data
            - mountPath: /etc/pki/ca-trust/source/anchors
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: ${JENKINS_SERVICE_NAME}
          volumes:
          - name: ${JENKINS_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${JENKINS_SERVICE_NAME}
          - configMap:
              name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
              optional: true
            name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - jenkins
          from:
            kind: ImageStreamTag
            name: ${JENKINS_IMAGE_STREAM_TAG}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: authorization.openshift.io/v1
    groupNames: null
    kind: RoleBinding
    metadata:
      name: ${JENKINS_SERVICE_NAME}_edit
    roleRef:
      name: edit
    subjects:
    - kind: ServiceAccount
      name: ${JENKINS_SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${JNLP_SERVICE_NAME}
    spec:
      ports:
      - name: agent
        nodePort: 0
        port: 50000
        protocol: TCP
        targetPort: 50000
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
          "namespace": "", "kind": "Service"}]'
        service.openshift.io/infrastructure: "true"
      name: ${JENKINS_SERVICE_NAME}
    spec:
      ports:
      - name: web
        nodePort: 0
        port: 80
        protocol: TCP
        targetPort: 8080
      selector:
        name: ${JENKINS_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: ${NAME}
        name: jenkins
      name: ${NAME}-monitored
    spec:
      endpoints:
      - interval: 10s
        path: /prometheus/
        port: web
      selector:
        matchLabels:
          app: ${NAME}
  parameters:
  - description: Name of the Jenkins instance to be monitored defined by the `app`
      label
    displayName: Name
    name: NAME
    required: true
    value: jenkins-persistent
  - description: The name of the OpenShift Service exposed for the Jenkins container.
    displayName: Jenkins Service Name
    name: JENKINS_SERVICE_NAME
    value: jenkins
  - description: The name of the service used for master/slave communication.
    displayName: Jenkins JNLP Service Name
    name: JNLP_SERVICE_NAME
    value: jenkins-jnlp
  - description: Whether to enable OAuth OpenShift integration. If false, the static
      account 'admin' will be initialized with the password 'password'.
    displayName: Enable OAuth in Jenkins
    name: ENABLE_OAUTH
    value: "true"
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The OpenShift Namespace where the Jenkins ImageStream resides.
    displayName: Jenkins ImageStream Namespace
    name: NAMESPACE
    value: openshift
  - description: Whether to perform memory intensive, possibly slow, synchronization
      with the Jenkins Update Center on start.  If true, the Jenkins core update monitor
      and site warnings monitor are disabled.
    displayName: Disable memory intensive administrative monitors
    name: DISABLE_ADMINISTRATIVE_MONITORS
    value: "false"
  - description: See https://access.redhat.com/documentation/en-us/openjdk/11/html-single/configuring_openjdk_11_on_rhel_with_fips/index#config-fips-in-openjdk
      for the available command line properties to facilitate the JVM running on FIPS
      nodes.
    displayName: Allows control over how the JVM interacts with FIPS on startup.
    name: JAVA_FIPS_OPTIONS
    value: -Dcom.redhat.fips=false
  - description: Name of the ImageStreamTag to be used for the Jenkins image.
    displayName: Jenkins ImageStreamTag
    name: JENKINS_IMAGE_STREAM_TAG
    value: jenkins:2
  - description: When a fatal error occurs, an error log is created with information
      and the state obtained at the time of the fatal error.
    displayName: Fatal Error Log File
    name: ENABLE_FATAL_ERROR_LOG_FILE
    value: "false"
  - description: Whether to allow use of a Jenkins Update Center that uses invalid
      certificate (self-signed, unknown CA). If any value other than 'false', certificate
      check is bypassed. By default, certificate check is enforced.
    displayName: Allows use of Jenkins Update Center repository with invalid SSL certificate
    name: JENKINS_UC_INSECURE
    value: "false"
  - description: Setting this value overrides the image used for the 'jnlp' container
      in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'jenkins-agent-base:latest' ImageStreamTag in the 'openshift'
      namespace is used.
    displayName: Image used for the 'jnlp' container of the sample 'java-sidecar'
      and 'nodejs-sidecar' PodTemplates
    name: AGENT_BASE_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-base:latest
  - description: Setting this value overrides the image used for the 'java-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'java:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'java' container of the sample 'java-builder'
      PodTemplate
    name: JAVA_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/java:latest
  - description: Setting this value overrides the image used for the 'nodejs-builder'
      container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
      the image from the 'nodejs:latest' ImageStreamTag in the 'openshift' namespace
      is used.
    displayName: Image used for the 'nodejs' container of the sample 'nodejs-builder'
      PodTemplate
    name: NODEJS_BUILDER_IMAGE
    value: image-registry.openshift-image-registry.svc:5000/openshift/nodejs:latest
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws31: "1.4"
    template: jws31-tomcat7-basic-s2i
  message: A new JWS application for Apache Tomcat 7 has been created in your project.
    The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
  metadata:
    annotations:
      description: Application template for JWS applications built using S2I.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 7 (no https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat7,java,jboss
      version: "1.4"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws31-tomcat7-basic-s2i
    namespace: openshift
    resourceVersion: "21869"
    uid: 5254d241-3f81-4140-83d4-d57565ca04a2
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver31-tomcat7-openshift:1.4
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JWS_ADMIN_USERNAME
              value: ${JWS_ADMIN_USERNAME}
            - name: JWS_ADMIN_PASSWORD
              value: ${JWS_ADMIN_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}
                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                  |grep -iq 'stateName *= *STARTED'
          terminationGracePeriodSeconds: 60
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: JWS Admin User
    displayName: JWS Admin Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_USERNAME
    required: true
  - description: JWS Admin Password
    displayName: JWS Admin Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws31: "1.4"
    template: jws31-tomcat7-https-s2i
  message: A new JWS application for Apache Tomcat 7 has been created in your project.
    The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
    Please be sure to create the secret named "${JWS_HTTPS_SECRET}" containing the
    ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.
  metadata:
    annotations:
      description: An example JBoss Web Server application configured for use with
        https. For more information about using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 7 (with https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat7,java,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat JBoss Web Server 3.1 Apache Tomcat 7 based application,
        including a build configuration, and application deployment configuration.
        This also illustrations how to connect to the web applicaiton using https.
      template.openshift.io/support-url: https://access.redhat.com
      version: "1.4"
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws31-tomcat7-https-s2i
    namespace: openshift
    resourceVersion: "21882"
    uid: 38b95818-c11f-4187-bb5f-841ead158ded
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver31-tomcat7-openshift:1.4
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JWS_HTTPS_CERTIFICATE_DIR
              value: /etc/jws-secret-volume
            - name: JWS_HTTPS_CERTIFICATE
              value: ${JWS_HTTPS_CERTIFICATE}
            - name: JWS_HTTPS_CERTIFICATE_KEY
              value: ${JWS_HTTPS_CERTIFICATE_KEY}
            - name: JWS_HTTPS_CERTIFICATE_PASSWORD
              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}
            - name: JWS_ADMIN_USERNAME
              value: ${JWS_ADMIN_USERNAME}
            - name: JWS_ADMIN_PASSWORD
              value: ${JWS_ADMIN_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}
                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                  |grep -iq 'stateName *= *STARTED'
            volumeMounts:
            - mountPath: /etc/jws-secret-volume
              name: jws-certificate-volume
              readOnly: true
          terminationGracePeriodSeconds: 60
          volumes:
          - name: jws-certificate-volume
            secret:
              secretName: ${JWS_HTTPS_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route.  Leave blank for default
      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: The name of the secret containing the certificate files
    displayName: Secret Name
    name: JWS_HTTPS_SECRET
    required: true
    value: jws-app-secret
  - description: The name of the certificate file within the secret
    displayName: Certificate Name
    name: JWS_HTTPS_CERTIFICATE
    value: server.crt
  - description: The name of the certificate key file within the secret
    displayName: Certificate Key Name
    name: JWS_HTTPS_CERTIFICATE_KEY
    value: server.key
  - description: The certificate password
    displayName: Certificate Password
    name: JWS_HTTPS_CERTIFICATE_PASSWORD
  - description: JWS Admin User
    displayName: JWS Admin Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_USERNAME
    required: true
  - description: JWS Admin Password
    displayName: JWS Admin Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws31: "1.4"
    template: jws31-tomcat8-basic-s2i
  message: A new JWS application for Apache Tomcat 8 has been created in your project.
    The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
  metadata:
    annotations:
      description: An example JBoss Web Server application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 8 (no https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat8,java,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat JBoss Web Server 3.1 Apache Tomcat 8 based application,
        including a build configuration, and an application deployment configuration.
      template.openshift.io/support-url: https://access.redhat.com
      version: "1.4"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws31-tomcat8-basic-s2i
    namespace: openshift
    resourceVersion: "21813"
    uid: 5f5d1556-1f1a-41ee-84d7-7c09d98dff3a
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver31-tomcat8-openshift:1.4
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JWS_ADMIN_USERNAME
              value: ${JWS_ADMIN_USERNAME}
            - name: JWS_ADMIN_PASSWORD
              value: ${JWS_ADMIN_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}
                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                  |grep -iq 'stateName *= *STARTED'
          terminationGracePeriodSeconds: 60
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: JWS Admin User
    displayName: JWS Admin Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_USERNAME
    required: true
  - description: JWS Admin Password
    displayName: JWS Admin Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws31: "1.4"
    template: jws31-tomcat8-https-s2i
  message: A new JWS application for Apache Tomcat 8 has been created in your project.
    The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
    Please be sure to create the secret named "${JWS_HTTPS_SECRET}" containing the
    ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.
  metadata:
    annotations:
      description: An example JBoss Web Server application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 8 (with https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat8,java,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat JBoss Web Server 3.1 Apache Tomcat 8 based application,
        including a build configuration, application deployment configuration, and
        secure communication using https.
      template.openshift.io/support-url: https://access.redhat.com
      version: "1.4"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws31-tomcat8-https-s2i
    namespace: openshift
    resourceVersion: "21821"
    uid: 90f0c2b7-7c37-45d8-998b-14366a293c32
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver31-tomcat8-openshift:1.4
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JWS_HTTPS_CERTIFICATE_DIR
              value: /etc/jws-secret-volume
            - name: JWS_HTTPS_CERTIFICATE
              value: ${JWS_HTTPS_CERTIFICATE}
            - name: JWS_HTTPS_CERTIFICATE_KEY
              value: ${JWS_HTTPS_CERTIFICATE_KEY}
            - name: JWS_HTTPS_CERTIFICATE_PASSWORD
              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}
            - name: JWS_ADMIN_USERNAME
              value: ${JWS_ADMIN_USERNAME}
            - name: JWS_ADMIN_PASSWORD
              value: ${JWS_ADMIN_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}
                  'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                  |grep -iq 'stateName *= *STARTED'
            volumeMounts:
            - mountPath: /etc/jws-secret-volume
              name: jws-certificate-volume
              readOnly: true
          terminationGracePeriodSeconds: 60
          volumes:
          - name: jws-certificate-volume
            secret:
              secretName: ${JWS_HTTPS_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route.  Leave blank for default
      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: The name of the secret containing the certificate files
    displayName: Secret Name
    name: JWS_HTTPS_SECRET
    required: true
    value: jws-app-secret
  - description: The name of the certificate file within the secret
    displayName: Certificate Name
    name: JWS_HTTPS_CERTIFICATE
    value: server.crt
  - description: The name of the certificate key file within the secret
    displayName: Certificate Key Name
    name: JWS_HTTPS_CERTIFICATE_KEY
    value: server.key
  - description: The certificate password
    displayName: Certificate Password
    name: JWS_HTTPS_CERTIFICATE_PASSWORD
  - description: JWS Admin User
    displayName: JWS Admin Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_USERNAME
    required: true
  - description: JWS Admin Password
    displayName: JWS Admin Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JWS_ADMIN_PASSWORD
    required: true
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws56jdk11ubi8: 5.6.2
    template: jws56-openjdk11-tomcat9-ubi8-basic-s2i
  message: A new JWS application for Apache Tomcat 9 has been created in your project.
  metadata:
    annotations:
      description: An example JBoss Web Server application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 5.6 Apache Tomcat 9 OpenJDK11 on
        UBI8 (no https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat9,java,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat JBoss Web Server 5.6 Apache Tomcat 9 based application,
        including a build configuration, and an application deployment configuration.
      template.openshift.io/support-url: https://access.redhat.com
      version: "5.6"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws56-openjdk11-tomcat9-ubi8-basic-s2i
    namespace: openshift
    resourceVersion: "21788"
    uid: 723b0f96-6312-45ac-8612-4b8e6c0330b4
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver56-openjdk11-tomcat9-openshift-ubi8:5.6.2
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - 'curl --noproxy ''*'' -is ''http://localhost:8080/health'' | grep
                  -iq ''"status": "UP"'''
          terminationGracePeriodSeconds: 60
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws56jdk11ubi8: 5.6.2
    template: jws56-openjdk11-tomcat9-ubi8-https-s2i
  message: A new JWS application for Apache Tomcat 9 has been created in your project.
    Please be sure to create the secret named "${JWS_HTTPS_SECRET}" containing the
    ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.
  metadata:
    annotations:
      description: An example JBoss Web Server application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 5.6 Apache Tomcat 9 OpenJDK11 on
        UBI8 (with https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat9,java,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat JBoss Web Server 5.6 Apache Tomcat 9 based application,
        including a build configuration, application deployment configuration, and
        secure communication using https.
      template.openshift.io/support-url: https://access.redhat.com
      version: "5.6"
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws56-openjdk11-tomcat9-ubi8-https-s2i
    namespace: openshift
    resourceVersion: "21872"
    uid: 1c48eaaa-3598-47a5-a616-ce2685b869de
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver56-openjdk11-tomcat9-openshift-ubi8:5.6.2
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JWS_HTTPS_CERTIFICATE_DIR
              value: /etc/jws-secret-volume
            - name: JWS_HTTPS_CERTIFICATE
              value: ${JWS_HTTPS_CERTIFICATE}
            - name: JWS_HTTPS_CERTIFICATE_KEY
              value: ${JWS_HTTPS_CERTIFICATE_KEY}
            - name: JWS_HTTPS_CERTIFICATE_PASSWORD
              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - 'curl --noproxy ''*'' -is ''http://localhost:8080/health'' | grep
                  -iq ''"status": "UP"'''
            volumeMounts:
            - mountPath: /etc/jws-secret-volume
              name: jws-certificate-volume
              readOnly: true
          terminationGracePeriodSeconds: 60
          volumes:
          - name: jws-certificate-volume
            secret:
              secretName: ${JWS_HTTPS_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route.  Leave blank for default
      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: The name of the secret containing the certificate files
    displayName: Secret Name
    name: JWS_HTTPS_SECRET
    required: true
    value: jws-app-secret
  - description: The name of the certificate file within the secret
    displayName: Certificate Name
    name: JWS_HTTPS_CERTIFICATE
    value: server.crt
  - description: The name of the certificate key file within the secret
    displayName: Certificate Key Name
    name: JWS_HTTPS_CERTIFICATE_KEY
    value: server.key
  - description: The certificate password
    displayName: Certificate Password
    name: JWS_HTTPS_CERTIFICATE_PASSWORD
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws56jdk8ubi8: 5.6.2
    template: jws56-openjdk8-tomcat9-ubi8-basic-s2i
  message: A new JWS application for Apache Tomcat 9 has been created in your project.
  metadata:
    annotations:
      description: An example JBoss Web Server application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 5.6 Apache Tomcat 9 OpenJDK8 on
        UBI8 (no https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat9,java,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat JBoss Web Server 5.5 Apache Tomcat 9 based application,
        including a build configuration, and an application deployment configuration.
      template.openshift.io/support-url: https://access.redhat.com
      version: "5.6"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws56-openjdk8-tomcat9-ubi8-basic-s2i
    namespace: openshift
    resourceVersion: "21815"
    uid: c996e6c8-ba79-49eb-82d5-4a2890efa1ca
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver56-openjdk8-tomcat9-openshift-ubi8:5.6.2
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - 'curl --noproxy ''*'' -is ''http://localhost:8080/health'' | grep
                  -iq ''"status": "UP"'''
          terminationGracePeriodSeconds: 60
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    jws56jdk8ubi8: 5.6.2
    template: jws56-openjdk8-tomcat9-ubi8-https-s2i
  message: A new JWS application for Apache Tomcat 9 has been created in your project.
    Please be sure to create the secret named "${JWS_HTTPS_SECRET}" containing the
    ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.
  metadata:
    annotations:
      description: An example JBoss Web Server application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-tomcat
      openshift.io/display-name: JBoss Web Server 5.6 Apache Tomcat 9 OpenJDK8 on
        UBI8 (with https)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: tomcat,tomcat9,java,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat JBoss Web Server 5.6 Apache Tomcat 9 based application,
        including a build configuration, application deployment configuration, and
        secure communication using https.
      template.openshift.io/support-url: https://access.redhat.com
      version: "5.6"
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: jws56-openjdk8-tomcat9-ubi8-https-s2i
    namespace: openshift
    resourceVersion: "21782"
    uid: 17772aa0-c993-49a3-bb88-11ceb55b3c7c
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: jboss-webserver56-openjdk8-tomcat9-openshift-ubi8:5.6.2
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: JWS_HTTPS_CERTIFICATE_DIR
              value: /etc/jws-secret-volume
            - name: JWS_HTTPS_CERTIFICATE
              value: ${JWS_HTTPS_CERTIFICATE}
            - name: JWS_HTTPS_CERTIFICATE_KEY
              value: ${JWS_HTTPS_CERTIFICATE_KEY}
            - name: JWS_HTTPS_CERTIFICATE_PASSWORD
              value: ${JWS_HTTPS_CERTIFICATE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - 'curl --noproxy ''*'' -is ''http://localhost:8080/health'' | grep
                  -iq ''"status": "UP"'''
            volumeMounts:
            - mountPath: /etc/jws-secret-volume
              name: jws-certificate-volume
              readOnly: true
          terminationGracePeriodSeconds: 60
          volumes:
          - name: jws-certificate-volume
            secret:
              secretName: ${JWS_HTTPS_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: jws-app
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route.  Leave blank for default
      hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts.git
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: "1.2"
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: tomcat-websocket-chat
  - description: The name of the secret containing the certificate files
    displayName: Secret Name
    name: JWS_HTTPS_SECRET
    required: true
    value: jws-app-secret
  - description: The name of the certificate file within the secret
    displayName: Certificate Name
    name: JWS_HTTPS_CERTIFICATE
    value: server.crt
  - description: The name of the certificate key file within the secret
    displayName: Certificate Key Name
    name: JWS_HTTPS_CERTIFICATE_KEY
    value: server.key
  - description: The certificate password
    displayName: Certificate Password
    name: JWS_HTTPS_CERTIFICATE_PASSWORD
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: Maven mirror to use for S2I builds
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: List of directories from which archives will be copied into the deployment
      folder. If unspecified, all archives in /target will be copied.
    name: ARTIFACT_DIR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app.openshift.io/runtime: mariadb
    template: mariadb-ephemeral-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Username: ${MYSQL_USER}
           Password: ${MYSQL_PASSWORD}
      Database Name: ${MYSQL_DATABASE}
     Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md.
  metadata:
    annotations:
      description: |-
        MariaDB database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing
      iconClass: icon-mariadb
      openshift.io/display-name: MariaDB (Ephemeral)
      openshift.io/documentation-url: https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md
      openshift.io/long-description: This template provides a standalone MariaDB server
        with a database created.  The database is not stored on persistent storage,
        so any restart of the service will result in all data being lost.  The database
        name, username, and password are chosen via parameters when provisioning this
        service.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,mariadb
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: mariadb-ephemeral
    namespace: openshift
    resourceVersion: "21816"
    uid: 120a2aff-51b3-45a8-810d-5714d7de9f21
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${MYSQL_DATABASE}
      database-password: ${MYSQL_PASSWORD}
      database-root-password: ${MYSQL_ROOT_PASSWORD}
      database-user: ${MYSQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mariadb")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mariadb
        port: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-root-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 30
              timeoutSeconds: 1
            name: mariadb
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - emptyDir:
              medium: ""
            name: ${DATABASE_SERVICE_NAME}-data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mariadb
          from:
            kind: ImageStreamTag
            name: mariadb:${MARIADB_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mariadb
  - description: Username for MariaDB user that will be used for accessing the database.
    displayName: MariaDB Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: MYSQL_USER
    required: true
  - description: Password for the MariaDB connection user.
    displayName: MariaDB Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_PASSWORD
    required: true
  - description: Password for the MariaDB root user.
    displayName: MariaDB root Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true
  - description: Name of the MariaDB database accessed.
    displayName: MariaDB Database Name
    name: MYSQL_DATABASE
    required: true
    value: sampledb
  - description: Version of MariaDB image to be used (10.3-el7, 10.3-el8, or latest).
    displayName: Version of MariaDB Image
    name: MARIADB_VERSION
    required: true
    value: 10.3-el8
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app.openshift.io/runtime: mariadb
    template: mariadb-persistent-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Username: ${MYSQL_USER}
           Password: ${MYSQL_PASSWORD}
      Database Name: ${MYSQL_DATABASE}
     Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md.
  metadata:
    annotations:
      description: |-
        MariaDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md.

        NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.
      iconClass: icon-mariadb
      openshift.io/display-name: MariaDB
      openshift.io/documentation-url: https://github.com/sclorg/mariadb-container/blob/master/10.3/root/usr/share/container-scripts/mysql/README.md
      openshift.io/long-description: This template provides a standalone MariaDB server
        with a database created.  The database is stored on persistent storage.  The
        database name, username, and password are chosen via parameters when provisioning
        this service.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,mariadb
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: mariadb-persistent
    namespace: openshift
    resourceVersion: "21823"
    uid: e9c54626-3254-4b4c-b0d8-582ef46b7ff2
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${MYSQL_DATABASE}
      database-password: ${MYSQL_PASSWORD}
      database-root-password: ${MYSQL_ROOT_PASSWORD}
      database-user: ${MYSQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mariadb")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mariadb
        port: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-root-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 30
              timeoutSeconds: 1
            name: mariadb
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mariadb
          from:
            kind: ImageStreamTag
            name: mariadb:${MARIADB_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mariadb
  - description: Username for MariaDB user that will be used for accessing the database.
    displayName: MariaDB Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: MYSQL_USER
    required: true
  - description: Password for the MariaDB connection user.
    displayName: MariaDB Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_PASSWORD
    required: true
  - description: Password for the MariaDB root user.
    displayName: MariaDB root Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true
  - description: Name of the MariaDB database accessed.
    displayName: MariaDB Database Name
    name: MYSQL_DATABASE
    required: true
    value: sampledb
  - description: Version of MariaDB image to be used (10.3-el7, 10.3-el8, or latest).
    displayName: Version of MariaDB Image
    name: MARIADB_VERSION
    required: true
    value: 10.3-el8
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: mongodb
  metadata:
    annotations:
      iconClass: icon-mongodb
      name.os.template.kubevirt.io/centos8: CentOS 8 or higher
      openshift.io/display-name: MongoDB Virtual Machine Template
      openshift.io/long-description: This template provides a standalone MongoDB Virtual
        Machine with a database created. The database is stored on persistent storage.  The
        database name, username, and password are chosen via parameters when provisioning
        this service.
      openshift.io/provider-display-name: Red Hat Turkey Solution Architect Team
      tags: database,mongodb
    creationTimestamp: "2023-07-18T14:18:48Z"
    name: mongodb-vm-template
    namespace: openshift
    resourceVersion: "48713"
    uid: b3087d2f-f3e7-48d1-8d77-039c7d25b76b
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}
      labels:
        app: ${APPLICATION_NAME}
        component: ${MONGODB_APPLICATION_NAME}
        role: database
      name: ${MONGODB_APPLICATION_NAME}
    spec:
      ports:
      - name: mongo
        nodePort: 0
        port: 27017
        protocol: TCP
        targetPort: 27017
      selector:
        flavor.template.kubevirt.io/small: "true"
        kubevirt.io/domain: ${MONGODB_APPLICATION_NAME}
        kubevirt.io/size: small
        os.template.kubevirt.io/centos8: "true"
        vm.kubevirt.io/name: ${MONGODB_APPLICATION_NAME}
        workload.template.kubevirt.io/server: "true"
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: kubevirt.io/v1alpha3
    kind: VirtualMachine
    metadata:
      annotations:
        name.os.template.kubevirt.io/centos8: CentOS 8 or higher
        openshift.io/display-name: MongoDB Virtual Machine
      labels:
        app: ${APPLICATION_NAME}
        app.kubernetes.io/part-of: ${APPLICATION_NAME}
        flavor.template.kubevirt.io/small: "true"
        kubevirt.io/domain: ${MONGODB_APPLICATION_NAME}
        kubevirt.io/size: small
        os.template.kubevirt.io/centos8: "true"
        vm.kubevirt.io/name: ${MONGODB_APPLICATION_NAME}
        workload.template.kubevirt.io/server: "true"
      name: ${MONGODB_APPLICATION_NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1alpha1
        kind: DataVolume
        metadata:
          name: ${MONGODB_APPLICATION_NAME}-rootdisk
        spec:
          pvc:
            accessModes:
            - ReadWriteMany
            resources:
              requests:
                storage: 20Gi
            storageClassName: ocs-storagecluster-ceph-rbd
            volumeMode: Block
          source:
            pvc:
              name: centos8
              namespace: openshift-virtualization-os-images
      running: true
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: centos8
            vm.kubevirt.io/workload: server
          labels:
            flavor.template.kubevirt.io/small: "true"
            kubevirt.io/domain: ${MONGODB_APPLICATION_NAME}
            kubevirt.io/size: small
            os.template.kubevirt.io/centos8: "true"
            vm.kubevirt.io/name: ${MONGODB_APPLICATION_NAME}
            workload.template.kubevirt.io/server: "true"
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: ${MONGODB_APPLICATION_NAME}-rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: nic-0
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.4.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          hostname: ${MONGODB_APPLICATION_NAME}
          networks:
          - name: nic-0
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${MONGODB_APPLICATION_NAME}-rootdisk
            name: ${MONGODB_APPLICATION_NAME}-rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: ${VM_USER_NAME}
                password: ${VM_PASSWORD}
                chpasswd: { expire: False }
                yum_repos:
                  mongodb-org-3.6:
                    baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.6/x86_64/
                    enabled: true
                    gpgcheck: true
                    gpgkey: https://www.mongodb.org/static/pgp/server-3.6.asc
                    name: MongoDB Repository
                packages:
                  - bash-completion
                  - mongodb-org
                runcmd:
                  - systemctl daemon-reload
                  - systemctl enable mongod.service
                  - systemctl start mongod.service
                  - >
                    mongo admin --host localhost --eval "db.createUser({user: 'root', pwd: '${MONGODB_ADMIN_PASSWORD}', roles: [{role: 'root', db: 'admin'}]});"
                  - >
                    mongo admin --host localhost --eval "db.getSiblingDB('mongodb').createUser({user: '${MONGODB_USER}', pwd: '${MONGODB_PASSWORD}', roles: [{role: 'dbOwner', db: '${MONGODB_DATABASE}'}]});"
                  - >
                    sed -i -e 's/bindIp: 127.0.0.1/bindIp: 0.0.0.0/g' /etc/mongod.conf
                  - >
                    sed -i -e 's/^#security:/security:/g' /etc/mongod.conf
                  - >
                    sed -i -e '/^security:/a \  authorization: enabled' /etc/mongod.conf
                  - systemctl restart mongod.service
            name: cloudinitdisk
  parameters:
  - description: The name for the mongoDB application and virtual machine.
    displayName: MongoDB Application Name
    name: MONGODB_APPLICATION_NAME
    required: true
    value: mongodb
  - description: Virtual Machine Username
    displayName: Virtual Machine Username
    name: VM_USER_NAME
    required: true
    value: redhat
  - description: Virtual Machine User Password
    name: VM_PASSWORD
    required: true
    value: openshift
  - description: The name for the main application
    displayName: Main Application Name
    name: APPLICATION_NAME
    required: true
    value: workshop
  - description: Database name
    displayName: Database name
    name: MONGODB_DATABASE
    required: true
    value: mongodb
  - description: Database username
    displayName: Database username
    name: MONGODB_USER
    required: true
    value: mongodb
  - description: Database user password
    displayName: Database user password
    generate: expression
    name: MONGODB_PASSWORD
    required: true
    value: mongodb
  - description: Database admin password
    displayName: Database admin password
    generate: expression
    name: MONGODB_ADMIN_PASSWORD
    required: true
    value: mongodb
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: mysql-ephemeral-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Username: ${MYSQL_USER}
           Password: ${MYSQL_PASSWORD}
      Database Name: ${MYSQL_DATABASE}
     Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/8.0/root/usr/share/container-scripts/mysql/README.md.
  metadata:
    annotations:
      description: |-
        MySQL database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/8.0/root/usr/share/container-scripts/mysql/README.md.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing
      iconClass: icon-mysql-database
      openshift.io/display-name: MySQL (Ephemeral)
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/db_images/mysql.html
      openshift.io/long-description: This template provides a standalone MySQL server
        with a database created.  The database is not stored on persistent storage,
        so any restart of the service will result in all data being lost.  The database
        name, username, and password are chosen via parameters when provisioning this
        service.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,mysql
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: mysql-ephemeral
    namespace: openshift
    resourceVersion: "21817"
    uid: e55ed1fc-cd7e-43b6-b20c-9a938b692b84
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${MYSQL_DATABASE}
      database-password: ${MYSQL_PASSWORD}
      database-root-password: ${MYSQL_ROOT_PASSWORD}
      database-user: ${MYSQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mysql
        nodePort: 0
        port: 3306
        protocol: TCP
        targetPort: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-root-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 30
              timeoutSeconds: 1
            name: mysql
            ports:
            - containerPort: 3306
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: ${DATABASE_SERVICE_NAME}-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
          - emptyDir:
              medium: ""
            name: ${DATABASE_SERVICE_NAME}-data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mysql
          from:
            kind: ImageStreamTag
            name: mysql:${MYSQL_VERSION}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
    status: {}
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mysql
  - description: Username for MySQL user that will be used for accessing the database.
    displayName: MySQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: MYSQL_USER
    required: true
  - description: Password for the MySQL connection user.
    displayName: MySQL Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_PASSWORD
    required: true
  - description: Password for the MySQL root user.
    displayName: MySQL root user Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true
  - description: Name of the MySQL database accessed.
    displayName: MySQL Database Name
    name: MYSQL_DATABASE
    required: true
    value: sampledb
  - description: Version of MySQL image to be used (8.0-el7, 8.0-el8, or latest).
    displayName: Version of MySQL Image
    name: MYSQL_VERSION
    required: true
    value: 8.0-el8
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: mysql-persistent-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Username: ${MYSQL_USER}
           Password: ${MYSQL_PASSWORD}
      Database Name: ${MYSQL_DATABASE}
     Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/8.0/root/usr/share/container-scripts/mysql/README.md.
  metadata:
    annotations:
      description: |-
        MySQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/8.0/root/usr/share/container-scripts/mysql/README.md.

        NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.
      iconClass: icon-mysql-database
      openshift.io/display-name: MySQL
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/db_images/mysql.html
      openshift.io/long-description: This template provides a standalone MySQL server
        with a database created.  The database is stored on persistent storage.  The
        database name, username, and password are chosen via parameters when provisioning
        this service.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,mysql
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: mysql-persistent
    namespace: openshift
    resourceVersion: "21851"
    uid: bd9103d0-c3eb-4d18-9be4-082cec241a5e
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${MYSQL_DATABASE}
      database-password: ${MYSQL_PASSWORD}
      database-root-password: ${MYSQL_ROOT_PASSWORD}
      database-user: ${MYSQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: mysql
        port: 3306
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-root-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 30
              timeoutSeconds: 1
            name: mysql
            ports:
            - containerPort: 3306
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/mysql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - mysql
          from:
            kind: ImageStreamTag
            name: mysql:${MYSQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: mysql
  - description: Username for MySQL user that will be used for accessing the database.
    displayName: MySQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: MYSQL_USER
    required: true
  - description: Password for the MySQL connection user.
    displayName: MySQL Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_PASSWORD
    required: true
  - description: Password for the MySQL root user.
    displayName: MySQL root user Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: MYSQL_ROOT_PASSWORD
    required: true
  - description: Name of the MySQL database accessed.
    displayName: MySQL Database Name
    name: MYSQL_DATABASE
    required: true
    value: sampledb
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Version of MySQL image to be used (8.0-el7, 8.0-el8, or latest).
    displayName: Version of MySQL Image
    name: MYSQL_VERSION
    required: true
    value: 8.0-el8
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: nginx-example
  message: |-
    The following service(s) have been created in your project: ${NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/nginx-ex/blob/master/README.md.
  metadata:
    annotations:
      description: An example Nginx HTTP server and a reverse proxy (nginx) application
        that serves static content. For more information about using this template,
        including OpenShift considerations, see https://github.com/sclorg/nginx-ex/blob/master/README.md.
      iconClass: icon-nginx
      openshift.io/display-name: Nginx HTTP server and a reverse proxy
      openshift.io/documentation-url: https://github.com/sclorg/nginx-ex
      openshift.io/long-description: This template defines resources needed to develop
        a static application served by Nginx HTTP server and a reverse proxy (nginx),
        including a build configuration and application deployment configuration.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,nginx
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: nginx-example
    namespace: openshift
    resourceVersion: "21824"
    uid: 14bba475-6535-4499-bf3d-fb6287234511
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: nginx:${NGINX_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env: []
            image: ' '
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: nginx-example
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - nginx-example
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: nginx-example
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of NGINX image to be used (1.20-el8 by default).
    displayName: NGINX Version
    name: NGINX_VERSION
    required: true
    value: 1.20-el8
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/nginx-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the nginx service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - description: A secret string used to configure the Generic webhook.
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: nodejs-postgresql-example
    template: nodejs-postgresql-example
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/nodeshift-starters/nodejs-rest-http-crud/blob/master/README.md.
  metadata:
    annotations:
      description: |-
        An example Node.js application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/nodeshift-starters/nodejs-rest-http-crud/blob/master/README.md.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
      iconClass: icon-nodejs
      openshift.io/display-name: Node.js + PostgreSQL (Ephemeral)
      openshift.io/documentation-url: https://github.com/nodeshift-starters/nodejs-rest-http-crud
      openshift.io/long-description: This template defines resources needed to develop
        a NodeJS application, including a build configuration, application deployment
        configuration, and database deployment configuration.  The database is stored
        in non-persistent storage, so this configuration should be used for experimental
        purposes only.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,nodejs
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: nodejs-postgresql-example
    namespace: openshift
    resourceVersion: "21836"
    uid: 2c206394-d577-4f26-90b5-95aba2407170
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      database-admin-password: ${DATABASE_ADMIN_PASSWORD}
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit: {}
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: NPM_MIRROR
            value: ${NPM_MIRROR}
          from:
            kind: ImageStreamTag
            name: nodejs:${NODEJS_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      labels:
        app.openshift.io/runtime: nodejs
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app.openshift.io/runtime: nodejs
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: ${NAME}
            image: ' '
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: nodejs-postgresql-example
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - nodejs-postgresql-example
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        port: 5432
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: ${NAME}
            image: ' '
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
            name: postgresql
            ports:
            - containerPort: 5432
            resources:
              limits:
                memory: ${MEMORY_POSTGRESQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - emptyDir:
              medium: ""
            name: ${DATABASE_SERVICE_NAME}-data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:${POSTGRESQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: nodejs-postgresql-example
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of NodeJS image to be used (14-ubi8, 16-ubi8, or latest).
    displayName: Version of NodeJS Image
    name: NODEJS_VERSION
    required: true
    value: 16-ubi8
  - description: Version of PostgreSQL image to be used (12-el8, or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: 12-el8
  - description: Maximum amount of memory the Node.js container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 256Mi
  - description: Maximum amount of memory the PostgreSQL container can use.
    displayName: Memory Limit (PostgreSQL)
    name: MEMORY_POSTGRESQL_LIMIT
    required: true
    value: 256Mi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/nodeshift-starters/nodejs-rest-http-crud.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Node.js service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - description: A secret string used to configure the Generic webhook.
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: Username for PostgreSQL user that will be used for accessing the
      database.
    displayName: PostgreSQL Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: DATABASE_USER
  - description: Password for the PostgreSQL user.
    displayName: PostgreSQL Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_PASSWORD
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: my_data
  - description: Password for the database admin user.
    displayName: Database Administrator Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_ADMIN_PASSWORD
  - description: The custom NPM mirror URL
    displayName: Custom NPM Mirror URL
    name: NPM_MIRROR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: nodejs-postgresql-persistent
    template: nodejs-postgresql-persistent
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/nodeshift-starters/nodejs-rest-http-crud/blob/master/README.md.
  metadata:
    annotations:
      description: An example Node.js application with a PostgreSQL database. For
        more information about using this template, including OpenShift considerations,
        see https://github.com/nodeshift-starters/nodejs-rest-http-crud/blob/master/README.md.
      iconClass: icon-nodejs
      openshift.io/display-name: Node.js + PostgreSQL
      openshift.io/documentation-url: https://github.com/nodeshift-starters/nodejs-rest-http-crud
      openshift.io/long-description: This template defines resources needed to develop
        a NodeJS application, including a build configuration, application deployment
        configuration, and database deployment configuration.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,nodejs
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: nodejs-postgresql-persistent
    namespace: openshift
    resourceVersion: "21862"
    uid: c86c55b0-7ca6-4ecb-8534-9f52f5f16a1c
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      database-admin-password: ${DATABASE_ADMIN_PASSWORD}
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit: {}
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: NPM_MIRROR
            value: ${NPM_MIRROR}
          from:
            kind: ImageStreamTag
            name: nodejs:${NODEJS_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      labels:
        app.openshift.io/runtime: nodejs
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app.openshift.io/runtime: nodejs
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: ${NAME}
            image: ' '
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 3
            name: nodejs-postgresql-persistent
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 3
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - nodejs-postgresql-persistent
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        port: 5432
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: ${NAME}
            image: ' '
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
            name: postgresql
            ports:
            - containerPort: 5432
            resources:
              limits:
                memory: ${MEMORY_POSTGRESQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:${POSTGRESQL_VERSION}
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: nodejs-postgresql-persistent
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of NodeJS image to be used (14-ubi8, 16-ubi8, or latest).
    displayName: Version of NodeJS Image
    name: NODEJS_VERSION
    required: true
    value: 16-ubi8
  - description: Version of PostgreSQL image to be used (12-el8, or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: 12-el8
  - description: Maximum amount of memory the Node.js container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 256Mi
  - description: Maximum amount of memory the PostgreSQL container can use.
    displayName: Memory Limit (PostgreSQL)
    name: MEMORY_POSTGRESQL_LIMIT
    required: true
    value: 256Mi
  - description: Volume space available for data, e.g. 512Mi, 2Gi
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/nodeshift-starters/nodejs-rest-http-crud.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Node.js service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - description: A secret string used to configure the Generic webhook.
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: Username for PostgreSQL user that will be used for accessing the
      database.
    displayName: PostgreSQL Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: DATABASE_USER
  - description: Password for the PostgreSQL user.
    displayName: PostgreSQL Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_PASSWORD
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: my_data
  - description: Password for the database admin user.
    displayName: Database Administrator Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: DATABASE_ADMIN_PASSWORD
  - description: The custom NPM mirror URL
    displayName: Custom NPM Mirror URL
    name: NPM_MIRROR
- apiVersion: template.openshift.io/v1
  kind: Template
  message: A new java application has been created in your project.
  metadata:
    annotations:
      description: An example Java application using OpenJDK. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.
      iconClass: icon-rh-openjdk
      openshift.io/display-name: OpenJDK example application
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: java
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat OpenJDK Java based application.
      template.openshift.io/support-url: https://access.redhat.com
      version: 1.4.17
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
      template: openjdk-web-basic-s2i
      xpaas: 1.4.17
    name: openjdk-web-basic-s2i
    namespace: openshift
    resourceVersion: "21842"
    uid: 584eaf99-236b-480f-a3c1-b1ce95c65d54
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The application's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          forcePull: true
          from:
            kind: ImageStreamTag
            name: java:${JAVA_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env: []
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
          terminationGracePeriodSeconds: 75
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: openjdk-app
  - description: The version of Java to use, e.g. 8, 11, 17, latest. (Corresponds
      to the 'java' ImageStream tag.)
    displayName: Java Version
    name: JAVA_IMAGE_STREAM_TAG
    required: true
    value: latest
  - description: Git source URI for application
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/jboss-openshift/openshift-quickstarts
  - description: Git branch/tag reference
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
    value: master
  - description: Path within Git project to build; empty for root project directory.
    displayName: Context Directory
    name: CONTEXT_DIR
    value: undertow-servlet
  - description: 'Custom hostname for http service route.  Leave blank for default
      hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: GitHub trigger secret
    displayName: Github Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: Generic build trigger secret
    displayName: Generic Webhook Secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    createdBy: parksmap-template
  metadata:
    annotations:
      description: Application template for Parksmap application web, frontend and
        backend components
      iconClass: icon-eap
      openshift.io/display-name: Parksmap
      openshift.io/long-description: This template deploys a ParksMap application.
        Parksmap is a polyglot geo-spatial data visualization application built using
        the microservices architecture and is composed of a set of services which
        are developed using different programming languages and frameworks.
      openshift.io/provider-display-name: OpenShift evangelist team
      tags: roadshow,java,springboot,openshift
    creationTimestamp: "2023-07-18T14:18:50Z"
    name: parksmap
    namespace: openshift
    resourceVersion: "48733"
    uid: 9584af1a-9b3e-4e08-a459-cd8deeef5e72
  objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        app.openshift.io/connects-to: ${MONGODB_MLB_APPLICATION_NAME}
        app.openshift.io/vcs-ref: master
        app.openshift.io/vcs-uri: https://github.com/openshift-roadshow/mlbparks.git
      labels:
        app: workshop
        app.kubernetes.io/name: eap
        app.kubernetes.io/part-of: workshop
        app.openshift.io/runtime: eap
        component: ${MLB_APPLICATION_NAME}
        role: backend
      name: ${MLB_APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        app: workshop
        component: ${MLB_APPLICATION_NAME}
        deploymentConfig: ${MLB_APPLICATION_NAME}
        role: database
      strategy:
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            app: workshop
            component: ${MLB_APPLICATION_NAME}
            deploymentConfig: ${MLB_APPLICATION_NAME}
            role: database
        spec:
          containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPENSHIFT_KUBE_PING_LABELS
              value: component=${MLB_APPLICATION_NAME}
            - name: OPENSHIFT_KUBE_PING_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DB_PORT
              value: "27017"
            - name: DB_HOST
              value: ${MONGODB_MLB_APPLICATION_NAME}
            - name: DB_USERNAME
              value: mongodb
            - name: DB_PASSWORD
              value: mongodb
            - name: DB_NAME
              value: mongodb
            image: quay.io/erkanercan/mlbparks:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /ws/healthz/
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 120
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            name: ${MLB_APPLICATION_NAME}
            ports:
            - containerPort: 8787
              name: debug
              protocol: TCP
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /ws/healthz/
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 20
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources: {}
            terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name":"${MONGODB_MLB_APPLICATION_NAME}","namespace":"","kind":"Service"}]'
      labels:
        app: workshop
        component: ${MLB_APPLICATION_NAME}
        role: backend
        type: parksmap-backend
      name: ${MLB_APPLICATION_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: 8787-tcp
        port: 8787
        protocol: TCP
        targetPort: 8787
      selector:
        deploymentConfig: ${MLB_APPLICATION_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: workshop
        component: ${MLB_APPLICATION_NAME}
        role: backend
        type: parksmap-backend
      name: ${MLB_APPLICATION_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${MLB_APPLICATION_NAME}
        weight: 100
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        app.openshift.io/connects-to: ${MONGODB_NP_APPLICATION_NAME}
        app.openshift.io/vcs-ref: master
        app.openshift.io/vcs-uri: https://github.com/openshift-roadshow/nationalparks.git
      labels:
        app: workshop
        app.kubernetes.io/part-of: workshop
        app.openshift.io/runtime: spring-boot
        component: ${NP_APPLICATION_NAME}
        role: backend
      name: ${NP_APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        app: workshop
        component: ${NP_APPLICATION_NAME}
        deploymentConfig: ${NP_APPLICATION_NAME}
        role: database
      strategy:
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            app: workshop
            component: ${NP_APPLICATION_NAME}
            deploymentConfig: ${NP_APPLICATION_NAME}
            role: database
        spec:
          containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPENSHIFT_KUBE_PING_LABELS
              value: component=${NP_APPLICATION_NAME}
            - name: OPENSHIFT_KUBE_PING_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MONGODB_SERVER_PORT
              value: "27017"
            - name: MONGODB_SERVER_HOST
              value: ${MONGODB_NP_APPLICATION_NAME}
            - name: MONGODB_USER
              value: mongodb
            - name: MONGODB_PASSWORD
              value: mongodb
            - name: MONGODB_DATABASE
              value: mongodb
            image: quay.io/erkanercan/nationalparks:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /ws/healthz/
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 120
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            name: ${NP_APPLICATION_NAME}
            ports:
            - containerPort: 8787
              name: debug
              protocol: TCP
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /ws/healthz/
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 20
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources: {}
            terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name":"${MONGODB_NP_APPLICATION_NAME}","namespace":"","kind":"Service"}]'
      labels:
        app: workshop
        component: ${NP_APPLICATION_NAME}
        role: backend
        type: parksmap-backend
      name: ${NP_APPLICATION_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: 8787-tcp
        port: 8787
        protocol: TCP
        targetPort: 8787
      selector:
        deploymentConfig: ${NP_APPLICATION_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: workshop
        component: ${NP_APPLICATION_NAME}
        role: backend
        type: parksmap-backend
      name: ${NP_APPLICATION_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${NP_APPLICATION_NAME}
        weight: 100
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        app.openshift.io/connects-to: ${MLB_APPLICATION_NAME}, ${NP_APPLICATION_NAME}
      labels:
        app: workshop
        app.kubernetes.io/part-of: workshop
        app.openshift.io/component: ${PM_APPLICATION_NAME}
        app.openshift.io/runtime: spring-boot
        component: ${PM_APPLICATION_NAME}
        deploymentConfig: ${PM_APPLICATION_NAME}
        role: frontend
      name: ${PM_APPLICATION_NAME}
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: workshop
          component: ${PM_APPLICATION_NAME}
          role: frontend
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: workshop
            component: ${PM_APPLICATION_NAME}
            role: frontend
        spec:
          containers:
          - image: quay.io/openshiftroadshow/parksmap:latest
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            name: ${PM_APPLICATION_NAME}
            ports:
            - containerPort: 8080
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 3
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: workshop
        app.kubernetes.io/part-of: workshop
        app.openshift.io/component: ${PM_APPLICATION_NAME}
        component: ${PM_APPLICATION_NAME}
        role: frontend
      name: ${PM_APPLICATION_NAME}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: 8787-tcp
        port: 8787
        protocol: TCP
        targetPort: 8787
      selector:
        component: ${PM_APPLICATION_NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: workshop
        app.kubernetes.io/part-of: workshop
        app.openshift.io/component: ${PM_APPLICATION_NAME}
        component: ${PM_APPLICATION_NAME}
        role: frontend
      name: ${PM_APPLICATION_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${PM_APPLICATION_NAME}
        weight: 100
  parameters:
  - description: The name for the parksmap web application.
    displayName: Parksmap Web Application Name
    name: PM_APPLICATION_NAME
    required: true
    value: parksmap
  - description: The name for the mlbparks application.
    displayName: Mlbparks Application Name
    name: MLB_APPLICATION_NAME
    required: true
    value: mlbparks
  - description: The name for the Mlbparks mongodb application.
    displayName: Mlbparks MongoDB Application Name
    name: MONGODB_MLB_APPLICATION_NAME
    required: true
    value: mongodb-mlbparks
  - description: The name for the nationalparks application.
    displayName: Nationalparks Application Name
    name: NP_APPLICATION_NAME
    required: true
    value: nationalparks
  - description: The name for the nationalparks mongodb application.
    displayName: Nationalparks MongoDB Application Name
    name: MONGODB_NP_APPLICATION_NAME
    required: true
    value: mongodb-nationalparks
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: postgresql-ephemeral-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Username: ${POSTGRESQL_USER}
           Password: ${POSTGRESQL_PASSWORD}
      Database Name: ${POSTGRESQL_DATABASE}
     Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.
  metadata:
    annotations:
      description: |-
        PostgreSQL database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing
      iconClass: icon-postgresql
      openshift.io/display-name: PostgreSQL (Ephemeral)
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/db_images/postgresql.html
      openshift.io/long-description: This template provides a standalone PostgreSQL
        server with a database created.  The database is not stored on persistent
        storage, so any restart of the service will result in all data being lost.  The
        database name, username, and password are chosen via parameters when provisioning
        this service.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,postgresql
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: postgresql-ephemeral
    namespace: openshift
    resourceVersion: "21825"
    uid: 447c2770-f259-4b17-8b40-e481cbddbdf1
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${POSTGRESQL_DATABASE}
      database-password: ${POSTGRESQL_PASSWORD}
      database-user: ${POSTGRESQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        nodePort: 0
        port: 5432
        protocol: TCP
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - /usr/libexec/check-container
                - --live
              initialDelaySeconds: 120
              timeoutSeconds: 10
            name: postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${DATABASE_SERVICE_NAME}-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
          - emptyDir:
              medium: ""
            name: ${DATABASE_SERVICE_NAME}-data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:${POSTGRESQL_VERSION}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
    status: {}
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: Username for PostgreSQL user that will be used for accessing the
      database.
    displayName: PostgreSQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: POSTGRESQL_USER
    required: true
  - description: Password for the PostgreSQL connection user.
    displayName: PostgreSQL Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: POSTGRESQL_PASSWORD
    required: true
  - description: Name of the PostgreSQL database accessed.
    displayName: PostgreSQL Database Name
    name: POSTGRESQL_DATABASE
    required: true
    value: sampledb
  - description: Version of PostgreSQL image to be used (10-el7, 10-el8, or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: 10-el8
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: postgresql-persistent-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Username: ${POSTGRESQL_USER}
           Password: ${POSTGRESQL_PASSWORD}
      Database Name: ${POSTGRESQL_DATABASE}
     Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.
  metadata:
    annotations:
      description: |-
        PostgreSQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.

        NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.
      iconClass: icon-postgresql
      openshift.io/display-name: PostgreSQL
      openshift.io/documentation-url: https://docs.okd.io/latest/using_images/db_images/postgresql.html
      openshift.io/long-description: This template provides a standalone PostgreSQL
        server with a database created.  The database is stored on persistent storage.  The
        database name, username, and password are chosen via parameters when provisioning
        this service.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,postgresql
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: postgresql-persistent
    namespace: openshift
    resourceVersion: "21827"
    uid: c7052b7a-811f-4fe8-bea8-bfff930dae4f
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-database_name: '{.data[''database-name'']}'
        template.openshift.io/expose-password: '{.data[''database-password'']}'
        template.openshift.io/expose-username: '{.data[''database-user'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-name: ${POSTGRESQL_DATABASE}
      database-password: ${POSTGRESQL_PASSWORD}
      database-user: ${POSTGRESQL_USER}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        nodePort: 0
        port: 5432
        protocol: TCP
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                - /usr/libexec/check-container
                - --live
              initialDelaySeconds: 120
              timeoutSeconds: 10
            name: postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${DATABASE_SERVICE_NAME}-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:${POSTGRESQL_VERSION}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
    status: {}
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: Username for PostgreSQL user that will be used for accessing the
      database.
    displayName: PostgreSQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: POSTGRESQL_USER
    required: true
  - description: Password for the PostgreSQL connection user.
    displayName: PostgreSQL Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: POSTGRESQL_PASSWORD
    required: true
  - description: Name of the PostgreSQL database accessed.
    displayName: PostgreSQL Database Name
    name: POSTGRESQL_DATABASE
    required: true
    value: sampledb
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Version of PostgreSQL image to be used (10-el7, 10-el8, or latest).
    displayName: Version of PostgreSQL Image
    name: POSTGRESQL_VERSION
    required: true
    value: 10-el8
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: rails-pgsql-persistent
    template: rails-pgsql-persistent
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/rails-ex/blob/master/README.md.
  metadata:
    annotations:
      description: An example Rails application with a PostgreSQL database. For more
        information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/rails-ex/blob/master/README.md.
      iconClass: icon-ruby
      openshift.io/display-name: Rails + PostgreSQL
      openshift.io/documentation-url: https://github.com/sclorg/rails-ex
      openshift.io/long-description: This template defines resources needed to develop
        a Rails application, including a build configuration, application deployment
        configuration, and database deployment configuration.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,ruby,rails
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: rails-pgsql-persistent
    namespace: openshift
    resourceVersion: "21790"
    uid: 89f4e059-5c5d-4657-91df-ca390da836fe
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      application-password: ${APPLICATION_PASSWORD}
      application-user: ${APPLICATION_USER}
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
      keybase: ${SECRET_KEY_BASE}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: bundle exec rake test
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: RUBYGEM_MIRROR
            value: ${RUBYGEM_MIRROR}
          from:
            kind: ImageStreamTag
            name: ruby:2.7-ubi8
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        recreateParams:
          pre:
            execNewPod:
              command:
              - ./migrate-database.sh
              containerName: ${NAME}
            failurePolicy: Abort
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  key: keybase
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            - name: APPLICATION_DOMAIN
              value: ${APPLICATION_DOMAIN}
            - name: APPLICATION_USER
              valueFrom:
                secretKeyRef:
                  key: application-user
                  name: ${NAME}
            - name: APPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: application-password
                  name: ${NAME}
            - name: RAILS_ENV
              value: ${RAILS_ENV}
            image: ' '
            livenessProbe:
              httpGet:
                path: /articles
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 3
            name: ${NAME}
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /articles
                port: 8080
              initialDelaySeconds: 5
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${NAME}
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        port: 5432
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: ' '
            livenessProbe:
              exec:
                command:
                - /usr/libexec/check-container
                - --live
              initialDelaySeconds: 120
              timeoutSeconds: 10
            name: postgresql
            ports:
            - containerPort: 5432
            readinessProbe:
              exec:
                command:
                - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_POSTGRESQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${DATABASE_SERVICE_NAME}-data
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:12-el8
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: rails-pgsql-persistent
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Maximum amount of memory the Rails container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the PostgreSQL container can use.
    displayName: Memory Limit (PostgreSQL)
    name: MEMORY_POSTGRESQL_LIMIT
    required: true
    value: 512Mi
  - description: Volume space available for data, e.g. 512Mi, 2Gi
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/rails-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Rails service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - description: Your secret key for verifying the integrity of signed cookies.
    displayName: Secret Key
    from: '[a-z0-9]{127}'
    generate: expression
    name: SECRET_KEY_BASE
  - description: The application user that is used within the sample application to
      authorize access on pages.
    displayName: Application Username
    name: APPLICATION_USER
    required: true
    value: openshift
  - description: The application password that is used within the sample application
      to authorize access on pages.
    displayName: Application Password
    name: APPLICATION_PASSWORD
    required: true
    value: secret
  - description: Environment under which the sample application will run. Could be
      set to production, development or test.
    displayName: Rails Environment
    name: RAILS_ENV
    required: true
    value: production
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - displayName: Database Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: DATABASE_USER
  - displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DATABASE_PASSWORD
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: root
  - displayName: Maximum Database Connections
    name: POSTGRESQL_MAX_CONNECTIONS
    value: "100"
  - displayName: Shared Buffer Amount
    name: POSTGRESQL_SHARED_BUFFERS
    value: 12MB
  - description: The custom RubyGems mirror URL
    displayName: Custom RubyGems Mirror URL
    name: RUBYGEM_MIRROR
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    app: rails-postgresql-example
    template: rails-postgresql-example
  message: |-
    The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/rails-ex/blob/master/README.md.
  metadata:
    annotations:
      description: |-
        An example Rails application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/rails-ex/blob/master/README.md.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.
      iconClass: icon-ruby
      openshift.io/display-name: Rails + PostgreSQL (Ephemeral)
      openshift.io/documentation-url: https://github.com/sclorg/rails-ex
      openshift.io/long-description: This template defines resources needed to develop
        a Rails application, including a build configuration, application deployment
        configuration, and database deployment configuration.  The database is stored
        in non-persistent storage, so this configuration should be used for experimental
        purposes only.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,ruby,rails
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: rails-postgresql-example
    namespace: openshift
    resourceVersion: "21810"
    uid: dd6195ee-04a8-4e1f-b17c-8f46f3310014
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}
    stringData:
      application-password: ${APPLICATION_PASSWORD}
      application-user: ${APPLICATION_USER}
      database-password: ${DATABASE_PASSWORD}
      database-user: ${DATABASE_USER}
      keybase: ${SECRET_KEY_BASE}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}",
          "kind": "Service"}]'
      name: ${NAME}
    spec:
      ports:
      - name: web
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit:
        script: bundle exec rake test
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: RUBYGEM_MIRROR
            value: ${RUBYGEM_MIRROR}
          from:
            kind: ImageStreamTag
            name: ruby:2.7-ubi8
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the application server
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
      strategy:
        recreateParams:
          pre:
            execNewPod:
              command:
              - ./migrate-database.sh
              containerName: ${NAME}
            failurePolicy: Abort
        type: Recreate
      template:
        metadata:
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
          - env:
            - name: DATABASE_SERVICE_NAME
              value: ${DATABASE_SERVICE_NAME}
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  key: keybase
                  name: ${NAME}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            - name: APPLICATION_DOMAIN
              value: ${APPLICATION_DOMAIN}
            - name: APPLICATION_USER
              valueFrom:
                secretKeyRef:
                  key: application-user
                  name: ${NAME}
            - name: APPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: application-password
                  name: ${NAME}
            - name: RAILS_ENV
              value: ${RAILS_ENV}
            image: ' '
            livenessProbe:
              httpGet:
                path: /articles
                port: 8080
              initialDelaySeconds: 10
              timeoutSeconds: 3
            name: ${NAME}
            ports:
            - containerPort: 8080
            readinessProbe:
              httpGet:
                path: /articles
                port: 8080
              initialDelaySeconds: 5
              timeoutSeconds: 3
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${NAME}
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the database server
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: postgresql
        port: 5432
        targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: Defines how to deploy the database
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
          name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${NAME}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${NAME}
            - name: POSTGRESQL_DATABASE
              value: ${DATABASE_NAME}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: ' '
            livenessProbe:
              exec:
                command:
                - /usr/libexec/check-container
                - --live
              initialDelaySeconds: 120
              timeoutSeconds: 10
            name: postgresql
            ports:
            - containerPort: 5432
            readinessProbe:
              exec:
                command:
                - /usr/libexec/check-container
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_POSTGRESQL_LIMIT}
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: data
          volumes:
          - emptyDir: {}
            name: data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - postgresql
          from:
            kind: ImageStreamTag
            name: postgresql:12-el8
            namespace: ${NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: rails-postgresql-example
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Maximum amount of memory the Rails container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: Maximum amount of memory the PostgreSQL container can use.
    displayName: Memory Limit (PostgreSQL)
    name: MEMORY_POSTGRESQL_LIMIT
    required: true
    value: 512Mi
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/sclorg/rails-ex.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: SOURCE_REPOSITORY_REF
  - description: Set this to the relative path to your project if it is not in the
      root of your repository.
    displayName: Context Directory
    name: CONTEXT_DIR
  - description: The exposed hostname that will route to the Rails service, if left
      blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
  - description: Github trigger secret.  A difficult to guess string encoded as part
      of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
  - description: Your secret key for verifying the integrity of signed cookies.
    displayName: Secret Key
    from: '[a-z0-9]{127}'
    generate: expression
    name: SECRET_KEY_BASE
  - description: The application user that is used within the sample application to
      authorize access on pages.
    displayName: Application Username
    name: APPLICATION_USER
    required: true
    value: openshift
  - description: The application password that is used within the sample application
      to authorize access on pages.
    displayName: Application Password
    name: APPLICATION_PASSWORD
    required: true
    value: secret
  - description: Environment under which the sample application will run. Could be
      set to production, development or test.
    displayName: Rails Environment
    name: RAILS_ENV
    required: true
    value: production
  - displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - displayName: Database Username
    from: user[A-Z0-9]{3}
    generate: expression
    name: DATABASE_USER
  - displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DATABASE_PASSWORD
  - displayName: Database Name
    name: DATABASE_NAME
    required: true
    value: root
  - displayName: Maximum Database Connections
    name: POSTGRESQL_MAX_CONNECTIONS
    value: "100"
  - displayName: Shared Buffer Amount
    name: POSTGRESQL_SHARED_BUFFERS
    value: 12MB
  - description: The custom RubyGems mirror URL
    displayName: Custom RubyGems Mirror URL
    name: RUBYGEM_MIRROR
- apiVersion: template.openshift.io/v1
  kind: Template
  message: |-
    The following service(s) have been created in your project: ${NAME}.

    More message text here
  metadata:
    annotations:
      description: Build a basic React Web Application
      iconClass: icon-js
      openshift.io/display-name: React Web Application
      samples.operator.openshift.io/version: 4.12.0
      tags: nodejs, react, web app
      template.openshift.io/provider-display-name: Red Hat, Inc.
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: react-web-app-example
    namespace: openshift
    resourceVersion: "21789"
    uid: 93c9253b-33ab-4e82-b2fb-51a4d72ab10c
  objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec: {}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit: {}
      resources: {}
      source:
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: NPM_MIRROR
            value: ${NPM_MIRROR}
          from:
            kind: ImageStreamTag
            name: nodejs:${NODEJS_VERSION}
            namespace: ${NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - type: ConfigChange
      - imageChange: {}
        type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        app: ${NAME}
      template:
        metadata:
          labels:
            app: ${NAME}
        spec:
          containers:
          - image: ${NAME}:latest
            name: ${NAME}
            ports:
            - containerPort: 3000
              name: http
              protocol: TCP
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              privileged: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${NAME}
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      ports:
      - name: http
        port: 8080
        targetPort: 3000
      selector:
        app: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      port:
        targetPort: 3000
      to:
        kind: Service
        name: ${NAME}
  parameters:
  - description: The name assigned to all of the frontend objects defined in this
      template.
    displayName: Name
    name: NAME
    required: true
    value: react-web-app
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    required: true
    value: openshift
  - description: Version of NodeJS image to be used (14-ubi8, 16-ubi8, or latest).
    displayName: Version of NodeJS Image
    name: NODEJS_VERSION
    required: true
    value: 16-ubi8
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The source URL for the application
    displayName: Source URL
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/nodeshift-blog-examples/react-web-app
  - description: The branch name for the application
    displayName: Source Branch
    name: SOURCE_REPOSITORY_REF
    required: true
    value: main
  - description: The location within the source repo of the application
    displayName: Source Directory
    name: SOURCE_REPOSITORY_DIR
    required: true
    value: .
  - description: The custom NPM mirror URL
    displayName: Custom NPM mirror URL
    name: NPM_MIRROR
  - description: A secret string used to configure the GitHub webhook.
    displayName: GitHub Webhook Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: redis-ephemeral-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Password: ${REDIS_PASSWORD}
     Connection URL: redis://${DATABASE_SERVICE_NAME}:6379/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/5.
  metadata:
    annotations:
      description: |-
        Redis in-memory data structure store, without persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/5.

        WARNING: Any data stored will be lost upon pod destruction. Only use this template for testing
      iconClass: icon-redis
      openshift.io/display-name: Redis (Ephemeral)
      openshift.io/documentation-url: https://github.com/sclorg/redis-container/tree/master/5
      openshift.io/long-description: This template provides a standalone Redis server.  The
        data is not stored on persistent storage, so any restart of the service will
        result in all data being lost.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,redis
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: redis-ephemeral
    namespace: openshift
    resourceVersion: "21819"
    uid: 591632c5-4158-4cdd-9f03-99c3d7b7550e
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-password: '{.data[''database-password'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-password: ${REDIS_PASSWORD}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: redis://{.spec.clusterIP}:{.spec.ports[?(.name=="redis")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: redis
        nodePort: 0
        port: 6379
        protocol: TCP
        targetPort: 6379
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 6379
              timeoutSeconds: 1
            name: redis
            ports:
            - containerPort: 6379
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/redis/data
              name: ${DATABASE_SERVICE_NAME}-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
          - emptyDir:
              medium: ""
            name: ${DATABASE_SERVICE_NAME}-data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - redis
          from:
            kind: ImageStreamTag
            name: redis:${REDIS_VERSION}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
    status: {}
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: redis
  - description: Password for the Redis connection user.
    displayName: Redis Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: REDIS_PASSWORD
    required: true
  - description: Version of Redis image to be used (5-el7, 5-el8, 6-el7, 6-el8, or
      latest).
    displayName: Version of Redis Image
    name: REDIS_VERSION
    required: true
    value: 6-el8
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: redis-persistent-template
  message: |-
    The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

           Password: ${REDIS_PASSWORD}
     Connection URL: redis://${DATABASE_SERVICE_NAME}:6379/

    For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/5.
  metadata:
    annotations:
      description: |-
        Redis in-memory data structure store, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/5.

        NOTE: You must have persistent volumes available in your cluster to use this template.
      iconClass: icon-redis
      openshift.io/display-name: Redis
      openshift.io/documentation-url: https://github.com/sclorg/redis-container/tree/master/5
      openshift.io/long-description: This template provides a standalone Redis server.  The
        data is stored on persistent storage.
      openshift.io/provider-display-name: Red Hat, Inc.
      openshift.io/support-url: https://access.redhat.com
      samples.operator.openshift.io/version: 4.12.0
      tags: database,redis
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: redis-persistent
    namespace: openshift
    resourceVersion: "21844"
    uid: a26df3e4-f19b-4976-b34e-24049ece5676
  objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/expose-password: '{.data[''database-password'']}'
      name: ${DATABASE_SERVICE_NAME}
    stringData:
      database-password: ${REDIS_PASSWORD}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: redis://{.spec.clusterIP}:{.spec.ports[?(.name=="redis")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
      - name: redis
        nodePort: 0
        port: 6379
        protocol: TCP
        targetPort: 6379
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
        spec:
          containers:
          - capabilities: {}
            env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
            image: ' '
            imagePullPolicy: IfNotPresent
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 6379
              timeoutSeconds: 1
            name: redis
            ports:
            - containerPort: 6379
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
              initialDelaySeconds: 5
              timeoutSeconds: 1
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            securityContext:
              capabilities: {}
              privileged: false
            terminationMessagePath: /dev/termination-log
            volumeMounts:
            - mountPath: /var/lib/redis/data
              name: ${DATABASE_SERVICE_NAME}-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
          - name: ${DATABASE_SERVICE_NAME}-data
            persistentVolumeClaim:
              claimName: ${DATABASE_SERVICE_NAME}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - redis
          from:
            kind: ImageStreamTag
            name: redis:${REDIS_VERSION}
            namespace: ${NAMESPACE}
          lastTriggeredImage: ""
        type: ImageChange
      - type: ConfigChange
    status: {}
  parameters:
  - description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    name: MEMORY_LIMIT
    required: true
    value: 512Mi
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: NAMESPACE
    value: openshift
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: redis
  - description: Password for the Redis connection user.
    displayName: Redis Connection Password
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    name: REDIS_PASSWORD
    required: true
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Version of Redis image to be used (5-el7, 5-el8, 6-el7, 6-el8, or
      latest).
    displayName: Version of Redis Image
    name: REDIS_VERSION
    required: true
    value: 6-el8
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel6-desktop-large
    namespace: openshift
    resourceVersion: "1333824"
    uid: 3758066a-df09-4897-bdf6-1eb76382044f
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel6-desktop-medium
    namespace: openshift
    resourceVersion: "1333825"
    uid: e9c93ff7-7f37-4ac9-a119-ba416e3d6420
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel6-desktop-small
    namespace: openshift
    resourceVersion: "1333826"
    uid: 2c967c69-a136-4637-8a0f-bc9a25e1d831
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel6-desktop-tiny
    namespace: openshift
    resourceVersion: "1333827"
    uid: 0a3b79d4-70dc-4a0a-bc73-1b8f626f3054
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel6-server-large
    namespace: openshift
    resourceVersion: "1333828"
    uid: 6afd2cbd-f0cc-499e-876a-e772d53a7745
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel6-server-medium
    namespace: openshift
    resourceVersion: "1333829"
    uid: 4ee2e92b-7175-4c2f-8a5d-a2bcf975a61b
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel6-server-small
    namespace: openshift
    resourceVersion: "1333831"
    uid: 920922ec-b7b4-4d12-801c-c3dd0ef30c92
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 6 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel6.0: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.1: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.2: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.3: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.4: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.5: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.6: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.7: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.8: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.9: Red Hat Enterprise Linux 6.0 or higher
      name.os.template.kubevirt.io/rhel6.10: Red Hat Enterprise Linux 6.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 6.0+ VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---6/6.10/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel6.0: "true"
      os.template.kubevirt.io/rhel6.1: "true"
      os.template.kubevirt.io/rhel6.2: "true"
      os.template.kubevirt.io/rhel6.3: "true"
      os.template.kubevirt.io/rhel6.4: "true"
      os.template.kubevirt.io/rhel6.5: "true"
      os.template.kubevirt.io/rhel6.6: "true"
      os.template.kubevirt.io/rhel6.7: "true"
      os.template.kubevirt.io/rhel6.8: "true"
      os.template.kubevirt.io/rhel6.9: "true"
      os.template.kubevirt.io/rhel6.10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel6-server-tiny
    namespace: openshift
    resourceVersion: "1333832"
    uid: ab3e228a-9982-424e-ad33-36a8b504a0bc
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel6-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel6
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - bootOrder: 1
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
              useVirtioTransitional: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel6-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel6
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel7-desktop-large
    namespace: openshift
    resourceVersion: "1333833"
    uid: 6ff3006e-81be-4099-aa52-90e2eae076a1
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel7-desktop-medium
    namespace: openshift
    resourceVersion: "1333836"
    uid: a4e1e636-454a-46a2-9ba9-6bac1d6c7ff6
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel7-desktop-small
    namespace: openshift
    resourceVersion: "1333837"
    uid: a1359fd6-4cd9-416d-8461-909f4420e960
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel7-desktop-tiny
    namespace: openshift
    resourceVersion: "1333838"
    uid: 95a232b6-6d65-4909-a9c7-dde0712be221
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel7-highperformance-large
    namespace: openshift
    resourceVersion: "1333839"
    uid: 8885e9a0-7633-4506-b550-e574343d8cac
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel7-highperformance-medium
    namespace: openshift
    resourceVersion: "1333842"
    uid: f5b5be8c-b0c5-4133-a5fc-6872705f081a
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel7-highperformance-small
    namespace: openshift
    resourceVersion: "1333846"
    uid: 6fac71ba-85c3-4ab7-b514-3a14ee9410d8
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-highperformance-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel7-highperformance-tiny
    namespace: openshift
    resourceVersion: "1333847"
    uid: 8702cd1a-8d23-44d2-bed7-37287437c88a
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-highperformance-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel7-server-large
    namespace: openshift
    resourceVersion: "1333848"
    uid: a33d601c-a34b-4aae-9166-902b21274d77
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:47Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel7-server-medium
    namespace: openshift
    resourceVersion: "1333850"
    uid: f917bff2-f2b9-445f-8424-694368b4583c
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel7-server-small
    namespace: openshift
    resourceVersion: "1333851"
    uid: b1b36cd9-a7cd-41b7-a334-a91f04467177
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 7 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel7.0: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.1: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.2: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.3: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.4: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.5: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.6: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.7: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.8: Red Hat Enterprise Linux 7.0 or higher
      name.os.template.kubevirt.io/rhel7.9: Red Hat Enterprise Linux 7.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 7 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/69/ver=/rhel---7/7.9/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel7.0: "true"
      os.template.kubevirt.io/rhel7.1: "true"
      os.template.kubevirt.io/rhel7.2: "true"
      os.template.kubevirt.io/rhel7.3: "true"
      os.template.kubevirt.io/rhel7.4: "true"
      os.template.kubevirt.io/rhel7.5: "true"
      os.template.kubevirt.io/rhel7.6: "true"
      os.template.kubevirt.io/rhel7.7: "true"
      os.template.kubevirt.io/rhel7.8: "true"
      os.template.kubevirt.io/rhel7.9: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel7-server-tiny
    namespace: openshift
    resourceVersion: "1333852"
    uid: 5931c131-539b-4291-a31d-1824738a76f9
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1073741824
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel7-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel7
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel7-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel7
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel8-desktop-large
    namespace: openshift
    resourceVersion: "1333853"
    uid: 78df6a70-3bc2-4bdf-9b34-7e60d889dc29
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel8-desktop-medium
    namespace: openshift
    resourceVersion: "1333854"
    uid: 3617b8bc-2528-4cbe-aaac-dab4789d7c1f
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel8-desktop-small
    namespace: openshift
    resourceVersion: "1333856"
    uid: 176a0fae-9965-4a04-ac30-973172753a8f
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel8-desktop-tiny
    namespace: openshift
    resourceVersion: "1333862"
    uid: 8015086c-5ca5-4ef3-9b9a-3f10942dc12c
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel8-highperformance-large
    namespace: openshift
    resourceVersion: "1333874"
    uid: c5cb99f4-283b-4285-8036-2b3be1592d99
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel8-highperformance-medium
    namespace: openshift
    resourceVersion: "1333875"
    uid: 8d6ecc17-79aa-427b-b356-7246eb0db9f5
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel8-highperformance-small
    namespace: openshift
    resourceVersion: "1333877"
    uid: 75278d9a-5615-4d54-a598-bccb081fbb0c
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-highperformance-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel8-highperformance-tiny
    namespace: openshift
    resourceVersion: "1333878"
    uid: 8c1b9d1d-7e04-4545-ad8a-f0ca047ce00c
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-highperformance-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel8-server-large
    namespace: openshift
    resourceVersion: "1333879"
    uid: e4c34d3e-f9df-4fcd-92e5-9460081ae2f0
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel8-server-medium
    namespace: openshift
    resourceVersion: "1333880"
    uid: 9f4c87e3-8985-4974-84f3-2d2a05b01e1a
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:48Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel8-server-small
    namespace: openshift
    resourceVersion: "1333881"
    uid: c51d1b01-9081-462d-8577-c72054332661
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 8 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
      name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 8 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel8/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:49Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel8.0: "true"
      os.template.kubevirt.io/rhel8.1: "true"
      os.template.kubevirt.io/rhel8.2: "true"
      os.template.kubevirt.io/rhel8.3: "true"
      os.template.kubevirt.io/rhel8.4: "true"
      os.template.kubevirt.io/rhel8.5: "true"
      os.template.kubevirt.io/rhel8.6: "true"
      os.template.kubevirt.io/rhel8.7: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel8-server-tiny
    namespace: openshift
    resourceVersion: "1333882"
    uid: 72fdb451-04e5-4f6e-b38e-0162e79952c6
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel8-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel8-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel8
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:49Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel9-desktop-large
    namespace: openshift
    resourceVersion: "1333883"
    uid: 7cd95bc7-59b1-4a9a-837f-dfce8ed7eb4f
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:50Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel9-desktop-medium
    namespace: openshift
    resourceVersion: "1333884"
    uid: 17f4cda4-3872-4c41-9515-ce9d41aaf39e
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:50Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel9-desktop-small
    namespace: openshift
    resourceVersion: "1333890"
    uid: 17b81ccc-1dc4-4ff5-9577-63037a4c7e64
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-desktop-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: rhel9-desktop-tiny
    namespace: openshift
    resourceVersion: "1333916"
    uid: d1574583-a5dd-4ba0-afc8-555d212ffab9
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-desktop-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              inputs:
              - bus: virtio
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel9-highperformance-large
    namespace: openshift
    resourceVersion: "1333931"
    uid: f54cee3a-3600-4e83-85bf-64f4e2e51582
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel9-highperformance-medium
    namespace: openshift
    resourceVersion: "1333943"
    uid: 1cb97e67-7eb4-421e-8f17-7fa8fa891a50
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel9-highperformance-small
    namespace: openshift
    resourceVersion: "1333954"
    uid: ef28ee21-453b-4cfb-a3c7-000569bce532
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-highperformance-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:53Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: rhel9-highperformance-tiny
    namespace: openshift
    resourceVersion: "1333962"
    uid: e6aaf4ee-163a-4c51-b266-1ccbbccdc164
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-highperformance-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - dedicatedIOThread: true
                disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            ioThreadsPolicy: shared
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel9-server-large
    namespace: openshift
    resourceVersion: "1333970"
    uid: a0539d4c-e7a1-45f2-952c-e796b2dbdd67
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel9-server-medium
    namespace: openshift
    resourceVersion: "1333972"
    uid: da9ce404-1b85-4417-9820-072424324790
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/small: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel9-server-small
    namespace: openshift
    resourceVersion: "1333976"
    uid: 2df09fc4-aeb5-464a-8768-4d4a531f62b3
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-server-small
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: small
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 2Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      description: Template for Red Hat Enterprise Linux 9 VM or newer. A PVC with
        the RHEL disk image must be available.
      iconClass: icon-rhel
      name.os.template.kubevirt.io/rhel9.0: Red Hat Enterprise Linux 9.0 or higher
      name.os.template.kubevirt.io/rhel9.1: Red Hat Enterprise Linux 9.0 or higher
      openshift.io/display-name: Red Hat Enterprise Linux 9 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,linux,rhel
      template.kubevirt.io/containerdisks: |
        registry.redhat.io/rhel9/rhel-guest-image
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.sockets
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.cpu.threads
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/images: |
        https://access.redhat.com/downloads/content/479/ver=/rhel---9/9.0/x86_64/product-software
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:53Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/tiny: "true"
      os.template.kubevirt.io/rhel9.0: "true"
      os.template.kubevirt.io/rhel9.1: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: rhel9-server-tiny
    namespace: openshift
    resourceVersion: "1333979"
    uid: 82cdba99-09f4-4ab5-9a63-1ae645f2a572
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: rhel9-server-tiny
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: tiny
            vm.kubevirt.io/os: rhel9
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: tiny
        spec:
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              - disk:
                  bus: virtio
                name: cloudinitdisk
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 1.5Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
          - cloudInitNoCloud:
              userData: |-
                #cloud-config
                user: cloud-user
                password: ${CLOUD_USER_PASSWORD}
                chpasswd: { expire: False }
            name: cloudinitdisk
  parameters:
  - description: VM name
    from: rhel9-[a-z0-9]{16}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: rhel9
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
  - description: Randomized password for the cloud-init user cloud-user
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'
    generate: expression
    name: CLOUD_USER_PASSWORD
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: s2i-fuse711-spring-boot-2-camel
  metadata:
    annotations:
      description: Spring Boot 2 and Camel QuickStart. This example demonstrates how
        you can use Apache Camel with Spring Boot 2 on OpenShift. The quickstart uses
        Spring Boot to configure an application which includes a Camel route that
        triggers a message every 5th second, and routes the message to a log.
      iconClass: icon-rh-integration
      openshift.io/display-name: Red Hat Fuse 7.11 Camel with Spring Boot 2
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,java,springboot,fis,jboss-fuse
      version: "1.11"
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: s2i-fuse711-spring-boot-2-camel
    namespace: openshift
    resourceVersion: "21868"
    uid: b03ac4bf-5ff9-42d3-81ac-65b2fe869d57
  objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec: {}
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      resources:
        limits:
          memory: ${BUILD_MEMORY_LIMIT}
        requests:
          memory: ${BUILD_MEMORY_REQUEST}
      source:
        git:
          ref: ${GIT_REF}
          uri: ${GIT_REPO}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: BUILD_LOGLEVEL
            value: "5"
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          - name: MAVEN_ARGS
            value: ${MAVEN_ARGS}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${BASE_IMAGE_NAME}:${BUILDER_VERSION}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${BUILD_SECRET}
        type: GitHub
      - generic:
          secret: ${BUILD_SECRET}
        type: Generic
      - type: ConfigChange
      - imageChange: {}
        type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        component: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: ${APP_NAME}
            com.company: Red_Hat
            component: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
            group: quickstarts
            provider: s2i
            rht.comp: ${APP_NAME}
            rht.comp_ver: ${APP_VERSION}
            rht.prod_name: Red_Hat_Integration
            rht.prod_ver: "7.11"
            version: ${APP_VERSION}
        spec:
          containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: library/${APP_NAME}:latest
            livenessProbe:
              httpGet:
                path: /actuator/health
                port: 8081
              initialDelaySeconds: 180
            name: ${APP_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8081
              initialDelaySeconds: 10
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: ${APP_NAME}:latest
        type: ImageChange
  parameters:
  - description: The name assigned to the application.
    displayName: Application Name
    name: APP_NAME
    required: true
    value: s2i-fuse711-spring-boot-2-camel
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: GIT_REPO
    required: true
    value: https://github.com/fabric8-quickstarts/spring-boot-camel.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: GIT_REF
    value: spring-boot-camel-7.11.0.fuse-sb2-7_11_0-00024-redhat-00001
  - description: The base image used. Default is fuse7-java-openshift which is JDK8
      based; fuse7-java11-openshift is JDK11 based
    displayName: Base Image Name, JDK11 or JDK8
    name: BASE_IMAGE_NAME
    value: fuse7-java-openshift
  - description: The version of the FIS S2I builder image to use.
    displayName: Builder version
    name: BUILDER_VERSION
    value: "1.11"
  - description: The application version.
    displayName: Application Version
    name: APP_VERSION
    value: 7.11.0.fuse-sb2-7_11_0-00024-redhat-00001
  - description: Arguments passed to mvn in the build.
    displayName: Maven Arguments
    name: MAVEN_ARGS
    value: package -DskipTests -Djkube.skip -e -B
  - description: Extra arguments passed to mvn, e.g. for multi-module builds.
    displayName: Extra Maven Arguments
    name: MAVEN_ARGS_APPEND
  - description: Maven mirror to use for S2I builds.
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Directory of the artifact to be built, e.g. for multi-module builds.
    displayName: Maven build directory
    name: ARTIFACT_DIR
  - description: Namespace in which the Fuse ImageStreams are installed. These ImageStreams
      are normally installed in the openshift namespace. You should only need to modify
      this if you've installed the ImageStreams in a different namespace/project.
    displayName: Image Stream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: The secret needed to trigger a build.
    displayName: Git Build Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: BUILD_SECRET
  - description: The amount of CPU to request.
    displayName: CPU request
    name: CPU_REQUEST
    required: true
    value: "0.2"
  - description: The amount of memory required for the container to run.
    displayName: Memory request
    name: MEMORY_REQUEST
    required: true
    value: 256Mi
  - description: The amount of CPU the container is limited to use.
    displayName: CPU limit
    name: CPU_LIMIT
    required: true
    value: "1.0"
  - description: The amount of memory the container is limited to use.
    displayName: Memory limit
    name: MEMORY_LIMIT
    required: true
    value: 256Mi
  - description: The amount of memory to request for builds.
    displayName: Build Memory request
    name: BUILD_MEMORY_REQUEST
    required: true
    value: 0.7G
  - description: The amount of memory the build container is limited to use.
    displayName: Build Memory limit
    name: BUILD_MEMORY_LIMIT
    required: true
    value: 1G
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: s2i-fuse711-spring-boot-2-camel-rest-3scale
  metadata:
    annotations:
      description: Spring Boot 2, Camel REST DSL and 3Scale QuickStart. This example
        demonstrates how to use Camel's REST DSL to expose a RESTful API and expose
        it to 3scale.
      iconClass: icon-rh-integration
      openshift.io/display-name: Red Hat Fuse 7.11 Camel REST DSL and 3Scale
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,java,springboot,fis,jboss-fuse,3scale
      version: "1.11"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: s2i-fuse711-spring-boot-2-camel-rest-3scale
    namespace: openshift
    resourceVersion: "21822"
    uid: 561f21c7-44d5-4145-b8be-cdfa528c7922
  objects:
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${SERVICE_NAME}-route
    spec:
      to:
        kind: Service
        name: ${SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations: {}
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${SERVICE_NAME}
    spec:
      clusterIP: None
      deprecatedPublicIPs: []
      ports:
      - port: 9411
        protocol: TCP
        targetPort: 8080
      selector:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec: {}
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      resources:
        limits:
          memory: ${BUILD_MEMORY_LIMIT}
        requests:
          memory: ${BUILD_MEMORY_REQUEST}
      source:
        git:
          ref: ${GIT_REF}
          uri: ${GIT_REPO}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: BUILD_LOGLEVEL
            value: "5"
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          - name: MAVEN_ARGS
            value: ${MAVEN_ARGS}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${BASE_IMAGE_NAME}:${BUILDER_VERSION}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${BUILD_SECRET}
        type: GitHub
      - generic:
          secret: ${BUILD_SECRET}
        type: Generic
      - type: ConfigChange
      - imageChange: {}
        type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        component: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: ${APP_NAME}
            com.company: Red_Hat
            component: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
            group: quickstarts
            provider: s2i
            rht.comp: ${APP_NAME}
            rht.comp_ver: ${APP_VERSION}
            rht.prod_name: Red_Hat_Integration
            rht.prod_ver: "7.11"
            version: ${APP_VERSION}
        spec:
          containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: library/${APP_NAME}:latest
            livenessProbe:
              httpGet:
                path: /actuator/health
                port: 8081
              initialDelaySeconds: 180
            name: ${APP_NAME}
            ports:
            - containerPort: 8080
              name: http
            - containerPort: 8778
              name: jolokia
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8081
              initialDelaySeconds: 10
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: ${APP_NAME}:latest
        type: ImageChange
  parameters:
  - description: The name assigned to the application.
    displayName: Application Name
    name: APP_NAME
    required: true
    value: s2i-fuse711-spring-boot-2-camel-rest-3scale
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: GIT_REPO
    required: true
    value: https://github.com/fabric8-quickstarts/spring-boot-camel-rest-3scale.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: GIT_REF
    value: spring-boot-camel-rest-3scale-7.11.0.fuse-sb2-7_11_0-00023-redhat-00001
  - description: Exposed service name.
    displayName: Service Name
    name: SERVICE_NAME
    value: camel-rest-3scale
  - description: The base image used. Default is fuse7-java-openshift which is JDK8
      based; fuse7-java11-openshift is JDK11 based
    displayName: Base Image Name, JDK11 or JDK8
    name: BASE_IMAGE_NAME
    value: fuse7-java-openshift
  - description: The version of the FIS S2I builder image to use.
    displayName: Builder version
    name: BUILDER_VERSION
    value: "1.11"
  - description: The application version.
    displayName: Application Version
    name: APP_VERSION
    value: 7.11.0.fuse-sb2-7_11_0-00023-redhat-00001
  - description: Arguments passed to mvn in the build.
    displayName: Maven Arguments
    name: MAVEN_ARGS
    value: package -DskipTests -Djkube.skip -e -B
  - description: Extra arguments passed to mvn, e.g. for multi-module builds.
    displayName: Extra Maven Arguments
    name: MAVEN_ARGS_APPEND
  - description: Maven mirror to use for S2I builds.
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Directory of the artifact to be built, e.g. for multi-module builds.
    displayName: Maven build directory
    name: ARTIFACT_DIR
  - description: Namespace in which the Fuse ImageStreams are installed. These ImageStreams
      are normally installed in the openshift namespace. You should only need to modify
      this if you've installed the ImageStreams in a different namespace/project.
    displayName: Image Stream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: The secret needed to trigger a build.
    displayName: Git Build Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: BUILD_SECRET
  - description: The amount of CPU to request.
    displayName: CPU request
    name: CPU_REQUEST
    required: true
    value: "0.2"
  - description: The amount of memory required for the container to run.
    displayName: Memory request
    name: MEMORY_REQUEST
    required: true
    value: 256Mi
  - description: The amount of CPU the container is limited to use.
    displayName: CPU limit
    name: CPU_LIMIT
    required: true
    value: "1.0"
  - description: The amount of memory the container is limited to use.
    displayName: Memory limit
    name: MEMORY_LIMIT
    required: true
    value: 256Mi
  - description: The amount of memory to request for builds.
    displayName: Build Memory request
    name: BUILD_MEMORY_REQUEST
    required: true
    value: 0.7G
  - description: The amount of memory the build container is limited to use.
    displayName: Build Memory limit
    name: BUILD_MEMORY_LIMIT
    required: true
    value: 1G
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    template: s2i-fuse711-spring-boot-2-camel-xml
  metadata:
    annotations:
      description: Spring Boot 2 and Camel Xml QuickStart. This example demonstrates
        how you can use Apache Camel with Spring Boot 2 on OpenShift. The quickstart
        uses Spring Boot 2 to configure an application which includes a Camel route
        (in Spring xml) that triggers a message every 5th second, and routes the message
        to a log.
      iconClass: icon-rh-integration
      openshift.io/display-name: Red Hat Fuse 7.11 Camel XML DSL with Spring Boot
        2
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: quickstart,java,springboot,fis,jboss-fuse
      version: "1.11"
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: s2i-fuse711-spring-boot-2-camel-xml
    namespace: openshift
    resourceVersion: "21849"
    uid: 38678c25-a32b-4663-a0ee-964795541653
  objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec: {}
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      resources:
        limits:
          memory: ${BUILD_MEMORY_LIMIT}
        requests:
          memory: ${BUILD_MEMORY_REQUEST}
      source:
        git:
          ref: ${GIT_REF}
          uri: ${GIT_REPO}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: BUILD_LOGLEVEL
            value: "5"
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          - name: MAVEN_ARGS
            value: ${MAVEN_ARGS}
          - name: MAVEN_ARGS_APPEND
            value: ${MAVEN_ARGS_APPEND}
          - name: MAVEN_MIRROR_URL
            value: ${MAVEN_MIRROR_URL}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${BASE_IMAGE_NAME}:${BUILDER_VERSION}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
      - github:
          secret: ${BUILD_SECRET}
        type: GitHub
      - generic:
          secret: ${BUILD_SECRET}
        type: Generic
      - type: ConfigChange
      - imageChange: {}
        type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        component: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: ${APP_NAME}
            com.company: Red_Hat
            component: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
            group: quickstarts
            provider: s2i
            rht.comp: ${APP_NAME}
            rht.comp_ver: ${APP_VERSION}
            rht.prod_name: Red_Hat_Integration
            rht.prod_ver: "7.11"
            version: ${APP_VERSION}
        spec:
          containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: library/${APP_NAME}:latest
            livenessProbe:
              httpGet:
                path: /actuator/health
                port: 8081
              initialDelaySeconds: 180
            name: ${APP_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8081
              initialDelaySeconds: 10
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: ${APP_NAME}:latest
        type: ImageChange
  parameters:
  - description: The name assigned to the application.
    displayName: Application Name
    name: APP_NAME
    required: true
    value: s2i-fuse711-spring-boot-2-camel-xml
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: GIT_REPO
    required: true
    value: https://github.com/fabric8-quickstarts/spring-boot-camel-xml.git
  - description: Set this to a branch name, tag or other ref of your repository if
      you are not using the default branch.
    displayName: Git Reference
    name: GIT_REF
    value: spring-boot-camel-xml-7.11.0.fuse-sb2-7_11_0-00022-redhat-00001
  - description: The base image used. Default is fuse7-java-openshift which is JDK8
      based; fuse7-java11-openshift is JDK11 based
    displayName: Base Image Name, JDK11 or JDK8
    name: BASE_IMAGE_NAME
    value: fuse7-java-openshift
  - description: The version of the FIS S2I builder image to use.
    displayName: Builder version
    name: BUILDER_VERSION
    value: "1.11"
  - description: The application version.
    displayName: Application Version
    name: APP_VERSION
    value: 7.11.0.fuse-sb2-7_11_0-00022-redhat-00001
  - description: Arguments passed to mvn in the build.
    displayName: Maven Arguments
    name: MAVEN_ARGS
    value: package -DskipTests -Djkube.skip -e -B
  - description: Extra arguments passed to mvn, e.g. for multi-module builds.
    displayName: Extra Maven Arguments
    name: MAVEN_ARGS_APPEND
  - description: Maven mirror to use for S2I builds.
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Directory of the artifact to be built, e.g. for multi-module builds.
    displayName: Maven build directory
    name: ARTIFACT_DIR
  - description: Namespace in which the Fuse ImageStreams are installed. These ImageStreams
      are normally installed in the openshift namespace. You should only need to modify
      this if you've installed the ImageStreams in a different namespace/project.
    displayName: Image Stream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: The secret needed to trigger a build.
    displayName: Git Build Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: BUILD_SECRET
  - description: The amount of CPU to request.
    displayName: CPU request
    name: CPU_REQUEST
    required: true
    value: "0.2"
  - description: The amount of memory required for the container to run.
    displayName: Memory request
    name: MEMORY_REQUEST
    required: true
    value: 256Mi
  - description: The amount of CPU the container is limited to use.
    displayName: CPU limit
    name: CPU_LIMIT
    required: true
    value: "1.0"
  - description: The amount of memory the container is limited to use.
    displayName: Memory limit
    name: MEMORY_LIMIT
    required: true
    value: 256Mi
  - description: The amount of memory to request for builds.
    displayName: Build Memory request
    name: BUILD_MEMORY_REQUEST
    required: true
    value: 0.7G
  - description: The amount of memory the build container is limited to use.
    displayName: Build Memory limit
    name: BUILD_MEMORY_LIMIT
    required: true
    value: 1G
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.5.3.GA
    template: sso75-https
  message: 'A new RH-SSO service has been created in your project. The admin username/password
    for accessing the master realm via the RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
    Please be sure to create the following secrets: "${HTTPS_SECRET}" containing the
    ${HTTPS_KEYSTORE} file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}"
    containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications;
    "${SSO_TRUSTSTORE_SECRET}" containing the ${SSO_TRUSTSTORE} file used for securing
    RH-SSO requests.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.5 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso75-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.5 on OpenJDK (Ephemeral
        with passthrough TLS)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.5 on OpenJDK server based deployment,
        securing RH-SSO communication using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.5.3.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso75-https
    namespace: openshift
    resourceVersion: "21845"
    uid: 0e5e2643-4171-4dac-befc-87c81565cc14
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            - name: SSO_TRUSTSTORE
              value: ${SSO_TRUSTSTORE}
            - name: SSO_TRUSTSTORE_DIR
              value: /etc/sso-secret-volume
            - name: SSO_TRUSTSTORE_PASSWORD
              value: ${SSO_TRUSTSTORE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
            - mountPath: /etc/sso-secret-volume
              name: sso-truststore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso75-openshift-rhel8:7.5
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate (e.g. jboss)
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate (e.g. mykeystorepass)
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate (e.g. secret-key)
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate (e.g. password)
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The name of the truststore file within the secret (e.g. truststore.jks)
    displayName: RH-SSO Trust Store
    name: SSO_TRUSTSTORE
  - description: The password for the truststore and certificate (e.g. mykeystorepass)
    displayName: RH-SSO Trust Store Password
    name: SSO_TRUSTSTORE_PASSWORD
  - description: The name of the secret containing the truststore file (e.g. truststore-secret).
      Used for volume secretName
    displayName: RH-SSO Trust Store Secret
    name: SSO_TRUSTSTORE_SECRET
    value: sso-app-secret
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.5.3.GA
    template: sso75-ocp4-x509-https
  message: A new RH-SSO service has been created in your project. The admin username/password
    for accessing the master realm via the RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
    The HTTPS keystore used for serving secure content, the JGroups keystore used
    for securing JGroups communications, and server truststore used for securing RH-SSO
    requests were automatically created via OpenShift's service serving x509 certificate
    secrets.
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.5 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso75-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.5 on OpenJDK (Ephemeral)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.5 on OpenJDK server based deployment,
        securing RH-SSO communication using re-encrypt TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.5.3.GA
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso75-ocp4-x509-https
    namespace: openshift
    resourceVersion: "21863"
    uid: 7175b76e-81d9-424c-81ae-7892901d16c9
  objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      annotations:
        description: ConfigMap providing service ca bundle.
        service.beta.openshift.io/inject-cabundle: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-service-ca
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        termination: reencrypt
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: X509_CA_BUNDLE
              value: /var/run/configmaps/service-ca/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/x509/https
              name: sso-x509-https-volume
              readOnly: true
            - mountPath: /etc/x509/jgroups
              name: sso-x509-jgroups-volume
              readOnly: true
            - mountPath: /var/run/configmaps/service-ca
              name: service-ca
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: sso-x509-https-volume
            secret:
              secretName: sso-x509-https-secret
          - name: sso-x509-jgroups-volume
            secret:
              secretName: sso-x509-jgroups-secret
          - configMap:
              name: ${APPLICATION_NAME}-service-ca
            name: service-ca
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso75-openshift-rhel8:7.5
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The password for the JGroups cluster.
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server admininistrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.5.3.GA
    template: sso75-ocp4-x509-postgresql-persistent
  message: A new persistent RH-SSO service (using PostgreSQL) has been created in
    your project. The admin username/password for accessing the master realm via the
    RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password
    for accessing the PostgreSQL database "${DB_DATABASE}" is ${DB_USERNAME}/${DB_PASSWORD}.
    The HTTPS keystore used for serving secure content, the JGroups keystore used
    for securing JGroups communications, and server truststore used for securing RH-SSO
    requests were automatically created via OpenShift's service serving x509 certificate
    secrets.
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.5 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso75-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.5 on OpenJDK + PostgreSQL
        (Persistent)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.5 on OpenJDK server based deployment,
        deployment configuration for PostgreSQL using persistence, and securing RH-SSO
        communication using re-encrypt TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.5.3.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso75-ocp4-x509-postgresql-persistent
    namespace: openshift
    resourceVersion: "21820"
    uid: 01910d70-781d-4c0d-9aa4-3b3cc9c417f7
  objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      annotations:
        description: ConfigMap providing service ca bundle.
        service.beta.openshift.io/inject-cabundle: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-service-ca
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        termination: reencrypt
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_SERVICE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_JNDI
              value: ${DB_JNDI}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_DATABASE
              value: ${DB_DATABASE}
            - name: TX_DATABASE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: X509_CA_BUNDLE
              value: /var/run/configmaps/service-ca/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/x509/https
              name: sso-x509-https-volume
              readOnly: true
            - mountPath: /etc/x509/jgroups
              name: sso-x509-jgroups-volume
              readOnly: true
            - mountPath: /var/run/configmaps/service-ca
              name: service-ca
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: sso-x509-https-volume
            secret:
              secretName: sso-x509-https-secret
          - name: sso-x509-jgroups-volume
            secret:
              secretName: sso-x509-jgroups-secret
          - configMap:
              name: ${APPLICATION_NAME}-service-ca
            name: service-ca
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso75-openshift-rhel8:7.5
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}-postgresql
          name: ${APPLICATION_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            - name: POSTGRESQL_DATABASE
              value: ${DB_DATABASE}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: postgresql
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 10
            name: ${APPLICATION_NAME}-postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              timeoutSeconds: 10
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${APPLICATION_NAME}-postgresql-pvol
          terminationGracePeriodSeconds: 60
          volumes:
          - name: ${APPLICATION_NAME}-postgresql-pvol
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-postgresql-claim
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}-postgresql
          from:
            kind: ImageStreamTag
            name: postgresql13-for-sso75-openshift-rhel8:${POSTGRESQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The password for the JGroups cluster.
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Database JNDI name used by application to resolve the datasource,
      e.g. java:/jboss/datasources/postgresql
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets
      the maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching
      data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: Size of persistent storage for database volume.
    displayName: Database Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The tag to use for the "postgresql" image stream.  Typically, this
      aligns with the major.minor version of PostgreSQL.
    displayName: PostgreSQL Image Stream Tag
    name: POSTGRESQL_IMAGE_STREAM_TAG
    required: true
    value: 13-el8
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.5.3.GA
    template: sso75-postgresql
  message: 'A new RH-SSO service (using PostgreSQL) has been created in your project.
    The admin username/password for accessing the master realm via the RH-SSO console
    is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password for accessing
    the PostgreSQL database "${DB_DATABASE}" is ${DB_USERNAME}/${DB_PASSWORD}. Please
    be sure to create the following secrets: "${HTTPS_SECRET}" containing the ${HTTPS_KEYSTORE}
    file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}" containing the
    ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications; "${SSO_TRUSTSTORE_SECRET}"
    containing the ${SSO_TRUSTSTORE} file used for securing RH-SSO requests.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.5 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso75-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.5 on OpenJDK + PostgreSQL
        (Ephemeral with passthrough TLS)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.5 on OpenJDK server based deployment,
        deployment configuration for PostgreSQL using ephemeral (temporary) storage,
        and securing RH-SSO communication using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.5.3.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso75-postgresql
    namespace: openshift
    resourceVersion: "21838"
    uid: 2e76da85-cc81-4890-818f-f83a7c778d7b
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
      labels:
        application: ${APPLICATION_NAME}
        component: database
      name: ${APPLICATION_NAME}-postgresql
    spec:
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            component: server
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_SERVICE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_JNDI
              value: ${DB_JNDI}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_DATABASE
              value: ${DB_DATABASE}
            - name: TX_DATABASE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            - name: SSO_TRUSTSTORE
              value: ${SSO_TRUSTSTORE}
            - name: SSO_TRUSTSTORE_DIR
              value: /etc/sso-secret-volume
            - name: SSO_TRUSTSTORE_PASSWORD
              value: ${SSO_TRUSTSTORE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
            - mountPath: /etc/sso-secret-volume
              name: sso-truststore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso75-openshift-rhel8:7.5
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
        component: database
      name: ${APPLICATION_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            component: database
            deploymentConfig: ${APPLICATION_NAME}-postgresql
          name: ${APPLICATION_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            - name: POSTGRESQL_DATABASE
              value: ${DB_DATABASE}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: postgresql
            imagePullPolicy: Always
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
            name: ${APPLICATION_NAME}-postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${APPLICATION_NAME}-data
          terminationGracePeriodSeconds: 60
          volumes:
          - emptyDir:
              medium: ""
            name: ${APPLICATION_NAME}-data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}-postgresql
          from:
            kind: ImageStreamTag
            name: postgresql13-for-sso75-openshift-rhel8:${POSTGRESQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: Database JNDI name used by application to resolve the datasource,
      e.g. java:/jboss/datasources/postgresql
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate (e.g. jboss)
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate (e.g. mykeystorepass)
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets
      the maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching
      data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate (e.g. secret-key)
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate (e.g. password)
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The name of the truststore file within the secret (e.g. truststore.jks)
    displayName: RH-SSO Trust Store
    name: SSO_TRUSTSTORE
  - description: The password for the truststore and certificate (e.g. mykeystorepass)
    displayName: RH-SSO Trust Store Password
    name: SSO_TRUSTSTORE_PASSWORD
  - description: The name of the secret containing the truststore file (e.g. truststore-secret).
      Used for volume secretName
    displayName: RH-SSO Trust Store Secret
    name: SSO_TRUSTSTORE_SECRET
    value: sso-app-secret
  - description: The tag to use for the "postgresql" image stream. Typically, this
      aligns with the major.minor version of PostgreSQL.
    displayName: PostgreSQL Image Stream Tag
    name: POSTGRESQL_IMAGE_STREAM_TAG
    required: true
    value: 13-el8
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.5.3.GA
    template: sso75-postgresql-persistent
  message: 'A new persistent RH-SSO service (using PostgreSQL) has been created in
    your project. The admin username/password for accessing the master realm via the
    RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password
    for accessing the PostgreSQL database "${DB_DATABASE}" is ${DB_USERNAME}/${DB_PASSWORD}.
    Please be sure to create the following secrets: "${HTTPS_SECRET}" containing the
    ${HTTPS_KEYSTORE} file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}"
    containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications;
    "${SSO_TRUSTSTORE_SECRET}" containing the ${SSO_TRUSTSTORE} file used for securing
    RH-SSO requests.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.5 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso75-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.5 on OpenJDK + PostgreSQL
        (Persistent with passthrough TLS)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.5 on OpenJDK server based deployment,
        deployment configuration for PostgreSQL using persistence, and securing RH-SSO
        communication using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.5.3.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso75-postgresql-persistent
    namespace: openshift
    resourceVersion: "21795"
    uid: 475195cd-42e5-46d1-855a-ec2075b2c045
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_SERVICE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_JNDI
              value: ${DB_JNDI}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_DATABASE
              value: ${DB_DATABASE}
            - name: TX_DATABASE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            - name: SSO_TRUSTSTORE
              value: ${SSO_TRUSTSTORE}
            - name: SSO_TRUSTSTORE_DIR
              value: /etc/sso-secret-volume
            - name: SSO_TRUSTSTORE_PASSWORD
              value: ${SSO_TRUSTSTORE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
            - mountPath: /etc/sso-secret-volume
              name: sso-truststore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso75-openshift-rhel8:7.5
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}-postgresql
          name: ${APPLICATION_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            - name: POSTGRESQL_DATABASE
              value: ${DB_DATABASE}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: postgresql
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 10
            name: ${APPLICATION_NAME}-postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              timeoutSeconds: 10
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${APPLICATION_NAME}-postgresql-pvol
          terminationGracePeriodSeconds: 60
          volumes:
          - name: ${APPLICATION_NAME}-postgresql-pvol
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-postgresql-claim
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}-postgresql
          from:
            kind: ImageStreamTag
            name: postgresql13-for-sso75-openshift-rhel8:${POSTGRESQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: Database JNDI name used by application to resolve the datasource,
      e.g. java:/jboss/datasources/postgresql
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate (e.g. jboss)
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate (e.g. mykeystorepass)
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets
      the maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching
      data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: Size of persistent storage for database volume.
    displayName: Database Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate (e.g. secret-key)
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate (e.g. password)
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The name of the truststore file within the secret (e.g. truststore.jks)
    displayName: RH-SSO Trust Store
    name: SSO_TRUSTSTORE
  - description: The password for the truststore and certificate (e.g. mykeystorepass)
    displayName: RH-SSO Trust Store Password
    name: SSO_TRUSTSTORE_PASSWORD
  - description: The name of the secret containing the truststore file (e.g. truststore-secret).
      Used for volume secretName
    displayName: RH-SSO Trust Store Secret
    name: SSO_TRUSTSTORE_SECRET
    value: sso-app-secret
  - description: The tag to use for the "postgresql" image stream. Typically, this
      aligns with the major.minor version of PostgreSQL.
    displayName: PostgreSQL Image Stream Tag
    name: POSTGRESQL_IMAGE_STREAM_TAG
    required: true
    value: 13-el8
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.6.1.GA
    template: sso76-https
  message: 'A new RH-SSO service has been created in your project. The admin username/password
    for accessing the master realm via the RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
    Please be sure to create the following secrets: "${HTTPS_SECRET}" containing the
    ${HTTPS_KEYSTORE} file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}"
    containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications;
    "${SSO_TRUSTSTORE_SECRET}" containing the ${SSO_TRUSTSTORE} file used for securing
    RH-SSO requests.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.6 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK (Ephemeral
        with passthrough TLS)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.6 on OpenJDK server based deployment,
        securing RH-SSO communication using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.6.1.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso76-https
    namespace: openshift
    resourceVersion: "21857"
    uid: dbfd988b-f16d-4abd-9d22-9d22b19c2328
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            - name: SSO_TRUSTSTORE
              value: ${SSO_TRUSTSTORE}
            - name: SSO_TRUSTSTORE_DIR
              value: /etc/sso-secret-volume
            - name: SSO_TRUSTSTORE_PASSWORD
              value: ${SSO_TRUSTSTORE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
            - mountPath: /etc/sso-secret-volume
              name: sso-truststore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso76-openshift-rhel8:7.6
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate (e.g. jboss)
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate (e.g. mykeystorepass)
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate (e.g. secret-key)
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate (e.g. password)
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The name of the truststore file within the secret (e.g. truststore.jks)
    displayName: RH-SSO Trust Store
    name: SSO_TRUSTSTORE
  - description: The password for the truststore and certificate (e.g. mykeystorepass)
    displayName: RH-SSO Trust Store Password
    name: SSO_TRUSTSTORE_PASSWORD
  - description: The name of the secret containing the truststore file (e.g. truststore-secret).
      Used for volume secretName
    displayName: RH-SSO Trust Store Secret
    name: SSO_TRUSTSTORE_SECRET
    value: sso-app-secret
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.6.1.GA
    template: sso76-ocp3-x509-https
  message: 'A new RH-SSO service has been created in your project. The admin username/password
    for accessing the master realm via the RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
    The HTTPS keystore used for serving secure content, the JGroups keystore used
    for securing JGroups communications, and server truststore used for securing RH-SSO
    requests were automatically created via OpenShift''s service serving x509 certificate
    secrets using the service-serving CA bundle from ''/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt''.
    Refer to: https://github.com/openshift/openshift-docs/blob/enterprise-4.1/release_notes/ocp-4-1-release-notes.adoc#service-ca-bundle-changes
    for additional details about this CA bundle.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.6 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK (Ephemeral)
        for OpenShift 3.X
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.6 on OpenJDK server based deployment,
        securing RH-SSO communication using re-encrypt TLS. It is intended to be used
        solely on OpenShift 3.X versions. For OpenShift 4.X variant of this template
        refer to 'sso76-ocp4-x509-https' one.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.6.1.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso76-ocp3-x509-https
    namespace: openshift
    resourceVersion: "21786"
    uid: 04b5f6e3-ce6b-4534-b191-2852e924c5e1
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        termination: reencrypt
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: X509_CA_BUNDLE
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
                /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/x509/https
              name: sso-x509-https-volume
              readOnly: true
            - mountPath: /etc/x509/jgroups
              name: sso-x509-jgroups-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: sso-x509-https-volume
            secret:
              secretName: sso-x509-https-secret
          - name: sso-x509-jgroups-volume
            secret:
              secretName: sso-x509-jgroups-secret
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso76-openshift-rhel8:7.6
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The password for the JGroups cluster.
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server admininistrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.6.1.GA
    template: sso76-ocp3-x509-postgresql-persistent
  message: 'A new persistent RH-SSO service (using SSL/TLS secured PostgreSQL) has
    been created in your project. The admin username/password for accessing the master
    realm via the RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The
    username/password for accessing the PostgreSQL database "${DB_DATABASE}" is ${DB_USERNAME}/${DB_PASSWORD}.
    The HTTPS keystore used for serving secure content, the JGroups keystore used
    for securing JGroups communications, the server truststore used for securing RH-SSO
    requests, and SSL/TLS certificate & private key used to run PostgreSQL server
    with SSL/TLS support were automatically created via OpenShift''s service serving
    x509 certificate secrets using the service-serving CA bundle from ''/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt''.
    Refer to: https://github.com/openshift/openshift-docs/blob/enterprise-4.1/release_notes/ocp-4-1-release-notes.adoc#service-ca-bundle-changes
    for additional details about this CA bundle.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.6 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK + PostgreSQL
        SSL/TLS (Persistent) for OpenShift 3.X
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.6 on OpenJDK server based deployment,
        deployment configuration for PostgreSQL using persistence and encrypted database
        connection, and securing RH-SSO communication using re-encrypt TLS. It is
        intended to be used solely on OpenShift 3.X versions. For OpenShift 4.X variant
        of this template refer to 'sso76-ocp4-x509-postgresql-persistent' one.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.6.1.GA
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso76-ocp3-x509-postgresql-persistent
    namespace: openshift
    resourceVersion: "21781"
    uid: 3bb28c66-63fd-4130-a562-f127830d2172
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        application: ${APPLICATION_NAME}-postgresql-ssl
      name: ${APPLICATION_NAME}-postgresql-ssl
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
        description: Build config to extend the vanilla PostgreSQL SQL database server
          container image with SSL/TLS support.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql-enable-ssl
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-postgresql-ssl:latest
      source:
        contextDir: ${POSTGRESQL_CONTEXT_DIR}
        git:
          ref: ${POSTGRESQL_SOURCE_REPOSITORY_REF}
          uri: ${POSTGRESQL_SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        sourceStrategy:
          env:
          - name: ARTIFACT_DIR
            value: ${ARTIFACT_DIR}
          - name: MAVEN_ARGS_APPEND
            value: ""
          forcePull: true
          from:
            kind: ImageStreamTag
            name: postgresql13-for-sso76-openshift-rhel8:${POSTGRESQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_WEBHOOK_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_WEBHOOK_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
        service.alpha.openshift.io/serving-cert-secret-name: postgresql-ssl-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        termination: reencrypt
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_SERVICE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_JNDI
              value: ${DB_JNDI}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_DATABASE
              value: ${DB_DATABASE}
            - name: TX_DATABASE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: X509_CA_BUNDLE
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
                /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/x509/https
              name: sso-x509-https-volume
              readOnly: true
            - mountPath: /etc/x509/jgroups
              name: sso-x509-jgroups-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: sso-x509-https-volume
            secret:
              secretName: sso-x509-https-secret
          - name: sso-x509-jgroups-volume
            secret:
              secretName: sso-x509-jgroups-secret
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso76-openshift-rhel8:7.6
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}-postgresql
          name: ${APPLICATION_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            - name: POSTGRESQL_DATABASE
              value: ${DB_DATABASE}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: postgresql
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 10
            name: ${APPLICATION_NAME}-postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - PGSSLMODE=require psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              timeoutSeconds: 10
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${APPLICATION_NAME}-postgresql-pvol
            - mountPath: /etc/pki/postgresql
              name: postgresql-ssl-volume
              readOnly: true
          terminationGracePeriodSeconds: 60
          volumes:
          - name: ${APPLICATION_NAME}-postgresql-pvol
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-postgresql-claim
          - name: postgresql-ssl-volume
            secret:
              secretName: postgresql-ssl-secret
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}-postgresql
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}-postgresql-ssl:latest
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The password for the JGroups cluster.
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Database JNDI name used by application to resolve the datasource,
      e.g. java:/jboss/datasources/postgresql
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets
      the maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching
      data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: Size of persistent storage for database volume.
    displayName: Database Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The tag to use for the "postgresql" image stream.  Typically, this
      aligns with the major.minor version of PostgreSQL.
    displayName: PostgreSQL Image Stream Tag
    name: POSTGRESQL_IMAGE_STREAM_TAG
    required: true
    value: 13-el8
  - description: Git source URI for the application extending PostgreSQL SQL server
      container image with SSL/TLS support.
    name: POSTGRESQL_SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/iankko/redhat-sso-7-openshift-image
  - description: Git branch/tag reference for the application extending PostgreSQL
      SQL server container image with SSL/TLS support.
    name: POSTGRESQL_SOURCE_REPOSITORY_REF
    required: true
    value: KEYCLOAK-15633
  - description: Path within the Git project to build the application extending PostgreSQL
      SQL server container image with SSL/TLS support.
    name: POSTGRESQL_CONTEXT_DIR
    required: true
    value: s2i/postgresql/enable-ssl
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.6.1.GA
    template: sso76-ocp4-x509-https
  message: 'A new RH-SSO service has been created in your project. The admin username/password
    for accessing the master realm via the RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
    The HTTPS keystore used for serving secure content, the JGroups keystore used
    for securing JGroups communications, and server truststore used for securing RH-SSO
    requests were automatically created via OpenShift''s service serving x509 certificate
    secrets by using a CA bundle that is automatically injected into any configMap
    annotated with ''service.beta.openshift.io/inject-cabundle=true'' annotation.
    Refer to: https://github.com/openshift/openshift-docs/blob/enterprise-4.1/release_notes/ocp-4-1-release-notes.adoc#service-ca-bundle-changes
    for additional details about this CA bundle.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.6 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK (Ephemeral)
        for OpenShift 4.X
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.6 on OpenJDK server based deployment,
        securing RH-SSO communication using re-encrypt TLS. It is intended to be used
        solely on OpenShift 4.X versions. For OpenShift 3.X variant of this template
        refer to 'sso76-ocp3-x509-https' one.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.6.1.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso76-ocp4-x509-https
    namespace: openshift
    resourceVersion: "21803"
    uid: 5b0c403b-2c57-4294-b6f4-1efe74c09570
  objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      annotations:
        description: ConfigMap providing service ca bundle.
        service.beta.openshift.io/inject-cabundle: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-service-ca
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        termination: reencrypt
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: X509_CA_BUNDLE
              value: /var/run/configmaps/service-ca/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/x509/https
              name: sso-x509-https-volume
              readOnly: true
            - mountPath: /etc/x509/jgroups
              name: sso-x509-jgroups-volume
              readOnly: true
            - mountPath: /var/run/configmaps/service-ca
              name: service-ca
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: sso-x509-https-volume
            secret:
              secretName: sso-x509-https-secret
          - name: sso-x509-jgroups-volume
            secret:
              secretName: sso-x509-jgroups-secret
          - configMap:
              name: ${APPLICATION_NAME}-service-ca
            name: service-ca
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso76-openshift-rhel8:7.6
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The password for the JGroups cluster.
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server admininistrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.6.1.GA
    template: sso76-ocp4-x509-postgresql-persistent
  message: 'A new persistent RH-SSO service (using PostgreSQL) has been created in
    your project. The admin username/password for accessing the master realm via the
    RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password
    for accessing the PostgreSQL database "${DB_DATABASE}" is ${DB_USERNAME}/${DB_PASSWORD}.
    The HTTPS keystore used for serving secure content, the JGroups keystore used
    for securing JGroups communications, and server truststore used for securing RH-SSO
    requests were automatically created via OpenShift''s service serving x509 certificate
    secrets by using a CA bundle that is automatically injected into any configMap
    annotated with ''service.beta.openshift.io/inject-cabundle=true'' annotation.
    Refer to: https://github.com/openshift/openshift-docs/blob/enterprise-4.1/release_notes/ocp-4-1-release-notes.adoc#service-ca-bundle-changes
    for additional details about this CA bundle.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.6 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK + PostgreSQL
        (Persistent) for OpenShift 4.X
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.6 on OpenJDK server based deployment,
        deployment configuration for PostgreSQL using persistence, and securing RH-SSO
        communication using re-encrypt TLS. It is intended to be used solely on OpenShift
        4.X versions. For OpenShift 3.X variant of this template refer to 'sso76-ocp3-x509-postgresql-persistent'
        one.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.6.1.GA
    creationTimestamp: "2023-07-18T13:46:48Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso76-ocp4-x509-postgresql-persistent
    namespace: openshift
    resourceVersion: "21864"
    uid: 3711ea2c-2d9d-4a55-9e07-ba000bafc226
  objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      annotations:
        description: ConfigMap providing service ca bundle.
        service.beta.openshift.io/inject-cabundle: "true"
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-service-ca
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      tls:
        termination: reencrypt
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_SERVICE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_JNDI
              value: ${DB_JNDI}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_DATABASE
              value: ${DB_DATABASE}
            - name: TX_DATABASE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: X509_CA_BUNDLE
              value: /var/run/configmaps/service-ca/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/x509/https
              name: sso-x509-https-volume
              readOnly: true
            - mountPath: /etc/x509/jgroups
              name: sso-x509-jgroups-volume
              readOnly: true
            - mountPath: /var/run/configmaps/service-ca
              name: service-ca
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: sso-x509-https-volume
            secret:
              secretName: sso-x509-https-secret
          - name: sso-x509-jgroups-volume
            secret:
              secretName: sso-x509-jgroups-secret
          - configMap:
              name: ${APPLICATION_NAME}-service-ca
            name: service-ca
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso76-openshift-rhel8:7.6
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}-postgresql
          name: ${APPLICATION_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            - name: POSTGRESQL_DATABASE
              value: ${DB_DATABASE}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: postgresql
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 10
            name: ${APPLICATION_NAME}-postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              timeoutSeconds: 10
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${APPLICATION_NAME}-postgresql-pvol
          terminationGracePeriodSeconds: 60
          volumes:
          - name: ${APPLICATION_NAME}-postgresql-pvol
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-postgresql-claim
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}-postgresql
          from:
            kind: ImageStreamTag
            name: postgresql13-for-sso76-openshift-rhel8:${POSTGRESQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The password for the JGroups cluster.
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Database JNDI name used by application to resolve the datasource,
      e.g. java:/jboss/datasources/postgresql
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets
      the maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching
      data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: Size of persistent storage for database volume.
    displayName: Database Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The tag to use for the "postgresql" image stream.  Typically, this
      aligns with the major.minor version of PostgreSQL.
    displayName: PostgreSQL Image Stream Tag
    name: POSTGRESQL_IMAGE_STREAM_TAG
    required: true
    value: 13-el8
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.6.1.GA
    template: sso76-postgresql
  message: 'A new RH-SSO service (using PostgreSQL) has been created in your project.
    The admin username/password for accessing the master realm via the RH-SSO console
    is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password for accessing
    the PostgreSQL database "${DB_DATABASE}" is ${DB_USERNAME}/${DB_PASSWORD}. Please
    be sure to create the following secrets: "${HTTPS_SECRET}" containing the ${HTTPS_KEYSTORE}
    file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}" containing the
    ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications; "${SSO_TRUSTSTORE_SECRET}"
    containing the ${SSO_TRUSTSTORE} file used for securing RH-SSO requests.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.6 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK + PostgreSQL
        (Ephemeral with passthrough TLS)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.6 on OpenJDK server based deployment,
        deployment configuration for PostgreSQL using ephemeral (temporary) storage,
        and securing RH-SSO communication using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.6.1.GA
    creationTimestamp: "2023-07-18T13:46:46Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso76-postgresql
    namespace: openshift
    resourceVersion: "21806"
    uid: 36a2548a-b539-4e69-9526-84eb1d5d20a6
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
      labels:
        application: ${APPLICATION_NAME}
        component: database
      name: ${APPLICATION_NAME}-postgresql
    spec:
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
        component: server
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            component: server
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_SERVICE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_JNDI
              value: ${DB_JNDI}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_DATABASE
              value: ${DB_DATABASE}
            - name: TX_DATABASE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            - name: SSO_TRUSTSTORE
              value: ${SSO_TRUSTSTORE}
            - name: SSO_TRUSTSTORE_DIR
              value: /etc/sso-secret-volume
            - name: SSO_TRUSTSTORE_PASSWORD
              value: ${SSO_TRUSTSTORE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
            - mountPath: /etc/sso-secret-volume
              name: sso-truststore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso76-openshift-rhel8:7.6
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
        component: database
      name: ${APPLICATION_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            component: database
            deploymentConfig: ${APPLICATION_NAME}-postgresql
          name: ${APPLICATION_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            - name: POSTGRESQL_DATABASE
              value: ${DB_DATABASE}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: postgresql
            imagePullPolicy: Always
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
            name: ${APPLICATION_NAME}-postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${APPLICATION_NAME}-data
          terminationGracePeriodSeconds: 60
          volumes:
          - emptyDir:
              medium: ""
            name: ${APPLICATION_NAME}-data
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}-postgresql
          from:
            kind: ImageStreamTag
            name: postgresql13-for-sso76-openshift-rhel8:${POSTGRESQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: Database JNDI name used by application to resolve the datasource,
      e.g. java:/jboss/datasources/postgresql
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate (e.g. jboss)
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate (e.g. mykeystorepass)
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets
      the maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching
      data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate (e.g. secret-key)
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate (e.g. password)
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The name of the truststore file within the secret (e.g. truststore.jks)
    displayName: RH-SSO Trust Store
    name: SSO_TRUSTSTORE
  - description: The password for the truststore and certificate (e.g. mykeystorepass)
    displayName: RH-SSO Trust Store Password
    name: SSO_TRUSTSTORE_PASSWORD
  - description: The name of the secret containing the truststore file (e.g. truststore-secret).
      Used for volume secretName
    displayName: RH-SSO Trust Store Secret
    name: SSO_TRUSTSTORE_SECRET
    value: sso-app-secret
  - description: The tag to use for the "postgresql" image stream. Typically, this
      aligns with the major.minor version of PostgreSQL.
    displayName: PostgreSQL Image Stream Tag
    name: POSTGRESQL_IMAGE_STREAM_TAG
    required: true
    value: 13-el8
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  labels:
    rhsso: 7.6.1.GA
    template: sso76-postgresql-persistent
  message: 'A new persistent RH-SSO service (using PostgreSQL) has been created in
    your project. The admin username/password for accessing the master realm via the
    RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password
    for accessing the PostgreSQL database "${DB_DATABASE}" is ${DB_USERNAME}/${DB_PASSWORD}.
    Please be sure to create the following secrets: "${HTTPS_SECRET}" containing the
    ${HTTPS_KEYSTORE} file used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}"
    containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications;
    "${SSO_TRUSTSTORE_SECRET}" containing the ${SSO_TRUSTSTORE} file used for securing
    RH-SSO requests.'
  metadata:
    annotations:
      description: An example application based on RH-SSO 7.6 on OpenJDK image. For
        more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
      iconClass: icon-sso
      openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK + PostgreSQL
        (Persistent with passthrough TLS)
      openshift.io/provider-display-name: Red Hat, Inc.
      samples.operator.openshift.io/version: 4.12.0
      tags: sso,keycloak,jboss,hidden
      template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
      template.openshift.io/long-description: This template defines resources needed
        to develop Red Hat Single Sign-On 7.6 on OpenJDK server based deployment,
        deployment configuration for PostgreSQL using persistence, and securing RH-SSO
        communication using passthrough TLS.
      template.openshift.io/support-url: https://access.redhat.com
      version: 7.6.1.GA
    creationTimestamp: "2023-07-18T13:46:47Z"
    labels:
      samples.operator.openshift.io/managed: "true"
    name: sso76-postgresql-persistent
    namespace: openshift
    resourceVersion: "21878"
    uid: 34390a2d-bc66-4a3c-a1d8-d9c05895589d
  objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
      - port: 8080
        targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-postgresql",
          "kind": "Service"}]'
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      ports:
      - port: 8443
        targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The database server's port.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      ports:
      - port: 5432
        targetPort: 5432
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
      - name: ping
        port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}
  - apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: secure-${APPLICATION_NAME}
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: passthrough
      to:
        name: secure-${APPLICATION_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
            - name: SSO_HOSTNAME
              value: ${SSO_HOSTNAME}
            - name: DB_SERVICE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_JNDI
              value: ${DB_JNDI}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_DATABASE
              value: ${DB_DATABASE}
            - name: TX_DATABASE_PREFIX_MAPPING
              value: ${APPLICATION_NAME}-postgresql=DB
            - name: DB_MIN_POOL_SIZE
              value: ${DB_MIN_POOL_SIZE}
            - name: DB_MAX_POOL_SIZE
              value: ${DB_MAX_POOL_SIZE}
            - name: DB_TX_ISOLATION
              value: ${DB_TX_ISOLATION}
            - name: JGROUPS_PING_PROTOCOL
              value: openshift.DNS_PING
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: ${APPLICATION_NAME}-ping
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
            - name: HTTPS_KEYSTORE_DIR
              value: /etc/eap-secret-volume
            - name: HTTPS_KEYSTORE
              value: ${HTTPS_KEYSTORE}
            - name: HTTPS_KEYSTORE_TYPE
              value: ${HTTPS_KEYSTORE_TYPE}
            - name: HTTPS_NAME
              value: ${HTTPS_NAME}
            - name: HTTPS_PASSWORD
              value: ${HTTPS_PASSWORD}
            - name: JGROUPS_ENCRYPT_SECRET
              value: ${JGROUPS_ENCRYPT_SECRET}
            - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
              value: /etc/jgroups-encrypt-secret-volume
            - name: JGROUPS_ENCRYPT_KEYSTORE
              value: ${JGROUPS_ENCRYPT_KEYSTORE}
            - name: JGROUPS_ENCRYPT_NAME
              value: ${JGROUPS_ENCRYPT_NAME}
            - name: JGROUPS_ENCRYPT_PASSWORD
              value: ${JGROUPS_ENCRYPT_PASSWORD}
            - name: JGROUPS_CLUSTER_PASSWORD
              value: ${JGROUPS_CLUSTER_PASSWORD}
            - name: SSO_ADMIN_USERNAME
              value: ${SSO_ADMIN_USERNAME}
            - name: SSO_ADMIN_PASSWORD
              value: ${SSO_ADMIN_PASSWORD}
            - name: SSO_REALM
              value: ${SSO_REALM}
            - name: SSO_SERVICE_USERNAME
              value: ${SSO_SERVICE_USERNAME}
            - name: SSO_SERVICE_PASSWORD
              value: ${SSO_SERVICE_PASSWORD}
            - name: SSO_TRUSTSTORE
              value: ${SSO_TRUSTSTORE}
            - name: SSO_TRUSTSTORE_DIR
              value: /etc/sso-secret-volume
            - name: SSO_TRUSTSTORE_PASSWORD
              value: ${SSO_TRUSTSTORE_PASSWORD}
            image: ${APPLICATION_NAME}
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/livenessProbe.sh
              initialDelaySeconds: 60
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8778
              name: jolokia
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8888
              name: ping
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/bash
                - -c
                - /opt/eap/bin/readinessProbe.sh
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            volumeMounts:
            - mountPath: /etc/eap-secret-volume
              name: eap-keystore-volume
              readOnly: true
            - mountPath: /etc/jgroups-encrypt-secret-volume
              name: eap-jgroups-keystore-volume
              readOnly: true
            - mountPath: /etc/sso-secret-volume
              name: sso-truststore-volume
              readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: sso76-openshift-rhel8:7.6
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}-postgresql
          name: ${APPLICATION_NAME}-postgresql
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            - name: POSTGRESQL_DATABASE
              value: ${DB_DATABASE}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
              value: ${POSTGRESQL_MAX_CONNECTIONS}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: ${POSTGRESQL_SHARED_BUFFERS}
            image: postgresql
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 10
            name: ${APPLICATION_NAME}-postgresql
            ports:
            - containerPort: 5432
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE
                  -c 'SELECT 1'
              failureThreshold: 3
              initialDelaySeconds: 90
              'successThreshold:': 1
              timeoutSeconds: 10
            volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ${APPLICATION_NAME}-postgresql-pvol
          terminationGracePeriodSeconds: 60
          volumes:
          - name: ${APPLICATION_NAME}-postgresql-pvol
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}-postgresql-claim
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APPLICATION_NAME}-postgresql
          from:
            kind: ImageStreamTag
            name: postgresql13-for-sso76-openshift-rhel8:${POSTGRESQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-postgresql-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
  parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: 'Custom hostname for http service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: 'Custom hostname for https service route. Leave blank for default
      hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: Database JNDI name used by application to resolve the datasource,
      e.g. java:/jboss/datasources/postgresql
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: The name of the secret containing the keystore file
    displayName: Server Keystore Secret Name
    name: HTTPS_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: Server Keystore Filename
    name: HTTPS_KEYSTORE
    value: keystore.jks
  - description: The type of the keystore file (JKS or JCEKS)
    displayName: Server Keystore Type
    name: HTTPS_KEYSTORE_TYPE
  - description: The name associated with the server certificate (e.g. jboss)
    displayName: Server Certificate Name
    name: HTTPS_NAME
  - description: The password for the keystore and certificate (e.g. mykeystorepass)
    displayName: Server Keystore Password
    name: HTTPS_PASSWORD
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets
      the maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching
      data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: Size of persistent storage for database volume.
    displayName: Database Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: The name of the secret containing the keystore file
    displayName: JGroups Secret Name
    name: JGROUPS_ENCRYPT_SECRET
    value: sso-app-secret
  - description: The name of the keystore file within the secret
    displayName: JGroups Keystore Filename
    name: JGROUPS_ENCRYPT_KEYSTORE
    value: jgroups.jceks
  - description: The name associated with the server certificate (e.g. secret-key)
    displayName: JGroups Certificate Name
    name: JGROUPS_ENCRYPT_NAME
  - description: The password for the keystore and certificate (e.g. password)
    displayName: JGroups Keystore Password
    name: JGROUPS_ENCRYPT_PASSWORD
  - description: JGroups cluster password
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images
      are installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in
      a different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: The name of the truststore file within the secret (e.g. truststore.jks)
    displayName: RH-SSO Trust Store
    name: SSO_TRUSTSTORE
  - description: The password for the truststore and certificate (e.g. mykeystorepass)
    displayName: RH-SSO Trust Store Password
    name: SSO_TRUSTSTORE_PASSWORD
  - description: The name of the secret containing the truststore file (e.g. truststore-secret).
      Used for volume secretName
    displayName: RH-SSO Trust Store Secret
    name: SSO_TRUSTSTORE_SECRET
    value: sso-app-secret
  - description: The tag to use for the "postgresql" image stream. Typically, this
      aligns with the major.minor version of PostgreSQL.
    displayName: PostgreSQL Image Stream Tag
    name: POSTGRESQL_IMAGE_STREAM_TAG
    required: true
    value: 13-el8
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 10 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win10: Microsoft Windows 10
      openshift.io/display-name: Microsoft Windows 10 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: windows10-desktop-large
    namespace: openshift
    resourceVersion: "1333981"
    uid: aada86b4-a96d-4873-9a5c-5d3837492e67
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 2147483648
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows10-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows10
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win10
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 10 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win10: Microsoft Windows 10
      openshift.io/display-name: Microsoft Windows 10 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:53Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win10: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: windows10-desktop-medium
    namespace: openshift
    resourceVersion: "1333983"
    uid: 2858ca0a-e0c6-490f-83b3-b65c79fccb6b
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 2147483648
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows10-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows10
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win10
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 10 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win10: Microsoft Windows 10
      openshift.io/display-name: Microsoft Windows 10 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows10-highperformance-large
    namespace: openshift
    resourceVersion: "1333984"
    uid: 6f46db88-8023-44b9-933a-8a3eb9a925cf
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 2147483648
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows10-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows10
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win10
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 10 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win10: Microsoft Windows 10
      openshift.io/display-name: Microsoft Windows 10 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:53Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win10: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows10-highperformance-medium
    namespace: openshift
    resourceVersion: "1333986"
    uid: 553056d6-3d64-495a-ad35-afbad686dd47
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 2147483648
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows10-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows10
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win10
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 11 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win11: Microsoft Windows 11
      openshift.io/display-name: Microsoft Windows 11 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win11: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: windows11-desktop-large
    namespace: openshift
    resourceVersion: "1333987"
    uid: b1d36dd6-d778-409f-b6e5-f3b9de046f84
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 4294967296
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }, {
              "name": "minimal-required-cores",
              "path": "jsonpath::.spec.domain.cpu.cores",
              "rule": "integer",
              "message": "This VM requires more cores.",
              "min": 2
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows11-desktop-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 64Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows11
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 2
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win11
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 11 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win11: Microsoft Windows 11
      openshift.io/display-name: Microsoft Windows 11 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win11: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/desktop: "true"
    name: windows11-desktop-medium
    namespace: openshift
    resourceVersion: "1333989"
    uid: 7cf4931a-db97-4b68-a3ce-c3791a7bfa89
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 4294967296
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }, {
              "name": "minimal-required-cores",
              "path": "jsonpath::.spec.domain.cpu.cores",
              "rule": "integer",
              "message": "This VM requires more cores.",
              "min": 2
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows11-desktop-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 64Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows11
            vm.kubevirt.io/workload: desktop
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 2
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win11
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 11 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win11: Microsoft Windows 11
      openshift.io/display-name: Microsoft Windows 11 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win11: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows11-highperformance-large
    namespace: openshift
    resourceVersion: "1333990"
    uid: d9fa86c3-02c7-48ce-8697-82faeadcaa07
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 4294967296
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }, {
              "name": "minimal-required-cores",
              "path": "jsonpath::.spec.domain.cpu.cores",
              "rule": "integer",
              "message": "This VM requires more cores.",
              "min": 2
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows11-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 64Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows11
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 2
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win11
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows 11 VM. A PVC with the Windows disk
        image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win11: Microsoft Windows 11
      openshift.io/display-name: Microsoft Windows 11 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win11: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows11-highperformance-medium
    namespace: openshift
    resourceVersion: "1333991"
    uid: e293f3fd-fa7a-490e-ad3d-0825311b8503
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 4294967296
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }, {
              "name": "minimal-required-cores",
              "path": "jsonpath::.spec.domain.cpu.cores",
              "rule": "integer",
              "message": "This VM requires more cores.",
              "min": 2
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows11-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 64Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows11
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 2
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win11
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2012 R2 VM. A PVC with the
        Windows disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
      openshift.io/display-name: Microsoft Windows Server 2012 R2 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k12r2: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k12r2-highperformance-large
    namespace: openshift
    resourceVersion: "1333992"
    uid: 1f7c97ce-40b3-4144-a74c-3f5c9f483a3d
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k12r2-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k12r2
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k12r2
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2012 R2 VM. A PVC with the
        Windows disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
      openshift.io/display-name: Microsoft Windows Server 2012 R2 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k12r2: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k12r2-highperformance-medium
    namespace: openshift
    resourceVersion: "1333993"
    uid: 511836bc-63b6-442e-9016-b1bab4bf5f6d
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k12r2-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k12r2
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k12r2
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2012 R2 VM. A PVC with the
        Windows disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
      openshift.io/display-name: Microsoft Windows Server 2012 R2 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:53Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k12r2: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k12r2-server-large
    namespace: openshift
    resourceVersion: "1333994"
    uid: cdc540b3-bb79-4e3c-9671-4f98aece447f
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k12r2-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k12r2
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k12r2
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2012 R2 VM. A PVC with the
        Windows disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k12r2: Microsoft Windows Server 2012 R2
      openshift.io/display-name: Microsoft Windows Server 2012 R2 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k12r2: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k12r2-server-medium
    namespace: openshift
    resourceVersion: "1333995"
    uid: 3f752b66-c037-460c-93b1-3824d99a3a57
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k12r2-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k12r2
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k12r2
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2016 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k16: Microsoft Windows Server 2016
      openshift.io/display-name: Microsoft Windows Server 2016 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k16: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k16-highperformance-large
    namespace: openshift
    resourceVersion: "1333996"
    uid: 616c41da-e08a-4887-92ef-56b9784bed07
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k16-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k16
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k16
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2016 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k16: Microsoft Windows Server 2016
      openshift.io/display-name: Microsoft Windows Server 2016 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k16: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k16-highperformance-medium
    namespace: openshift
    resourceVersion: "1333998"
    uid: fc1eca02-1e1d-405c-aaa5-4b20361e87b5
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k16-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k16
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k16
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2016 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k16: Microsoft Windows Server 2016
      openshift.io/display-name: Microsoft Windows Server 2016 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k16: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k16-server-large
    namespace: openshift
    resourceVersion: "1333999"
    uid: 412162c7-d96a-43d5-a0ad-d92f146d866e
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k16-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k16
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k16
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2016 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k16: Microsoft Windows Server 2016
      openshift.io/display-name: Microsoft Windows Server 2016 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k16: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k16-server-medium
    namespace: openshift
    resourceVersion: "1334000"
    uid: b350d1ff-365b-4f3c-83e6-ad239071e088
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k16-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k16
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k16
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2019 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k19: Microsoft Windows Server 2019
      openshift.io/display-name: Microsoft Windows Server 2019 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k19: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k19-highperformance-large
    namespace: openshift
    resourceVersion: "1334002"
    uid: a6369808-a894-4559-ab8d-2da18a55f2ac
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k19-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k19
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k19
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2019 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k19: Microsoft Windows Server 2019
      openshift.io/display-name: Microsoft Windows Server 2019 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k19: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k19-highperformance-medium
    namespace: openshift
    resourceVersion: "1334006"
    uid: 75f4b665-1dc7-486e-83a4-5749a3f7c236
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k19-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k19
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k19
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2019 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k19: Microsoft Windows Server 2019
      openshift.io/display-name: Microsoft Windows Server 2019 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k19: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k19-server-large
    namespace: openshift
    resourceVersion: "1334008"
    uid: 07689755-a335-4eff-a2a4-c9f94e13e4b0
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k19-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k19
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k19
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2019 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k19: Microsoft Windows Server 2019
      openshift.io/display-name: Microsoft Windows Server 2019 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat
      template.kubevirt.io/provider-support-level: Full
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k19: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k19-server-medium
    namespace: openshift
    resourceVersion: "1334009"
    uid: be2b20ce-3bfc-4377-beaa-87828a6210fb
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k19-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k19
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k19
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2022 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k22: Microsoft Windows Server 2022
      openshift.io/display-name: Microsoft Windows Server 2022 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k22: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k22-highperformance-large
    namespace: openshift
    resourceVersion: "1334010"
    uid: 5e44c7a9-7d9b-4f9c-a5e7-6a6bf0dd950a
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k22-highperformance-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k22
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k22
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2022 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k22: Microsoft Windows Server 2022
      openshift.io/display-name: Microsoft Windows Server 2022 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k22: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/highperformance: "true"
    name: windows2k22-highperformance-medium
    namespace: openshift
    resourceVersion: "1334011"
    uid: fe76fd8f-bf1e-41b2-8138-ee80e8e172dc
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k22-highperformance-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k22
            vm.kubevirt.io/workload: highperformance
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              dedicatedCpuPlacement: true
              isolateEmulatorThread: true
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: virtio
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: virtio
                name: default
              networkInterfaceMultiqueue: true
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k22
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2022 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k22: Microsoft Windows Server 2022
      openshift.io/display-name: Microsoft Windows Server 2022 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/large: "true"
      os.template.kubevirt.io/win2k22: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k22-server-large
    namespace: openshift
    resourceVersion: "1334012"
    uid: 1a5ddd0d-dbd6-4bd3-9ece-aadc8c087996
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k22-server-large
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: large
            vm.kubevirt.io/os: windows2k22
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: large
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 2
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 8Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k22
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
- apiVersion: template.openshift.io/v1
  kind: Template
  metadata:
    annotations:
      defaults.template.kubevirt.io/disk: rootdisk
      defaults.template.kubevirt.io/network: default
      description: Template for Microsoft Windows Server 2022 VM. A PVC with the Windows
        disk image must be available.
      iconClass: icon-windows
      name.os.template.kubevirt.io/win2k22: Microsoft Windows Server 2022
      openshift.io/display-name: Microsoft Windows Server 2022 VM
      openshift.io/documentation-url: https://github.com/kubevirt/common-templates
      openshift.io/provider-display-name: Red Hat - Tech Preview
      openshift.io/support-url: https://github.com/kubevirt/common-templates/issues
      operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
      operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
      tags: hidden,kubevirt,virtualmachine,windows
      template.kubevirt.io/editable: |
        /objects[0].spec.template.spec.domain.cpu.cores
        /objects[0].spec.template.spec.domain.resources.requests.memory
        /objects[0].spec.template.spec.domain.devices.disks
        /objects[0].spec.template.spec.volumes
        /objects[0].spec.template.spec.networks
      template.kubevirt.io/provider: Red Hat - Tech Preview
      template.kubevirt.io/provider-support-level: Experimental
      template.kubevirt.io/provider-url: https://www.redhat.com
      template.kubevirt.io/version: v1alpha1
      template.openshift.io/bindable: "false"
    creationTimestamp: "2023-07-19T16:22:54Z"
    labels:
      app.kubernetes.io/component: templating
      app.kubernetes.io/managed-by: ssp-operator
      app.kubernetes.io/name: common-templates
      app.kubernetes.io/part-of: hyperconverged-cluster
      app.kubernetes.io/version: 4.12.4
      flavor.template.kubevirt.io/medium: "true"
      os.template.kubevirt.io/win2k22: "true"
      template.kubevirt.io/default-os-variant: "true"
      template.kubevirt.io/type: base
      template.kubevirt.io/version: v0.24.2
      workload.template.kubevirt.io/server: "true"
    name: windows2k22-server-medium
    namespace: openshift
    resourceVersion: "1334014"
    uid: 240c8697-ca20-41f5-86ab-c07873bee669
  objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.resources.requests.memory",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 536870912
            }, {
              "name": "windows-virtio-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "virtio disk bus type has better performance, install virtio drivers in VM and change bus type",
              "values": ["virtio"],
              "justWarning": true
            }, {
              "name": "windows-disk-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].disk.bus",
              "rule": "enum",
              "message": "disk bus has to be either virtio or sata or scsi",
              "values": ["virtio", "sata", "scsi"]
            }, {
              "name": "windows-cd-bus",
              "path": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "valid": "jsonpath::.spec.domain.devices.disks[*].cdrom.bus",
              "rule": "enum",
              "message": "cd bus has to be sata",
              "values": ["sata"]
            }
          ]
      labels:
        app: ${NAME}
        vm.kubevirt.io/template: windows2k22-server-medium
        vm.kubevirt.io/template.revision: "1"
        vm.kubevirt.io/template.version: v0.24.2
      name: ${NAME}
    spec:
      dataVolumeTemplates:
      - apiVersion: cdi.kubevirt.io/v1beta1
        kind: DataVolume
        metadata:
          name: ${NAME}
        spec:
          sourceRef:
            kind: DataSource
            name: ${DATA_SOURCE_NAME}
            namespace: ${DATA_SOURCE_NAMESPACE}
          storage:
            resources:
              requests:
                storage: 60Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: windows2k22
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: ${NAME}
            kubevirt.io/size: medium
        spec:
          domain:
            clock:
              timer:
                hpet:
                  present: false
                hyperv: {}
                pit:
                  tickPolicy: delay
                rtc:
                  tickPolicy: catchup
              utc: {}
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
              - disk:
                  bus: sata
                name: rootdisk
              inputs:
              - bus: usb
                name: tablet
                type: tablet
              interfaces:
              - masquerade: {}
                model: e1000e
                name: default
              tpm: {}
            features:
              acpi: {}
              apic: {}
              hyperv:
                frequencies: {}
                ipi: {}
                reenlightenment: {}
                relaxed: {}
                reset: {}
                runtime: {}
                spinlocks:
                  spinlocks: 8191
                synic: {}
                synictimer:
                  direct: {}
                tlbflush: {}
                vapic: {}
                vpindex: {}
              smm: {}
            firmware:
              bootloader:
                efi:
                  secureBoot: true
            machine:
              type: pc-q35-rhel8.6.0
            resources:
              requests:
                memory: 4Gi
          evictionStrategy: LiveMigrate
          networks:
          - name: default
            pod: {}
          terminationGracePeriodSeconds: 3600
          volumes:
          - dataVolume:
              name: ${NAME}
            name: rootdisk
  parameters:
  - description: VM name
    from: windows-[a-z0-9]{6}
    generate: expression
    name: NAME
  - description: Name of the DataSource to clone
    name: DATA_SOURCE_NAME
    value: win2k22
  - description: Namespace of the DataSource
    name: DATA_SOURCE_NAMESPACE
    value: openshift-virtualization-os-images
kind: List
metadata:
  resourceVersion: ""
